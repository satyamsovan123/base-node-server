var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.426,1,0.83]],["body/components/AppComponent.html",[0,0.758,1,1.219,2,1.244,3,0.282,4,0.243,5,0.929,6,0.929,7,0.929,8,0.929,9,0.206,10,1.883,11,0.541,12,3.726,13,2.46,14,1.873,15,2.502,16,0.929,17,2.218,18,1.825,19,1.372,20,4.005,21,1.372,22,3.369,23,0.416,24,0.541,25,4.938,26,2.624,27,0.928,28,2.763,29,1.104,30,1.268,31,1.445,32,1.219,33,2.281,34,0.629,35,0.039,36,1.104,37,0.583,38,0.569,39,1.361,40,1.991,41,2.207,42,3.369,43,2.281,44,0.928,45,2.104,46,2.104,47,0.928,48,2.781,49,1.516,50,1.873,51,1.873,52,3.369,53,3.369,54,2.781,55,2.781,56,1.244,57,1.883,58,0.629,59,1.244,60,3.143,61,1.104,62,1.219,63,2.502,64,2.281,65,1.244,66,1.244,67,2.763,68,1.873,69,0.643,70,3.369,71,2.281,72,1.681,73,2.781,74,0.901,75,0.461,76,2.281,77,1.425,78,1.883,79,0.282,80,0.513,81,0.629,82,0.929,83,1.883,84,2.281,85,2.281,86,2.281,87,2.281,88,2.281,89,2.781,90,2.781,91,3.369,92,2.281,93,2.781,94,3.895,95,2.281,96,4.938,97,4.217,98,2.781,99,3.369,100,4.329,101,4.423,102,3.306,103,3.369,104,4.938,105,4.005,106,1.621,107,1.621,108,3.143,109,4.005,110,2.281,111,3.895,112,1.621,113,1.621,114,1.621,115,1.883,116,1.621,117,1.883,118,2.281,119,3.651,120,2.781,121,2.781,122,2.781,123,3.369,124,4.423,125,2.281,126,2.281,127,2.781,128,2.281,129,2.281,130,2.281,131,2.281,132,2.281,133,2.281,134,2.281,135,2.281,136,1.883,137,2.281,138,2.281,139,1.883,140,1.883,141,1.883,142,3.369,143,3.369,144,3.306,145,2.281,146,2.281,147,2.281,148,2.281,149,1.883,150,2.781,151,1.883,152,2.281,153,1.621,154,2.281,155,1.883,156,1.883,157,2.281,158,1.883,159,2.281,160,1.883,161,1.883,162,1.883,163,1.621,164,1.883,165,1.883,166,2.281,167,1.883,168,1.268,169,1.883,170,0.764,171,1.372,172,1.372,173,0.929,174,1.802,175,0.929,176,0.929,177,0.569,178,1.372,179,0.629,180,0.929,181,0.629,182,0.929,183,0.569,184,0.694,185,0.569,186,0.929,187,0.569,188,0.929,189,0.629,190,0.842,191,0.929,192,0.929,193,0.929,194,0.021,195,0.021]],["title/modules/AppModule.html",[196,1.881,197,1.503]],["body/modules/AppModule.html",[1,1.631,3,0.388,4,0.335,9,0.283,18,1.052,35,0.039,68,1.746,72,1.567,74,1.353,75,0.635,79,0.388,80,0.706,170,1.052,177,1.366,179,1.51,181,1.51,183,1.366,185,1.366,187,1.366,189,1.51,194,0.026,195,0.026,196,1.962,197,3.093,198,1.746,199,1.962,200,3.937,201,3.937,202,3.937,203,2.231,204,2.592,205,2.592,206,2.592,207,2.592,208,2.592,209,3.047,210,2.734,211,3.047,212,3.485,213,2.231,214,1.279,215,3.14,216,3.485,217,3.485,218,4.222,219,2.592,220,3.14,221,3.14,222,2.592,223,2.592,224,2.592,225,1.962,226,3.485,227,2.592,228,1.962,229,3.14,230,4.222,231,2.592,232,4.222,233,4.222,234,1.962,235,3.14,236,3.14,237,2.592,238,3.14,239,2.231,240,3.14,241,3.14,242,3.14,243,3.14]],["title/modules/AppRoutingModule.html",[196,1.881,209,1.675]],["body/modules/AppRoutingModule.html",[0,0.784,3,0.481,4,0.415,9,0.352,13,2.166,35,0.039,74,1.324,75,0.787,79,0.481,80,0.876,177,1.21,183,1.21,184,1.184,185,1.21,187,1.21,194,0.03,195,0.03,198,2.166,203,2.767,209,2.699,210,2.638,216,3.215,217,4.007,222,3.215,223,3.215,224,3.215,225,2.433,226,4.007,227,3.215,228,2.433,237,3.215,244,3.895,245,3.895,246,4.854,247,3.167,248,1.944,249,3.895,250,3.895,251,1.944,252,4.701,253,1.753,254,1.753,255,1.091,256,4.007,257,3.895,258,3.895]],["title/injectables/AuthGuard.html",[210,1.503,259,1.227]],["body/injectables/AuthGuard.html",[3,0.353,4,0.304,9,0.258,11,0.729,23,0.353,27,1.09,29,1.251,30,1.588,31,1.504,32,1.09,34,1.09,35,0.039,36,1.09,37,0.489,38,0.986,39,1.606,44,1.09,46,3.326,47,1.645,49,2.718,55,3.265,58,1.09,60,3.657,61,0.787,62,1.467,63,3.215,66,1.81,68,2.961,69,0.458,74,1.021,75,0.577,79,0.353,80,1.157,81,1.251,82,1.163,168,1.588,184,1.49,194,0.024,195,0.024,210,1.974,247,2.2,248,1.425,255,1.251,256,3.747,259,1.611,260,1.783,261,2.357,262,5.565,263,5.565,264,2.811,265,4.901,266,2.855,267,2.811,268,2.835,269,2.855,270,4.901,271,4.395,272,4.901,273,2.855,274,2.862,275,5.651,276,4.901,277,3.265,278,3.265,279,4.045,280,2.357,281,2.811,282,3.265,283,2.855,284,2.855,285,2.855,286,0.957,287,2.855,288,2.855,289,1.996,290,2.855,291,2.357,292,1.163,293,2.028,294,2.357,295,1.425]],["title/interceptors/BackendInterceptor.html",[211,1.675,296,2.14]],["body/interceptors/BackendInterceptor.html",[3,0.385,4,0.331,9,0.281,11,0.762,14,1.73,23,0.385,27,1.156,29,1.308,30,1.73,31,1.539,32,1.156,34,1.156,35,0.039,36,1.156,37,0.519,38,1.046,39,1.506,44,1.156,58,0.857,69,0.5,74,1.142,75,0.629,79,0.385,80,0.7,81,1.308,82,1.267,136,2.568,194,0.026,195,0.026,211,2.333,234,1.944,251,1.553,259,1.709,268,2.965,274,2.64,280,2.568,292,2.226,296,3.61,297,3.112,298,2.568,299,2.183,300,5.586,301,2.344,302,4.194,303,5.304,304,4.611,305,2.59,306,5.465,307,1.876,308,3.112,309,3.463,310,3.463,311,3.112,312,5.081,313,5.081,314,3.112,315,5.586,316,2.333,317,4.196,318,4.196,319,3.112,320,4.196,321,1.267,322,4.196,323,2.211,324,3.112,325,3.112,326,1.406,327,1.73,328,3.112,329,3.112,330,3.112,331,2.211,332,3.112,333,3.112,334,3.112,335,3.112,336,3.112,337,3.112,338,3.112]],["title/injectables/BackendService.html",[259,1.227,339,1.112]],["body/injectables/BackendService.html",[3,0.233,4,0.201,9,0.322,11,0.645,12,1.339,13,1.622,23,0.233,24,0.468,27,0.804,29,0.983,32,1.399,34,1.106,35,0.039,36,1.106,37,0.611,38,1.001,39,1.542,44,1.542,47,1.106,49,1.313,50,2.553,54,3.314,58,1.455,61,0.804,62,0.804,69,0.769,74,1.112,75,0.381,79,0.233,80,0.976,81,1.106,82,0.768,184,1.221,194,0.018,195,0.018,197,0.941,214,1.635,234,1.177,253,1.954,254,1.954,255,1.304,259,1.188,260,1.177,264,2.852,268,3.298,274,2.553,299,2.243,301,2.312,302,3.789,304,3.789,305,2.066,307,1.98,316,2.232,321,0.768,323,3.262,326,1.538,327,1.622,339,1.077,340,1.556,341,2.003,342,2.407,343,1.556,344,2.916,345,2.916,346,2.944,347,2.944,348,3.314,349,3.314,350,2.407,351,2.407,352,2.852,353,2.407,354,1.885,355,4.946,356,1.885,357,1.885,358,2.689,359,4.281,360,1.885,361,1.313,362,2.852,363,2.407,364,2.232,365,1.885,366,2.407,367,1.885,368,4.591,369,4.014,370,2.407,371,2.407,372,4.591,373,4.591,374,3.789,375,3.789,376,4.591,377,4.591,378,4.591,379,3.789,380,3.789,381,3.789,382,3.789,383,5.076,384,4.591,385,1.885,386,2.407,387,1.885,388,2.916,389,1.455,390,4.014,391,1.885,392,4.014,393,4.014,394,2.712,395,1.885,396,1.556,397,1.556,398,1.885,399,1.885,400,1.885,401,1.339,402,1.885,403,1.556,404,1.556,405,2.916,406,2.916,407,1.885,408,1.885,409,2.916,410,1.885,411,2.916,412,1.885,413,1.339,414,1.339]],["title/injectables/CommonService.html",[31,0.83,259,1.227]],["body/injectables/CommonService.html",[3,0.138,4,0.119,9,0.224,11,0.675,12,0.791,13,1.381,23,0.138,24,0.305,27,0.808,29,0.684,31,0.808,32,1.402,34,1.111,35,0.039,36,1.323,37,0.621,38,1.005,39,1.585,40,2.433,41,2.011,44,1.499,46,2.238,47,1.385,48,2.049,49,2.072,50,0.619,51,1.381,56,1.413,57,4.031,58,1.269,59,1.489,60,2.084,61,1.297,62,1.269,63,1.186,65,1.324,66,1.609,67,1.832,68,1.381,69,0.921,72,0.556,73,0.919,74,0.806,75,0.225,79,0.138,80,0.558,81,1.159,82,0.454,83,2.049,168,1.056,194,0.012,195,0.012,197,0.556,214,1.195,248,0.556,251,1.788,259,0.774,260,0.696,264,1.349,267,3.571,268,2.238,271,1.568,274,2.795,277,0.919,278,0.919,279,1.568,281,2.084,286,1.87,289,1.918,292,0.454,293,2.084,299,0.701,305,2.574,307,1.609,309,4.29,310,4.29,321,0.454,326,1.103,339,1.609,342,1.568,343,0.919,352,1.764,358,2.119,361,1.893,374,0.919,375,0.919,380,3.801,381,1.568,382,0.919,389,1.788,394,0.696,397,0.919,403,0.919,404,0.919,413,1.349,414,2.339,415,0.919,416,1.568,417,1.899,418,1.899,419,1.899,420,4.148,421,2.933,422,1.899,423,1.899,424,3.886,425,1.899,426,1.899,427,1.899,428,1.899,429,1.114,430,2.864,431,1.114,432,1.832,433,1.899,434,1.899,435,1.899,436,1.114,437,3.584,438,3.471,439,1.899,440,1.899,441,1.899,442,2.483,443,2.421,444,3.292,445,3.826,446,3.292,447,1.899,448,1.114,449,3.801,450,3.158,451,1.989,452,2.483,453,3.801,454,2.39,455,1.899,456,1.114,457,1.893,458,1.899,459,1.482,460,2.933,461,1.349,462,1.899,463,1.899,464,3.292,465,3.584,466,1.114,467,1.114,468,1.114,469,1.114,470,1.899,471,1.899,472,1.114,473,2.933,474,3.584,475,2.483,476,1.899,477,1.114,478,1.899,479,3.292,480,1.899,481,2.421,482,1.114,483,1.114,484,1.114,485,1.899,486,1.114,487,2.395,488,1.899,489,1.114,490,1.114,491,1.114,492,4.8,493,1.899,494,1.114,495,4.605,496,1.46,497,1.899,498,1.114,499,1.114,500,1.899,501,1.899,502,1.114,503,1.114,504,1.899,505,1.899,506,1.114,507,1.114,508,1.114,509,1.114,510,1.114,511,1.114,512,1.114,513,1.114,514,1.114,515,1.056,516,1.114,517,1.114,518,0.919,519,0.619,520,1.114,521,2.717,522,1.114,523,1.114,524,1.114,525,1.114,526,1.899,527,1.568,528,1.114,529,1.114,530,1.114,531,1.899,532,1.349,533,1.114,534,1.114,535,2.933,536,1.114,537,0.791,538,0.619,539,0.619,540,1.114,541,1.114,542,1.114,543,0.619,544,2.483,545,1.114,546,3.584,547,0.919,548,0.919,549,1.114,550,1.114,551,1.114,552,1.114,553,1.114,554,1.114,555,2.483,556,1.114,557,1.568,558,2.483,559,1.114,560,1.114,561,1.114,562,1.899,563,1.349,564,1.349,565,2.933,566,2.933,567,0.791,568,1.114,569,2.483,570,1.114,571,1.114,572,1.114,573,1.114,574,1.114,575,1.114]],["title/components/GetDataComponent.html",[0,0.426,177,0.751]],["body/components/GetDataComponent.html",[0,0.677,1,0.518,2,1.075,3,0.232,4,0.2,5,0.766,6,0.766,7,0.766,8,0.766,9,0.17,11,0.572,16,0.766,17,2.111,18,1.737,19,1.185,21,1.185,23,0.36,24,0.467,26,1.618,27,0.802,29,1.105,31,1.362,32,1.105,34,0.802,35,0.039,36,1.105,37,0.496,38,0.725,39,1.428,40,1.31,41,2.288,44,1.264,47,1.105,49,1.31,56,0.694,58,0.981,59,1.075,61,0.802,62,0.518,65,1.914,66,1.914,67,1.818,69,0.644,74,0.975,75,0.38,79,0.232,80,0.423,81,0.981,94,1.552,97,1.552,98,1.552,100,2.402,102,1.552,106,2.068,107,2.53,108,1.336,112,1.336,113,1.336,114,1.336,116,1.336,119,1.552,120,1.552,121,1.552,122,1.552,127,1.552,139,1.552,140,1.552,141,1.552,144,1.552,149,1.552,150,2.402,151,1.552,153,2.53,156,2.939,158,1.552,160,1.552,161,1.552,162,1.552,163,2.53,164,1.552,165,1.552,167,2.402,168,1.045,169,1.552,170,0.63,171,1.185,172,1.185,173,0.766,174,1.633,175,0.766,176,0.766,177,0.999,178,1.185,179,0.518,180,0.766,181,0.518,182,0.766,183,0.469,184,0.572,185,0.469,186,0.766,187,0.469,188,0.766,189,0.518,190,0.694,191,0.766,192,0.766,193,0.766,194,0.018,195,0.018,213,2.068,214,1.185,225,2.708,255,1.304,274,2.748,286,0.975,289,2.066,292,0.766,295,0.938,299,1.978,301,1.868,305,1.31,307,1.825,321,0.766,326,0.975,339,1.766,341,1.452,348,3.947,358,1.603,361,1.31,389,0.938,438,2.402,443,1.552,451,1.633,453,2.402,457,1.31,459,1.31,487,2,496,1.185,515,1.618,519,1.618,538,1.045,539,1.045,543,1.045,557,1.552,576,3.579,577,1.336,578,2.939,579,2.402,580,2.91,581,1.045,582,1.552,583,2.91,584,4.713,585,1.88,586,4.941,587,4.009,588,4.009,589,4.009,590,2.91,591,2.91,592,3.561,593,2.91,594,2.91,595,3.561,596,2.91,597,2.91,598,1.88,599,1.88,600,1.88,601,1.88,602,1.88,603,1.818,604,1.818,605,1.618,606,1.818,607,1.818,608,2.068,609,2.402,610,2.402,611,2.504,612,1.552,613,2.91,614,1.88,615,1.045,616,0.938,617,2.91,618,2.91,619,1.88,620,1.174,621,1.174,622,1.88,623,2.91,624,1.88,625,1.818,626,1.336,627,1.174,628,1.552,629,1.552,630,1.336,631,1.88,632,2.91,633,2.91,634,2.91,635,1.818,636,2.91,637,1.88,638,1.88,639,1.88,640,1.88,641,1.88,642,1.552,643,2.402,644,1.88,645,1.88,646,1.552,647,1.552,648,1.88,649,1.88,650,1.88,651,1.88,652,1.88,653,1.88,654,1.88,655,1.88,656,1.88,657,1.88,658,1.88,659,2.91,660,1.88,661,2.91,662,1.88,663,1.88,664,1.88,665,1.88,666,2.91,667,1.88,668,1.88,669,1.88]],["title/components/NavbarComponent.html",[0,0.426,179,0.83]],["body/components/NavbarComponent.html",[0,0.748,1,0.597,2,1.198,3,0.268,4,0.231,5,0.883,6,0.883,7,0.883,8,0.883,9,0.196,11,0.521,14,1.803,15,2.427,16,0.883,17,2.191,18,1.803,19,1.321,21,1.321,23,0.268,24,0.521,27,0.894,28,2.694,29,1.071,30,1.205,31,1.384,32,1.273,34,0.597,35,0.039,36,1.455,37,0.48,38,0.54,39,1.482,40,1.941,44,1.424,45,2.026,46,2.694,47,1.482,49,2.54,56,1.198,58,1.071,59,1.79,61,0.894,62,0.597,65,1.908,66,1.79,69,0.778,74,0.729,75,0.438,79,0.268,80,0.487,81,0.597,82,0.883,93,1.789,106,1.54,107,2.304,108,1.54,111,1.789,112,1.54,113,1.54,114,1.54,115,1.789,116,1.54,117,1.789,153,1.54,163,1.54,168,2.991,170,0.726,171,1.321,172,1.321,173,0.883,174,1.757,175,0.883,176,0.883,177,0.54,178,1.321,179,1.189,180,0.883,181,0.597,182,0.883,183,0.54,184,1.404,185,0.54,186,0.883,187,0.54,188,0.883,189,0.597,190,0.8,191,0.883,192,0.883,193,0.883,194,0.02,195,0.02,214,2.104,255,1.243,267,2.304,281,2.304,282,2.677,286,1.087,289,1.757,291,1.789,292,0.883,293,3.281,294,2.677,295,1.081,307,1.198,326,1.921,327,2.398,352,3.281,451,1.321,457,1.46,459,1.46,481,4.001,496,1.321,527,1.789,616,1.081,630,1.54,642,1.789,643,1.789,646,1.789,647,1.789,670,1.789,671,3.243,672,3.243,673,3.243,674,3.886,675,3.243,676,4.313,677,2.167,678,2.167,679,4.264,680,3.243,681,2.167,682,3.243,683,2.167,684,2.167,685,2.167,686,2.167,687,3.243,688,3.243,689,3.243,690,3.243,691,3.243,692,2.167,693,2.167,694,3.243,695,3.243,696,3.243,697,3.886,698,2.167,699,2.167,700,2.167,701,2.167,702,2.167]],["title/components/NotificationComponent.html",[0,0.426,181,0.83]],["body/components/NotificationComponent.html",[0,0.808,1,0.825,2,1.509,3,0.37,4,0.319,5,1.219,6,1.219,7,1.219,8,1.219,9,0.27,11,0.656,14,2.272,15,2.906,16,1.219,17,2.352,18,1.935,19,1.665,21,1.665,23,0.37,24,0.656,27,1.126,28,3.123,29,1.282,30,1.664,31,1.524,32,1.282,34,0.825,35,0.039,36,1.282,37,0.575,38,0.746,39,1.524,44,1.126,45,2.553,56,1.847,58,0.825,59,1.509,61,1.126,62,0.825,65,1.509,66,1.995,67,3.123,69,0.84,74,1.046,75,0.605,77,1.87,78,2.471,79,0.37,80,0.673,81,0.825,82,1.219,170,1.003,171,1.665,172,1.665,173,1.219,174,2.037,175,1.219,176,1.219,177,0.746,178,1.665,179,0.825,180,1.219,181,1.378,182,1.219,183,0.746,184,0.91,185,0.746,186,1.219,187,0.746,188,1.219,189,0.825,190,1.105,191,1.219,192,1.219,193,1.219,194,0.025,195,0.025,420,3.373,451,1.665,487,2.984,496,1.665,521,3.373,605,1.664,616,1.493,703,2.471,704,4.653,705,4.086,706,2.993,707,2.993,708,4.086,709,2.993,710,4.086,711,2.993,712,4.086,713,2.993,714,2.471,715,2.993,716,2.993]],["title/components/PostDataComponent.html",[0,0.426,183,0.751]],["body/components/PostDataComponent.html",[0,0.725,1,0.633,2,1.25,3,0.284,4,0.245,5,0.935,6,0.935,7,0.935,8,0.935,9,0.207,11,0.544,16,0.935,17,2.222,18,1.828,19,1.379,21,1.379,23,0.284,24,0.544,26,2.753,27,0.933,29,1.223,31,1.448,32,1.223,34,0.633,35,0.039,36,1.108,37,0.612,38,0.572,39,1.448,41,2.47,44,1.223,47,1.223,49,1.524,50,1.882,56,0.848,58,0.633,59,0.848,61,1.223,62,0.933,65,2.015,66,2.015,69,0.876,74,1.064,75,0.464,79,0.284,80,0.516,81,0.933,170,0.77,171,1.379,172,1.379,173,0.935,174,1.808,175,0.935,176,0.935,177,0.572,178,1.379,179,0.633,180,0.935,181,0.633,182,0.935,183,1.106,184,1.658,185,0.572,186,0.935,187,0.572,188,0.935,189,0.633,190,0.848,191,0.935,192,0.935,193,0.935,194,0.021,195,0.021,214,1.379,228,2.956,251,1.146,255,1.259,289,2.185,292,0.935,295,1.146,299,2.123,301,2.016,305,1.524,307,1.94,316,2.631,321,0.935,323,2.405,326,1.135,339,1.891,341,1.689,350,4.086,358,1.81,359,3.663,361,1.524,363,1.896,364,2.236,389,1.689,451,1.808,457,1.524,459,1.524,487,2.214,496,1.808,515,1.882,519,1.882,538,1.277,539,1.277,543,1.277,577,1.632,578,3.319,579,2.794,581,1.277,582,1.896,603,2.115,604,2.115,605,1.882,606,2.115,607,2.115,610,2.794,612,1.896,615,1.277,616,1.146,620,1.434,621,1.434,625,2.115,626,1.632,627,1.434,628,1.896,629,1.896,630,1.632,635,3.092,717,3.906,718,2.296,719,3.385,720,3.385,721,4.438,722,2.296,723,2.296,724,3.385,725,3.385,726,2.296,727,2.296,728,2.296]],["title/components/SigninComponent.html",[0,0.426,185,0.751]],["body/components/SigninComponent.html",[0,0.717,1,0.612,2,1.22,3,0.275,4,0.237,5,0.905,6,0.905,7,0.905,8,0.905,9,0.2,11,0.53,16,0.905,17,2.204,18,1.814,19,1.345,21,1.345,23,0.275,24,0.53,27,0.91,29,1.203,31,1.434,32,1.203,34,0.612,35,0.039,36,1.087,37,0.605,38,0.554,39,1.532,40,1.487,41,2.441,44,1.203,47,1.491,51,1.837,56,0.82,58,0.612,59,0.82,61,1.203,62,0.91,65,1.999,66,2.094,69,0.882,74,1.139,75,0.449,79,0.275,80,0.499,81,1.087,170,0.744,171,1.345,172,1.345,173,0.905,174,1.779,175,0.905,176,0.905,177,0.554,178,1.345,179,0.612,180,0.905,181,0.612,182,0.905,183,0.554,184,0.675,185,1.088,186,0.905,187,0.554,188,0.905,189,0.612,190,0.82,191,0.905,192,0.905,193,0.905,194,0.02,195,0.02,234,1.388,248,1.108,251,1.968,253,2.1,255,1.235,286,1.697,289,2.166,292,0.905,295,1.108,299,1.964,301,1.992,305,1,307,1.922,316,1.235,321,0.905,326,1.863,331,1.578,339,1.871,341,1.648,351,4.037,358,1.775,361,1.487,366,1.834,370,3.604,371,2.727,396,1.834,430,3.697,432,2.727,451,1.779,457,1.487,459,1.487,487,2.179,496,1.779,515,1.837,519,2.193,532,1.578,537,3.102,538,1.235,539,1.235,543,1.235,563,1.578,564,1.578,567,1.578,581,1.235,603,2.063,604,2.063,605,1.837,606,2.063,607,2.063,608,2.347,615,1.235,616,1.108,620,1.388,621,1.388,625,2.063,627,1.388,729,1.834,730,3.943,731,3.303,732,3.055,733,2.221,734,2.727,735,2.221,736,2.221,737,2.221,738,2.221,739,3.303,740,3.303,741,1.834,742,1.834,743,1.834,744,1.834,745,2.727,746,1.834,747,1.834,748,2.221,749,1.834,750,1.834,751,2.221,752,2.221]],["title/components/SignupComponent.html",[0,0.426,187,0.751]],["body/components/SignupComponent.html",[0,0.702,1,0.575,2,1.163,3,0.258,4,0.222,5,0.849,6,0.849,7,0.849,8,0.849,9,0.188,11,0.506,16,0.849,17,2.17,18,1.785,19,1.283,21,1.283,23,0.258,24,0.506,27,0.868,29,1.166,31,1.468,32,1.252,34,0.575,35,0.039,36,1.046,37,0.631,38,1.055,39,1.511,40,1.418,41,2.384,44,1.166,47,1.544,50,1.752,51,1.752,56,0.77,58,0.575,59,0.77,61,1.316,62,1.046,65,1.967,66,2.069,69,0.915,74,1.074,75,0.421,79,0.258,80,0.469,81,1.046,170,0.699,171,1.283,172,1.283,173,0.849,174,1.723,175,0.849,176,0.849,177,0.52,178,1.283,179,0.575,180,0.849,181,0.575,182,0.849,183,0.52,184,1.381,185,0.52,186,0.849,187,1.055,188,0.849,189,0.575,190,0.77,191,0.849,192,0.849,193,0.849,194,0.019,195,0.019,248,1.041,251,1.894,254,2.044,255,1.115,286,1.662,289,2.129,292,0.849,295,1.041,299,1.832,301,1.946,305,0.939,307,1.886,316,1.16,321,0.849,326,1.838,327,3.05,331,1.482,339,1.832,341,1.572,353,3.943,358,2.044,361,1.418,386,1.721,389,1.572,430,3.628,432,2.643,451,1.946,457,1.418,459,1.418,487,2.111,496,1.946,515,1.752,518,1.721,519,2.111,532,1.482,537,3.006,538,1.16,539,1.16,543,1.16,563,1.482,564,1.482,567,1.482,581,1.16,603,1.968,604,1.968,605,1.752,606,2.643,607,1.968,615,1.16,616,1.041,620,1.303,621,1.303,625,1.968,626,1.482,627,1.303,679,2.6,732,2.984,734,2.6,741,1.721,742,1.721,743,1.721,744,1.721,745,2.6,746,1.721,747,1.721,749,1.721,750,1.721,753,1.721,754,3.15,755,3.797,756,3.15,757,3.943,758,2.085,759,2.085,760,3.15,761,2.085,762,2.085,763,2.085,764,2.085,765,3.15,766,3.15,767,1.721,768,3.15,769,1.721,770,2.085]],["title/components/WebSocketComponent.html",[0,0.426,189,0.83]],["body/components/WebSocketComponent.html",[0,0.804,1,0.805,2,1.484,3,0.361,4,0.311,5,1.189,6,1.189,7,1.189,8,1.189,9,0.264,11,0.645,14,2.234,15,2.869,16,1.189,17,2.341,18,1.926,19,1.637,21,1.637,23,0.361,24,0.645,27,1.107,28,3.091,29,1.266,32,1.266,34,0.805,35,0.039,36,1.266,37,0.568,38,0.728,39,1.478,40,1.809,44,1.107,45,2.51,56,1.484,58,0.805,59,1.484,61,1.107,62,0.805,65,1.484,69,0.833,74,0.903,75,0.59,79,0.361,80,0.657,81,0.805,82,1.189,170,0.979,171,1.637,172,1.637,173,1.189,174,2.016,175,1.189,176,1.189,177,0.728,178,1.637,179,0.805,180,1.189,181,0.805,182,1.189,183,0.728,184,0.888,185,0.728,186,1.189,187,0.728,188,1.189,189,1.364,190,2.067,191,1.871,192,1.189,193,1.189,194,0.025,195,0.025,239,3.516,255,0.903,289,2.016,299,1.484,301,1.637,307,1.484,339,2.029,341,2.005,349,2.411,361,2.652,362,4.083,413,2.075,414,2.075,451,1.637,457,1.809,459,1.809,496,1.637,581,1.624,608,2.855,615,1.624,771,4.085,772,2.411,773,4.948,774,4.594,775,4.018,776,2.92,777,2.92,778,4.018,779,2.92,780,2.92,781,2.92,782,2.92,783,2.92]],["title/coverage.html",[784,3.388]],["body/coverage.html",[0,0.831,1,0.995,9,0.326,10,2.982,31,0.995,35,0.038,37,0.447,77,2.256,155,5.124,177,0.9,179,0.995,181,0.995,183,0.9,185,0.9,187,0.9,189,0.995,194,0.028,195,0.028,210,1.803,211,2.009,225,2.256,228,2.256,239,2.567,253,1.626,254,1.626,259,2.08,261,2.982,296,2.567,298,2.982,339,1.334,340,2.982,364,2.009,389,1.803,394,3.19,401,2.567,415,2.982,454,2.256,576,2.982,577,3.288,609,4.596,611,2.256,670,2.982,703,2.982,717,2.982,729,2.982,753,2.982,771,2.982,772,2.982,784,2.982,785,2.982,786,3.612,787,3.612,788,5.568,789,4.628,790,5.385,791,2.982,792,1.693,793,2.982,794,5.385,795,2.982,796,2.982,797,2.982,798,3.612,799,3.612,800,3.612,801,2.982,802,5.568,803,2.982,804,2.982,805,2.982,806,2.982,807,3.612,808,3.612]],["title/interfaces/decodedJWT.html",[454,1.881,792,0.916]],["body/interfaces/decodedJWT.html",[3,0.515,4,0.444,9,0.376,11,0.669,23,0.515,24,0.812,35,0.038,37,0.673,69,0.875,79,0.515,194,0.031,195,0.031,286,1.978,449,4.93,450,3.438,454,3.159,547,4.677,548,4.677,714,4.677,791,3.438,792,1.538,809,2.078,810,5.902,811,5.058,812,5.058,813,5.058]],["title/dependencies.html",[199,2.261,814,2.079]],["body/dependencies.html",[35,0.038,72,2.638,75,0.906,194,0.033,195,0.033,199,2.802,219,4.364,231,3.702,248,2.238,321,1.827,815,4.485,816,6.106,817,4.485,818,4.485,819,4.485,820,4.485,821,4.485,822,4.485,823,4.485,824,4.485]],["title/index.html",[23,0.311,379,2.079,825,2.518]],["body/index.html",[4,0.434,13,3.306,35,0.031,51,2.265,72,2.033,89,4.119,90,4.119,190,1.504,194,0.031,195,0.031,214,1.659,432,3.37,461,3.995,785,4.453,826,4.074,827,4.074,828,4.074,829,4.074,830,3.363,831,4.074,832,3.363,833,4.074,834,4.074,835,4.074,836,5.623,837,4.074,838,4.074,839,4.074,840,4.074,841,4.074,842,4.074,843,4.074,844,4.074,845,4.074,846,4.074,847,4.074,848,5.946,849,4.074,850,4.074,851,5.623,852,4.119,853,4.074,854,4.074,855,4.074,856,4.074,857,5.395,858,4.074,859,4.99,860,4.074,861,4.074,862,4.99,863,4.074,864,4.074,865,4.074]],["title/modules.html",[198,2.282]],["body/modules.html",[35,0.034,72,2.379,194,0.034,195,0.034,197,2.379,198,2.651,209,2.651,866,4.768,867,4.768,868,5.479,869,4.768,870,4.768]],["title/overview.html",[871,3.388]],["body/overview.html",[1,1.626,2,1.452,35,0.038,170,1.318,177,1.324,179,1.463,181,1.463,183,1.324,185,1.324,187,1.324,189,1.463,194,0.03,195,0.03,196,2.456,197,3.133,198,2.187,199,2.456,200,3.246,201,3.246,202,3.246,203,2.794,204,3.246,205,3.246,206,3.246,207,3.246,208,3.246,209,2.953,210,2.65,211,2.953,212,4.031,213,2.794,214,1.602,247,2.187,260,2.456,809,1.962,871,3.246,872,3.932,873,3.932,874,3.932,875,4.883]],["title/properties.html",[24,0.581,814,2.079]],["body/properties.html",[24,0.777,35,0.036,194,0.034,195,0.034,832,3.992,876,4.836]],["title/interfaces/requestData.html",[364,1.675,792,0.916]],["body/interfaces/requestData.html",[3,0.536,4,0.462,9,0.391,11,0.696,23,0.536,24,0.832,26,3.312,35,0.038,37,0.64,47,1.582,69,0.957,79,0.536,194,0.032,195,0.032,255,0.974,364,2.88,635,3.721,792,1.575,793,3.577,809,2.162,877,5.741]],["title/interfaces/responseData.html",[611,1.881,792,0.916]],["body/interfaces/responseData.html",[3,0.493,4,0.425,9,0.36,11,0.64,23,0.493,24,0.791,26,3.247,35,0.038,37,0.69,69,0.968,79,0.493,194,0.03,195,0.03,255,0.896,286,1.957,299,2.226,358,1.794,584,4.733,611,3.076,635,3.648,792,1.497,795,3.29,809,1.989,878,6.027,879,5.58,880,4.924]],["title/routes.html",[247,2.282]],["body/routes.html",[35,0.034,194,0.034,195,0.034,247,2.708]],["title/interfaces/signIn.html",[253,1.356,792,0.916]],["body/interfaces/signIn.html",[3,0.539,4,0.465,9,0.394,11,0.7,23,0.539,24,0.835,35,0.038,37,0.643,47,1.585,69,0.958,79,0.539,194,0.032,195,0.032,253,2.34,255,0.98,286,1.999,326,1.461,732,3.726,792,1.581,796,3.6,809,2.176]],["title/interfaces/signUp.html",[254,1.356,792,0.916]],["body/interfaces/signUp.html",[3,0.508,4,0.437,9,0.371,11,0.659,23,0.508,24,0.805,35,0.039,37,0.669,38,1.441,47,1.621,69,0.973,79,0.508,194,0.031,195,0.031,254,2.257,255,0.923,286,1.971,326,1.376,327,2.283,732,3.674,757,4.855,769,4.469,792,1.525,797,3.39,809,2.049]],["title/miscellaneous/variables.html",[881,2.079,882,2.989]],["body/miscellaneous/variables.html",[9,0.474,18,1.611,23,0.474,35,0.039,37,0.701,61,1.594,62,1.562,63,3.003,68,2.133,77,3.003,194,0.03,195,0.03,252,3.167,253,2.164,254,2.164,255,1.081,301,1.563,346,4.335,347,4.335,362,3.416,394,3.807,401,3.416,416,3.167,424,3.969,461,3.911,767,4.68,801,3.167,803,3.167,804,3.167,805,3.167,806,3.167,830,3.167,852,3.167,881,3.167,882,3.167,883,3.836,884,3.836,885,3.836,886,3.836,887,3.836,888,4.808,889,3.836,890,3.836,891,3.836,892,3.836,893,3.836,894,3.836,895,3.836]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"interfaces/decodedJWT.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"routes.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["0.0.1",{"_index":876,"title":{},"body":{"properties.html":{}}}],["0.04em",{"_index":658,"title":{},"body":{"components/GetDataComponent.html":{}}}],["0.13.0",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2em",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["0.44",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["0.45em",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["0.84",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["0.9em",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["000",{"_index":641,"title":{},"body":{"components/GetDataComponent.html":{}}}],["01t21:08:40.472z",{"_index":593,"title":{},"body":{"components/GetDataComponent.html":{}}}],["01t21:08:40.472z&#39",{"_index":599,"title":{},"body":{"components/GetDataComponent.html":{}}}],["08",{"_index":592,"title":{},"body":{"components/GetDataComponent.html":{}}}],["0px",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interceptors/BackendInterceptor.html":{}}}],["1):after",{"_index":663,"title":{},"body":{"components/GetDataComponent.html":{}}}],["1.45em",{"_index":669,"title":{},"body":{"components/GetDataComponent.html":{}}}],["1.9em",{"_index":657,"title":{},"body":{"components/GetDataComponent.html":{}}}],["1/1",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["100px",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":700,"title":{},"body":{"components/NavbarComponent.html":{}}}],["111",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["120",{"_index":649,"title":{},"body":{"components/GetDataComponent.html":{}}}],["15/15",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["16.0.2",{"_index":833,"title":{},"body":{"index.html":{}}}],["180",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["1px",{"_index":639,"title":{},"body":{"components/GetDataComponent.html":{}}}],["2",{"_index":872,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["2.5deg",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["2:38:40",{"_index":595,"title":{},"body":{"components/GetDataComponent.html":{}}}],["2s",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":874,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":648,"title":{},"body":{"components/GetDataComponent.html":{}}}],["360deg",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["39;8/2/2023",{"_index":600,"title":{},"body":{"components/GetDataComponent.html":{}}}],["39;hello",{"_index":490,"title":{},"body":{"injectables/CommonService.html":{}}}],["39;john",{"_index":483,"title":{},"body":{"injectables/CommonService.html":{}}}],["39;something",{"_index":467,"title":{},"body":{"injectables/CommonService.html":{}}}],["3d3d3d",{"_index":653,"title":{},"body":{"components/GetDataComponent.html":{}}}],["4/4",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":629,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["450",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["5",{"_index":875,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500px",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["50px",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["5px",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["6/6",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["7.15em",{"_index":665,"title":{},"body":{"components/GetDataComponent.html":{}}}],["7.8.0",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["768px",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":873,"title":{},"body":{"overview.html":{}}}],["8.5deg",{"_index":668,"title":{},"body":{"components/GetDataComponent.html":{}}}],["8/2/2023",{"_index":594,"title":{},"body":{"components/GetDataComponent.html":{}}}],["80px",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["9/10",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["9f9f9f",{"_index":654,"title":{},"body":{"components/GetDataComponent.html":{}}}],["a:not(:first",{"_index":698,"title":{},"body":{"components/NavbarComponent.html":{}}}],["absolute",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["access",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{}}}],["accessors",{"_index":428,"title":{},"body":{"injectables/CommonService.html":{}}}],["accesstoken",{"_index":745,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["activated",{"_index":276,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["activatedroutesnapshot",{"_index":270,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["actual_component",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["add",{"_index":303,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["additional",{"_index":439,"title":{},"body":{"injectables/CommonService.html":{}}}],["again",{"_index":572,"title":{},"body":{"injectables/CommonService.html":{}}}],["align",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["already",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["alternate",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["always",{"_index":844,"title":{},"body":{"index.html":{}}}],["am&#39",{"_index":601,"title":{},"body":{"components/GetDataComponent.html":{}}}],["am/pm",{"_index":589,"title":{},"body":{"components/GetDataComponent.html":{}}}],["angular",{"_index":830,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["angular/compiler",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["anything",{"_index":460,"title":{},"body":{"injectables/CommonService.html":{}}}],["api",{"_index":301,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["apipathconstant",{"_index":401,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipathconstant.data",{"_index":411,"title":{},"body":{"injectables/BackendService.html":{}}}],["apipathconstant.signin",{"_index":407,"title":{},"body":{"injectables/BackendService.html":{}}}],["apipathconstant.signout",{"_index":410,"title":{},"body":{"injectables/BackendService.html":{}}}],["apipathconstant.signup",{"_index":408,"title":{},"body":{"injectables/BackendService.html":{}}}],["apis",{"_index":435,"title":{},"body":{"injectables/CommonService.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module.ts",{"_index":343,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["app.module.ts]{@link",{"_index":403,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconstant",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/NotificationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appconstant.appname",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["appconstant.hidenotifcationafter",{"_index":716,"title":{},"body":{"components/NotificationComponent.html":{}}}],["application",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"index.html":{}}}],["appmodule",{"_index":197,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":209,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":613,"title":{},"body":{"components/GetDataComponent.html":{}}}],["article",{"_index":635,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{}}}],["assuming",{"_index":283,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["attaching",{"_index":332,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["auth",{"_index":262,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguard",{"_index":210,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authorization",{"_index":304,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{}}}],["auto",{"_index":666,"title":{},"body":{"components/GetDataComponent.html":{}}}],["automatically",{"_index":854,"title":{},"body":{"index.html":{}}}],["available",{"_index":870,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":299,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"interfaces/responseData.html":{}}}],["backend.service",{"_index":516,"title":{},"body":{"injectables/CommonService.html":{}}}],["backendinterceptor",{"_index":211,"title":{"interceptors/BackendInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/BackendInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["backendservice",{"_index":339,"title":{"injectables/BackendService.html":{}},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{}}}],["backendservice#handlegetdata",{"_index":618,"title":{},"body":{"components/GetDataComponent.html":{}}}],["backendservice#handlegetwebsocketdata",{"_index":781,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["backendservice#handlepostdata",{"_index":725,"title":{},"body":{"components/PostDataComponent.html":{}}}],["backendservice#handlesignin",{"_index":740,"title":{},"body":{"components/SigninComponent.html":{}}}],["backendservice#handlesignout",{"_index":528,"title":{},"body":{"injectables/CommonService.html":{}}}],["backendservice#handlesignup",{"_index":766,"title":{},"body":{"components/SignupComponent.html":{}}}],["backendservice]{@link",{"_index":536,"title":{},"body":{"injectables/CommonService.html":{}}}],["backendurl",{"_index":346,"title":{},"body":{"injectables/BackendService.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["bar",{"_index":672,"title":{},"body":{"components/NavbarComponent.html":{}}}],["base",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["base64",{"_index":551,"title":{},"body":{"injectables/CommonService.html":{}}}],["based",{"_index":606,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["basic",{"_index":839,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":337,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["behaviorsubject",{"_index":492,"title":{},"body":{"injectables/CommonService.html":{}}}],["behaviorsubject(false",{"_index":493,"title":{},"body":{"injectables/CommonService.html":{}}}],["better",{"_index":846,"title":{},"body":{"index.html":{}}}],["bezier(0.165",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["black",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["blur(0.5px",{"_index":660,"title":{},"body":{"components/GetDataComponent.html":{}}}],["body",{"_index":373,"title":{},"body":{"injectables/BackendService.html":{}}}],["boolean",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["bootstrap",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":638,"title":{},"body":{"components/GetDataComponent.html":{}}}],["box",{"_index":637,"title":{},"body":{"components/GetDataComponent.html":{}}}],["browse",{"_index":868,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CommonService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":862,"title":{},"body":{"index.html":{}}}],["building",{"_index":861,"title":{},"body":{"index.html":{}}}],["button",{"_index":679,"title":{},"body":{"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["call",{"_index":307,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["calling",{"_index":535,"title":{},"body":{"injectables/CommonService.html":{}}}],["calls",{"_index":302,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{}}}],["canactivate",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{}}}],["canactivate(route",{"_index":269,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["case",{"_index":375,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["catch",{"_index":557,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["center",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["certain",{"_index":713,"title":{},"body":{"components/NotificationComponent.html":{}}}],["chain",{"_index":318,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["change",{"_index":856,"title":{},"body":{"index.html":{}}}],["check",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["checkisloggedin",{"_index":676,"title":{},"body":{"components/NavbarComponent.html":{}}}],["checksavedcredentials",{"_index":421,"title":{},"body":{"injectables/CommonService.html":{}}}],["child",{"_index":699,"title":{},"body":{"components/NavbarComponent.html":{}}}],["child(2n",{"_index":662,"title":{},"body":{"components/GetDataComponent.html":{}}}],["child(2n):after",{"_index":667,"title":{},"body":{"components/GetDataComponent.html":{}}}],["class",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["clear",{"_index":470,"title":{},"body":{"injectables/CommonService.html":{}}}],["cli",{"_index":831,"title":{},"body":{"index.html":{}}}],["click",{"_index":760,"title":{},"body":{"components/SignupComponent.html":{}}}],["click)=\"handlesignout",{"_index":696,"title":{},"body":{"components/NavbarComponent.html":{}}}],["clicks",{"_index":682,"title":{},"body":{"components/NavbarComponent.html":{}}}],["clip",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["closed",{"_index":570,"title":{},"body":{"injectables/CommonService.html":{}}}],["cluster_appmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["column",{"_index":645,"title":{},"body":{"components/GetDataComponent.html":{}}}],["comes",{"_index":878,"title":{},"body":{"interfaces/responseData.html":{}}}],["common",{"_index":416,"title":{},"body":{"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["common.service",{"_index":280,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{}}}],["commonservice",{"_index":31,"title":{"injectables/CommonService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["commonservice#handlesignout",{"_index":686,"title":{},"body":{"components/NavbarComponent.html":{}}}],["commonservice#loadersubject",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["commonservice#loggedinusersubject",{"_index":282,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NavbarComponent.html":{}}}],["commonservice#notificationsubject",{"_index":710,"title":{},"body":{"components/NotificationComponent.html":{}}}],["commonservice#token",{"_index":741,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["commonservice#username",{"_index":742,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["commonservice]{@link",{"_index":518,"title":{},"body":{"injectables/CommonService.html":{},"components/SignupComponent.html":{}}}],["compdoc",{"_index":858,"title":{},"body":{"index.html":{}}}],["completed",{"_index":604,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"overview.html":{}}}],["components/get",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.component",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["components/notification/notification.component",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["components/post",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/signin/signin.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/signup/signup.component",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/web",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":778,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["connected",{"_index":773,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["console",{"_index":459,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["console.log(message",{"_index":575,"title":{},"body":{"injectables/CommonService.html":{}}}],["const",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["constant",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constants",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["constructor(backendservice",{"_index":581,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["constructor(commonservice",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{}}}],["constructor(httpclient",{"_index":354,"title":{},"body":{"injectables/BackendService.html":{}}}],["constructor(private",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["constructor(router",{"_index":429,"title":{},"body":{"injectables/CommonService.html":{}}}],["contains",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["content",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["coverage",{"_index":784,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":754,"title":{},"body":{"components/SignupComponent.html":{}}}],["created",{"_index":880,"title":{},"body":{"interfaces/responseData.html":{}}}],["createdat",{"_index":879,"title":{},"body":{"interfaces/responseData.html":{}}}],["creates",{"_index":388,"title":{},"body":{"injectables/BackendService.html":{}}}],["creating",{"_index":743,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["cubic",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["current",{"_index":393,"title":{},"body":{"injectables/BackendService.html":{}}}],["data",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{},"miscellaneous/variables.html":{}}}],["data'},{'name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["data.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["data.component.css",{"_index":578,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.html",{"_index":579,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.ts",{"_index":577,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"coverage.html":{}}}],["data.component.ts:15",{"_index":582,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.ts:31",{"_index":612,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.ts:38",{"_index":722,"title":{},"body":{"components/PostDataComponent.html":{}}}],["data.component.ts:39",{"_index":602,"title":{},"body":{"components/GetDataComponent.html":{}}}],["data.component.ts:46",{"_index":718,"title":{},"body":{"components/PostDataComponent.html":{}}}],["data.component.ts:77",{"_index":585,"title":{},"body":{"components/GetDataComponent.html":{}}}],["data/get",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"coverage.html":{}}}],["data/post",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PostDataComponent.html":{},"coverage.html":{}}}],["data]{@link",{"_index":619,"title":{},"body":{"components/GetDataComponent.html":{}}}],["date",{"_index":584,"title":{},"body":{"components/GetDataComponent.html":{},"interfaces/responseData.html":{}}}],["date(date).tolocalestring",{"_index":631,"title":{},"body":{"components/GetDataComponent.html":{}}}],["dd/mm/yyyy",{"_index":587,"title":{},"body":{"components/GetDataComponent.html":{}}}],["declarations",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":444,"title":{},"body":{"injectables/CommonService.html":{}}}],["decoded",{"_index":450,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/decodedJWT.html":{}}}],["decodedjwt",{"_index":454,"title":{"interfaces/decodedJWT.html":{}},"body":{"injectables/CommonService.html":{},"coverage.html":{},"interfaces/decodedJWT.html":{}}}],["decodedpayload",{"_index":555,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodedtoken",{"_index":567,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["decodedtoken.username",{"_index":569,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodedtoken?.username",{"_index":750,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["decodetoken",{"_index":422,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodetoken(jwt",{"_index":452,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodetoken(token",{"_index":447,"title":{},"body":{"injectables/CommonService.html":{}}}],["decoding",{"_index":446,"title":{},"body":{"injectables/CommonService.html":{}}}],["default",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["dependencies",{"_index":199,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"interfaces/decodedJWT.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["development",{"_index":852,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":433,"title":{},"body":{"injectables/CommonService.html":{}}}],["direct",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["direction",{"_index":644,"title":{},"body":{"components/GetDataComponent.html":{}}}],["directive",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["directives",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["display",{"_index":642,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["dist",{"_index":863,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":785,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":843,"title":{},"body":{"index.html":{}}}],["doe",{"_index":479,"title":{},"body":{"injectables/CommonService.html":{}}}],["doe&#39",{"_index":484,"title":{},"body":{"injectables/CommonService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["dynamic",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["email",{"_index":757,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/signUp.html":{}}}],["emphasis",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["empty",{"_index":451,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["environment",{"_index":394,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.backendurl",{"_index":390,"title":{},"body":{"injectables/BackendService.html":{}}}],["environment.production",{"_index":574,"title":{},"body":{"injectables/CommonService.html":{}}}],["error",{"_index":289,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["error.error?.message",{"_index":627,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["error?.status",{"_index":628,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["example",{"_index":453,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["existing",{"_index":370,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["exp",{"_index":547,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/decodedJWT.html":{}}}],["expiration",{"_index":811,"title":{},"body":{"interfaces/decodedJWT.html":{}}}],["expired",{"_index":610,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["export",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"interfaces/decodedJWT.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["exports",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extracted",{"_index":813,"title":{},"body":{"interfaces/decodedJWT.html":{}}}],["f35626",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["feab3a",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"interfaces/decodedJWT.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":857,"title":{},"body":{"index.html":{}}}],["fill",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["finalize",{"_index":515,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["flex",{"_index":643,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["folder",{"_index":864,"title":{},"body":{"index.html":{}}}],["font",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["form",{"_index":359,"title":{},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["format",{"_index":586,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate",{"_index":580,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate(&#39;2023",{"_index":598,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate('2023",{"_index":591,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate(date",{"_index":583,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate(item.createdat",{"_index":633,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatted",{"_index":596,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formsmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["g",{"_index":553,"title":{},"body":{"injectables/CommonService.html":{}}}],["generated",{"_index":829,"title":{},"body":{"index.html":{}}}],["generating",{"_index":859,"title":{},"body":{"index.html":{}}}],["getdatacomponent",{"_index":177,"title":{"components/GetDataComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["getting",{"_index":379,"title":{"index.html":{}},"body":{"injectables/BackendService.html":{}}}],["gettoken",{"_index":507,"title":{},"body":{"injectables/CommonService.html":{}}}],["getusername",{"_index":511,"title":{},"body":{"injectables/CommonService.html":{}}}],["gradient(90deg",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["graph",{"_index":869,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":263,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handle",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/PostDataComponent.html":{},"components/SignupComponent.html":{}}}],["handlegetdata",{"_index":348,"title":{},"body":{"injectables/BackendService.html":{},"components/GetDataComponent.html":{}}}],["handlegetdata]{@link",{"_index":617,"title":{},"body":{"components/GetDataComponent.html":{}}}],["handlegetwebsocketdata",{"_index":349,"title":{},"body":{"injectables/BackendService.html":{},"components/WebSocketComponent.html":{}}}],["handlegetwebsocketdata]{@link",{"_index":780,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["handlepostdata",{"_index":350,"title":{},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["handlepostdata(data",{"_index":363,"title":{},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["handlepostdata]{@link",{"_index":724,"title":{},"body":{"components/PostDataComponent.html":{}}}],["handler",{"_index":317,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["handlesignin",{"_index":351,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["handlesignin(data",{"_index":366,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["handlesignin]{@link",{"_index":739,"title":{},"body":{"components/SigninComponent.html":{}}}],["handlesignout",{"_index":352,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["handlesignout]{@link",{"_index":527,"title":{},"body":{"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["handlesignup",{"_index":353,"title":{},"body":{"injectables/BackendService.html":{},"components/SignupComponent.html":{}}}],["handlesignup(data",{"_index":386,"title":{},"body":{"injectables/BackendService.html":{},"components/SignupComponent.html":{}}}],["handlesignup]{@link",{"_index":765,"title":{},"body":{"components/SignupComponent.html":{}}}],["happened",{"_index":464,"title":{},"body":{"injectables/CommonService.html":{}}}],["happened.&#39",{"_index":468,"title":{},"body":{"injectables/CommonService.html":{}}}],["header",{"_index":376,"title":{},"body":{"injectables/BackendService.html":{}}}],["headers",{"_index":306,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["height",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["hello",{"_index":413,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/WebSocketComponent.html":{}}}],["here",{"_index":734,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["hh:mm:ss",{"_index":588,"title":{},"body":{"components/GetDataComponent.html":{}}}],["hide",{"_index":605,"title":{},"body":{"components/GetDataComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["hidenotifcationafter",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highlight",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["highlight:after",{"_index":650,"title":{},"body":{"components/GetDataComponent.html":{}}}],["highlight:before",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["highlight:nth",{"_index":661,"title":{},"body":{"components/GetDataComponent.html":{}}}],["home",{"_index":691,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["http://127.0.0.1:5500/frontend/documentation/index.html",{"_index":860,"title":{},"body":{"index.html":{}}}],["http://:3000/api",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000/api",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":853,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":355,"title":{},"body":{"injectables/BackendService.html":{}}}],["httpclientmodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":319,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httphandler",{"_index":313,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httpinterceptor",{"_index":320,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httprequest",{"_index":312,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httpresponse",{"_index":396,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["hue",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["i.e",{"_index":277,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["iat",{"_index":548,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/decodedJWT.html":{}}}],["identifier",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interceptors/BackendInterceptor.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["import",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["important",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["imports",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"interfaces/decodedJWT.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"interfaces/decodedJWT.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["initialize",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["initialized",{"_index":496,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["injectable",{"_index":259,"title":{"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"coverage.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"overview.html":{}}}],["injected",{"_index":342,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["intercept",{"_index":300,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["intercept(request",{"_index":311,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["interceptor",{"_index":296,"title":{"interceptors/BackendInterceptor.html":{}},"body":{"interceptors/BackendInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":297,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["interface",{"_index":792,"title":{"interfaces/decodedJWT.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}},"body":{"coverage.html":{},"interfaces/decodedJWT.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["interfaces",{"_index":809,"title":{},"body":{"interfaces/decodedJWT.html":{},"overview.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["introduction",{"_index":827,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":590,"title":{},"body":{"components/GetDataComponent.html":{}}}],["issue",{"_index":812,"title":{},"body":{"interfaces/decodedJWT.html":{}}}],["item.article",{"_index":636,"title":{},"body":{"components/GetDataComponent.html":{}}}],["item.title",{"_index":634,"title":{},"body":{"components/GetDataComponent.html":{}}}],["item.username",{"_index":632,"title":{},"body":{"components/GetDataComponent.html":{}}}],["items",{"_index":646,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["john",{"_index":480,"title":{},"body":{"injectables/CommonService.html":{}}}],["json.parse(atob(base64",{"_index":556,"title":{},"body":{"injectables/CommonService.html":{}}}],["justify",{"_index":647,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["jwt",{"_index":449,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/decodedJWT.html":{}}}],["jwtpayload",{"_index":549,"title":{},"body":{"injectables/CommonService.html":{}}}],["jwtpayload.replace",{"_index":552,"title":{},"body":{"injectables/CommonService.html":{}}}],["keyframes",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["left",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["legend",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"overview.html":{}}}],["linear",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["loader",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["loaderstate",{"_index":473,"title":{},"body":{"injectables/CommonService.html":{}}}],["loaderstatus",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["loaderstatus]{@link",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["loadersubject",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["loadersubject]{@link",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["loading",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["log",{"_index":457,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["logged",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{}}}],["loggedinuser",{"_index":293,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["loggedinuser.charat(0).touppercase",{"_index":689,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loggedinuser.length",{"_index":294,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NavbarComponent.html":{}}}],["loggedinuser.slice(1",{"_index":690,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loggedinusersubject",{"_index":267,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["loggedinusersubject.subscribe((loggedinuser",{"_index":500,"title":{},"body":{"injectables/CommonService.html":{}}}],["loggedinusersubject]{@link",{"_index":281,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["logger",{"_index":423,"title":{},"body":{"injectables/CommonService.html":{}}}],["logger(`something",{"_index":463,"title":{},"body":{"injectables/CommonService.html":{}}}],["logger(message",{"_index":455,"title":{},"body":{"injectables/CommonService.html":{}}}],["logger(something",{"_index":466,"title":{},"body":{"injectables/CommonService.html":{}}}],["logging",{"_index":290,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["make",{"_index":341,"title":{},"body":{"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["making",{"_index":345,"title":{},"body":{"injectables/BackendService.html":{}}}],["margin",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["match",{"_index":442,"title":{},"body":{"injectables/CommonService.html":{}}}],["matches",{"_index":441,"title":{},"body":{"injectables/CommonService.html":{}}}],["matching",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"interfaces/decodedJWT.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"routes.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["mean",{"_index":285,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["media",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":361,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["message]{@link",{"_index":782,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["messages",{"_index":458,"title":{},"body":{"injectables/CommonService.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["method",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["min",{"_index":655,"title":{},"body":{"components/GetDataComponent.html":{}}}],["minimal",{"_index":838,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":881,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":462,"title":{},"body":{"injectables/CommonService.html":{}}}],["models/decodedjwt.model",{"_index":517,"title":{},"body":{"injectables/CommonService.html":{}}}],["models/requestdata.model",{"_index":400,"title":{},"body":{"injectables/BackendService.html":{}}}],["models/signin.model",{"_index":398,"title":{},"body":{"injectables/BackendService.html":{}}}],["models/signup.model",{"_index":399,"title":{},"body":{"injectables/BackendService.html":{}}}],["modification",{"_index":325,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["module",{"_index":196,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":198,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["nav",{"_index":697,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":673,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["navbar.component.css",{"_index":674,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":675,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":179,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":432,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["navigation",{"_index":671,"title":{},"body":{"components/NavbarComponent.html":{}}}],["need",{"_index":328,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["needed",{"_index":721,"title":{},"body":{"components/PostDataComponent.html":{}}}],["new",{"_index":389,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["next",{"_index":292,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["next.handle",{"_index":334,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["next.handle(request",{"_index":322,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["ng",{"_index":849,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["node",{"_index":835,"title":{},"body":{"index.html":{}}}],["normally",{"_index":372,"title":{},"body":{"injectables/BackendService.html":{}}}],["notification",{"_index":487,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["notification'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["notification.component.css",{"_index":704,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification.component.html",{"_index":705,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notificationcomponent",{"_index":181,"title":{"components/NotificationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsubject",{"_index":420,"title":{},"body":{"injectables/CommonService.html":{},"components/NotificationComponent.html":{}}}],["notificationsubject.subscribe((notification",{"_index":504,"title":{},"body":{"injectables/CommonService.html":{}}}],["notificationsubject]{@link",{"_index":521,"title":{},"body":{"injectables/CommonService.html":{},"components/NotificationComponent.html":{}}}],["npm",{"_index":851,"title":{},"body":{"index.html":{}}}],["number",{"_index":810,"title":{},"body":{"interfaces/decodedJWT.html":{}}}],["object",{"_index":767,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":268,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["observables",{"_index":418,"title":{},"body":{"injectables/CommonService.html":{}}}],["observe",{"_index":383,"title":{},"body":{"injectables/BackendService.html":{}}}],["occurs",{"_index":445,"title":{},"body":{"injectables/CommonService.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["opened",{"_index":571,"title":{},"body":{"injectables/CommonService.html":{}}}],["option",{"_index":384,"title":{},"body":{"injectables/BackendService.html":{}}}],["optional",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"interfaces/signUp.html":{}}}],["out",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":871,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":814,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["page",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["pages",{"_index":434,"title":{},"body":{"injectables/CommonService.html":{}}}],["param",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["parameter",{"_index":474,"title":{},"body":{"injectables/CommonService.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["password",{"_index":732,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["path",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["picked",{"_index":392,"title":{},"body":{"injectables/BackendService.html":{}}}],["pipe",{"_index":539,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["pointer",{"_index":695,"title":{},"body":{"components/NavbarComponent.html":{}}}],["position",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["post",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["postdatacomponent",{"_index":183,"title":{"components/PostDataComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["present",{"_index":438,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["private",{"_index":519,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["production",{"_index":461,"title":{},"body":{"injectables/CommonService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":603,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["project",{"_index":828,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"interfaces/decodedJWT.html":{},"properties.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["protect",{"_index":265,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["provide",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":877,"title":{},"body":{"interfaces/requestData.html":{}}}],["providedin",{"_index":404,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["providers",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["quickly",{"_index":841,"title":{},"body":{"index.html":{}}}],["received",{"_index":608,"title":{},"body":{"components/GetDataComponent.html":{},"components/SigninComponent.html":{},"components/WebSocketComponent.html":{}}}],["redirectto",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refresh",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["refreshed",{"_index":573,"title":{},"body":{"injectables/CommonService.html":{}}}],["relative",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["reload",{"_index":855,"title":{},"body":{"index.html":{}}}],["replace(/_/g",{"_index":554,"title":{},"body":{"injectables/CommonService.html":{}}}],["request",{"_index":315,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["request.clone",{"_index":335,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["request.url.includes('signin",{"_index":329,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["request.url.includes('signup",{"_index":330,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["requestdata",{"_index":364,"title":{"interfaces/requestData.html":{}},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{},"coverage.html":{},"interfaces/requestData.html":{}}}],["requests",{"_index":333,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["required",{"_index":378,"title":{},"body":{"injectables/BackendService.html":{}}}],["reset",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"components/GetDataComponent.html":{},"overview.html":{}}}],["resetting",{"_index":529,"title":{},"body":{"injectables/CommonService.html":{}}}],["response",{"_index":358,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/responseData.html":{}}}],["response.data",{"_index":624,"title":{},"body":{"components/GetDataComponent.html":{}}}],["response.headers.get('authorization",{"_index":746,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["response?.body?.message",{"_index":752,"title":{},"body":{"components/SigninComponent.html":{}}}],["response?.message",{"_index":626,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SignupComponent.html":{}}}],["responsedata",{"_index":611,"title":{"interfaces/responseData.html":{}},"body":{"components/GetDataComponent.html":{},"coverage.html":{},"interfaces/responseData.html":{}}}],["results",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"interfaces/decodedJWT.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"routes.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{},"miscellaneous/variables.html":{}}}],["retro",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["return",{"_index":274,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["returned",{"_index":374,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["returning",{"_index":279,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["returns",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["reverse",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":659,"title":{},"body":{"components/GetDataComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["root'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["rotate",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["rotate(0deg",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["rotate(1.8deg",{"_index":664,"title":{},"body":{"components/GetDataComponent.html":{}}}],["rotate(8.5deg",{"_index":656,"title":{},"body":{"components/GetDataComponent.html":{}}}],["route",{"_index":275,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["router",{"_index":430,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["routerlink",{"_index":688,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"'/get",{"_index":692,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"'/post",{"_index":693,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"\\'/get",{"_index":701,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"\\'/post",{"_index":702,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routermodule",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":272,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["routes",{"_index":247,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":848,"title":{},"body":{"index.html":{}}}],["running",{"_index":847,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":321,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["screen",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["security",{"_index":440,"title":{},"body":{"injectables/CommonService.html":{}}}],["see",{"_index":865,"title":{},"body":{"index.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["send",{"_index":323,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["sending",{"_index":719,"title":{},"body":{"components/PostDataComponent.html":{}}}],["sennd",{"_index":720,"title":{},"body":{"components/PostDataComponent.html":{}}}],["sent",{"_index":316,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["serve",{"_index":850,"title":{},"body":{"index.html":{}}}],["server",{"_index":836,"title":{},"body":{"index.html":{}}}],["serves",{"_index":834,"title":{},"body":{"index.html":{}}}],["service",{"_index":264,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["services/auth.guard",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["services/backend.interceptor",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["services/common.service",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["session",{"_index":309,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{}}}],["sessionstorage.getitem('authorization",{"_index":526,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.getitem('username",{"_index":562,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.removeitem('authorization",{"_index":533,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.removeitem('username",{"_index":534,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.setitem('authorization",{"_index":525,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.setitem('username",{"_index":561,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstoragetoken",{"_index":565,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorageusername",{"_index":566,"title":{},"body":{"injectables/CommonService.html":{}}}],["set",{"_index":380,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["setheaders",{"_index":336,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["settimeout",{"_index":715,"title":{},"body":{"components/NotificationComponent.html":{}}}],["setting",{"_index":382,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["settings",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["settoken(token",{"_index":509,"title":{},"body":{"injectables/CommonService.html":{}}}],["setusername(username",{"_index":513,"title":{},"body":{"injectables/CommonService.html":{}}}],["shadow",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["shared",{"_index":417,"title":{},"body":{"injectables/CommonService.html":{}}}],["show",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["shown",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NotificationComponent.html":{}}}],["sign",{"_index":326,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["signed",{"_index":437,"title":{},"body":{"injectables/CommonService.html":{}}}],["signin",{"_index":253,"title":{"interfaces/signIn.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"components/SigninComponent.html":{},"coverage.html":{},"interfaces/signIn.html":{},"miscellaneous/variables.html":{}}}],["signin'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["signin.component.css",{"_index":730,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin.component.html",{"_index":731,"title":{},"body":{"components/SigninComponent.html":{}}}],["signincomponent",{"_index":185,"title":{"components/SigninComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signout",{"_index":424,"title":{},"body":{"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["signout]{@link",{"_index":546,"title":{},"body":{"injectables/CommonService.html":{}}}],["signs",{"_index":369,"title":{},"body":{"injectables/BackendService.html":{}}}],["signup",{"_index":254,"title":{"interfaces/signUp.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"interfaces/signUp.html":{},"miscellaneous/variables.html":{}}}],["signup'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["signup.component.css",{"_index":755,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":756,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupcomponent",{"_index":187,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["single",{"_index":840,"title":{},"body":{"index.html":{}}}],["size",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["socket",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["socket.component",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["socket.component.css",{"_index":774,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.html",{"_index":775,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.ts",{"_index":772,"title":{},"body":{"components/WebSocketComponent.html":{},"coverage.html":{}}}],["socket.component.ts:11",{"_index":776,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.ts:23",{"_index":779,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.ts:30",{"_index":777,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket/web",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/WebSocketComponent.html":{},"coverage.html":{}}}],["solid",{"_index":640,"title":{},"body":{"components/GetDataComponent.html":{}}}],["something",{"_index":465,"title":{},"body":{"injectables/CommonService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"interfaces/decodedJWT.html":{},"index.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["span",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["src/.../apipath.constant.ts",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.constant.ts",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.production.ts",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/get",{"_index":576,"title":{},"body":{"components/GetDataComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":670,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:12",{"_index":677,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:23",{"_index":684,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":683,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:35",{"_index":681,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:44",{"_index":678,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/notification/notification.component.ts",{"_index":703,"title":{},"body":{"components/NotificationComponent.html":{},"coverage.html":{}}}],["src/app/components/notification/notification.component.ts:13",{"_index":706,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:25",{"_index":709,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:30",{"_index":707,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/post",{"_index":717,"title":{},"body":{"components/PostDataComponent.html":{},"coverage.html":{}}}],["src/app/components/signin/signin.component.ts",{"_index":729,"title":{},"body":{"components/SigninComponent.html":{},"coverage.html":{}}}],["src/app/components/signin/signin.component.ts:17",{"_index":733,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signin/signin.component.ts:35",{"_index":737,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signin/signin.component.ts:42",{"_index":736,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signin/signin.component.ts:51",{"_index":735,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signup/signup.component.ts",{"_index":753,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/components/signup/signup.component.ts:16",{"_index":758,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:34",{"_index":763,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:41",{"_index":762,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:49",{"_index":761,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:58",{"_index":759,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/web",{"_index":771,"title":{},"body":{"components/WebSocketComponent.html":{},"coverage.html":{}}}],["src/app/models/decodedjwt.model.ts",{"_index":791,"title":{},"body":{"coverage.html":{},"interfaces/decodedJWT.html":{}}}],["src/app/models/requestdata.model",{"_index":723,"title":{},"body":{"components/PostDataComponent.html":{}}}],["src/app/models/requestdata.model.ts",{"_index":793,"title":{},"body":{"coverage.html":{},"interfaces/requestData.html":{}}}],["src/app/models/responsedata.model",{"_index":614,"title":{},"body":{"components/GetDataComponent.html":{}}}],["src/app/models/responsedata.model.ts",{"_index":795,"title":{},"body":{"coverage.html":{},"interfaces/responseData.html":{}}}],["src/app/models/signin.model",{"_index":738,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/models/signin.model.ts",{"_index":796,"title":{},"body":{"coverage.html":{},"interfaces/signIn.html":{}}}],["src/app/models/signup.model",{"_index":764,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/models/signup.model.ts",{"_index":797,"title":{},"body":{"coverage.html":{},"interfaces/signUp.html":{}}}],["src/app/services/auth.guard.ts",{"_index":261,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/services/auth.guard.ts:10",{"_index":266,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/services/auth.guard.ts:24",{"_index":273,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/services/backend.interceptor.ts",{"_index":298,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"coverage.html":{}}}],["src/app/services/backend.interceptor.ts:15",{"_index":308,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["src/app/services/backend.interceptor.ts:27",{"_index":314,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["src/app/services/backend.service",{"_index":615,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["src/app/services/backend.service.ts",{"_index":340,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{}}}],["src/app/services/backend.service.ts:16",{"_index":356,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:27",{"_index":391,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:33",{"_index":395,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:40",{"_index":367,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:55",{"_index":387,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:69",{"_index":385,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:79",{"_index":357,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:87",{"_index":365,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:94",{"_index":360,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/common.service",{"_index":616,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["src/app/services/common.service.ts",{"_index":415,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/app/services/common.service.ts:106",{"_index":508,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:113",{"_index":469,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:14",{"_index":431,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:152",{"_index":448,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:189",{"_index":514,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:198",{"_index":512,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:207",{"_index":436,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:248",{"_index":456,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:26",{"_index":494,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:30",{"_index":498,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:38",{"_index":472,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:50",{"_index":503,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:56",{"_index":506,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:64",{"_index":486,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:76",{"_index":499,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:82",{"_index":502,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:90",{"_index":477,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:98",{"_index":510,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/constants/apipath.constant",{"_index":402,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/constants/apipath.constant.ts",{"_index":801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/app.constant",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/NotificationComponent.html":{}}}],["src/constants/app.constant.ts",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment",{"_index":397,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["src/environments/environment.development.ts",{"_index":804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.production.ts",{"_index":805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":825,"title":{"index.html":{}},"body":{}}],["state",{"_index":271,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["statements",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["storage",{"_index":310,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{}}}],["stored",{"_index":287,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["string",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"interfaces/decodedJWT.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["strive",{"_index":845,"title":{},"body":{"index.html":{}}}],["style=\"cursor",{"_index":694,"title":{},"body":{"components/NavbarComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["subject",{"_index":495,"title":{},"body":{"injectables/CommonService.html":{}}}],["subscribe",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["subscribes",{"_index":607,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribing",{"_index":284,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["success",{"_index":543,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["successful",{"_index":537,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["support",{"_index":866,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":867,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["table",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["test",{"_index":842,"title":{},"body":{"index.html":{}}}],["text",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["therefore",{"_index":381,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["this.article",{"_index":727,"title":{},"body":{"components/PostDataComponent.html":{}}}],["this.backendservice",{"_index":538,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.backendurl",{"_index":406,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.checkisloggedin",{"_index":685,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.commonservice.checksavedcredentials",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["this.commonservice.decodetoken(accesstoken",{"_index":747,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.loadersubject$.subscribe((loaderstatus",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["this.commonservice.loggedinusersubject.subscribe",{"_index":291,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NavbarComponent.html":{}}}],["this.commonservice.logger(decodedtoken",{"_index":748,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.commonservice.logger(error",{"_index":295,"title":{},"body":{"injectables/AuthGuard.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.logger(response",{"_index":728,"title":{},"body":{"components/PostDataComponent.html":{}}}],["this.commonservice.logger(response.data",{"_index":622,"title":{},"body":{"components/GetDataComponent.html":{}}}],["this.commonservice.notificationsubject$.subscribe((notification",{"_index":711,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.commonservice.signout",{"_index":630,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{}}}],["this.commonservice.token",{"_index":331,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.updateloadersubject(false",{"_index":621,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.updateloadersubject(true",{"_index":620,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.updatenotificationsubject",{"_index":625,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.username",{"_index":749,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.data",{"_index":623,"title":{},"body":{"components/GetDataComponent.html":{}}}],["this.decodetoken",{"_index":568,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.email",{"_index":768,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.httpclient.get(this.backendurl",{"_index":409,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.httpclient.post",{"_index":405,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.httpclient.post(this.backendurl",{"_index":412,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.loaderstatus",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadersubject.asobservable",{"_index":497,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.loadersubject.next(loaderstate",{"_index":520,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.loggedinuser",{"_index":687,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loggedinusersubject.asobservable",{"_index":501,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.loggedinusersubject.next(loggedinuser",{"_index":523,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.logger(error",{"_index":544,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.message",{"_index":783,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["this.notification",{"_index":712,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.notificationsubject.asobservable",{"_index":505,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.notificationsubject.next(notification",{"_index":522,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.password",{"_index":744,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.router.navigate(['/get",{"_index":751,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.router.navigate(['/post",{"_index":770,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.router.navigate(['/signin",{"_index":541,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.signout",{"_index":558,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.title",{"_index":726,"title":{},"body":{"components/PostDataComponent.html":{}}}],["this.token",{"_index":531,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updateloadersubject(false",{"_index":540,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updateloadersubject(true",{"_index":530,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updateloggedinusersubject(username",{"_index":560,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updatenotificationsubject(error.error?.message",{"_index":545,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updatenotificationsubject(response?.body?.message",{"_index":542,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.username",{"_index":532,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["throughout",{"_index":419,"title":{},"body":{"injectables/CommonService.html":{}}}],["time",{"_index":714,"title":{},"body":{"components/NotificationComponent.html":{},"interfaces/decodedJWT.html":{}}}],["title",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{}}}],["token",{"_index":305,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["token(token",{"_index":524,"title":{},"body":{"injectables/CommonService.html":{}}}],["token.split",{"_index":338,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["token.split('.')[1",{"_index":550,"title":{},"body":{"injectables/CommonService.html":{}}}],["token]{@link",{"_index":563,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["top",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["transform",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["transparent",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["true",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":443,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["trying",{"_index":278,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["tslib",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"interfaces/decodedJWT.html":{},"interfaces/requestData.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{},"miscellaneous/variables.html":{}}}],["typography",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["undefined",{"_index":769,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/signUp.html":{}}}],["up",{"_index":327,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/NavbarComponent.html":{},"components/SignupComponent.html":{},"interfaces/signUp.html":{}}}],["update",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["updated",{"_index":708,"title":{},"body":{"components/NotificationComponent.html":{}}}],["updateloadersubject",{"_index":425,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloadersubject(loaderstate",{"_index":471,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloadersubject(true",{"_index":475,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject",{"_index":426,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject(`john",{"_index":478,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject(john",{"_index":482,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject(loggedinuser",{"_index":476,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject",{"_index":427,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject(`hello",{"_index":488,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject(hello",{"_index":489,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject(notification",{"_index":485,"title":{},"body":{"injectables/CommonService.html":{}}}],["updating",{"_index":288,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["url",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{}}}],["use",{"_index":680,"title":{},"body":{"components/NavbarComponent.html":{}}}],["useclass",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["user",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/requestData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["user's",{"_index":481,"title":{},"body":{"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["username",{"_index":286,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/decodedJWT.html":{},"interfaces/responseData.html":{},"interfaces/signIn.html":{},"interfaces/signUp.html":{}}}],["username(username",{"_index":559,"title":{},"body":{"injectables/CommonService.html":{}}}],["username]{@link",{"_index":564,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["users",{"_index":371,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["uses",{"_index":368,"title":{},"body":{"injectables/BackendService.html":{}}}],["utc",{"_index":597,"title":{},"body":{"components/GetDataComponent.html":{}}}],["v0.0.1",{"_index":826,"title":{},"body":{"index.html":{}}}],["value",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":377,"title":{},"body":{"injectables/BackendService.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["variable",{"_index":609,"title":{},"body":{"components/GetDataComponent.html":{},"coverage.html":{}}}],["variables",{"_index":882,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variation",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["version",{"_index":832,"title":{},"body":{"index.html":{},"properties.html":{}}}],["very",{"_index":837,"title":{},"body":{"index.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["wdth",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["web",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"index.html":{}}}],["webkit",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["websocket",{"_index":362,"title":{},"body":{"injectables/BackendService.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["websocketcomponent",{"_index":189,"title":{"components/WebSocketComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["websocketurl",{"_index":347,"title":{},"body":{"injectables/BackendService.html":{},"miscellaneous/variables.html":{}}}],["wght",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["white",{"_index":652,"title":{},"body":{"components/GetDataComponent.html":{}}}],["whole",{"_index":344,"title":{},"body":{"injectables/BackendService.html":{}}}],["width",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["without",{"_index":324,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["world",{"_index":414,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/WebSocketComponent.html":{}}}],["world!&#39",{"_index":491,"title":{},"body":{"injectables/CommonService.html":{}}}],["ws://:3000",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws://localhost:8080",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["xoxoxoxoxo",{"_index":651,"title":{},"body":{"components/GetDataComponent.html":{}}}],["z",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["zone.js",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is the root component of the application.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaderStatus\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            This is the constructor of the root component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to update the loader status.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:36\n                \n            \n\n\n            \n                \n                    This method is used to initialize the root component. It will check if the user is already logged in or not, to handle the page refresh and direct URL access. It will also subscribe to the loaderSubject to update the loaderStatus.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loaderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    This is used to show the loader on the screen. It will be shown when the value is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : appConstant.appName\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n            \n                \n                    This is the title of the application. It will be shown on the browser tab.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonService } from './services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This is the root component of the application.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  /**\n   * This is the constructor of the root component.\n   * @param { CommonService } commonService is used to update the loader status.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This is used to show the loader on the screen. It will be shown when the value is true.\n   * @default false\n   * @type { boolean }\n   */\n  loaderStatus: boolean = false;\n\n  /**\n   * This is the title of the application. It will be shown on the browser tab.\n   * @type { string }\n   */\n  title: string = appConstant.appName;\n\n  /**\n   * This method is used to initialize the root component. It will check if the user is already logged in or not, to handle the page refresh and direct URL access. It will also subscribe to the [loaderSubject]{@link CommonService#loaderSubject} to update the [loaderStatus]{@link loaderStatus}.\n   */\n  ngOnInit(): void {\n    this.commonService.checkSavedCredentials();\n    this.commonService.loaderSubject$.subscribe((loaderStatus: boolean) => {\n      this.loaderStatus = loaderStatus;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Base Frontend\n    \n    \n    \n    \n    \n    \n    Loading...\n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .retro {\n  margin: 20px 20px;\n}\n\n@keyframes hue {\n  from {\n    -webkit-filter: hue-rotate(0deg);\n    text-shadow: -20px -20px hue-rotate(0deg);\n  }\n  to {\n    -webkit-filter: hue-rotate(-360deg);\n    text-shadow: -5px -5px hue-rotate(-360deg);\n  }\n}\n\n.typography {\n  text-align: center;\n  font-size: 100px !important;\n  font-variation-settings: \"wght\" 450, \"wdth\" 180 !important;\n  margin: 20px 0px;\n\n  background-image: -webkit-linear-gradient(90deg, #f35626, #feab3a);\n  text-shadow: -5px -5px #feab3a;\n\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  -webkit-animation: hue 2s infinite cubic-bezier(0.165, 0.84, 0.44, 1)\n    alternate-reverse !important;\n}\n\nspan {\n  text-emphasis: \"x\";\n  background-image: -webkit-linear-gradient(90deg, #f35626, #feab3a);\n  text-shadow: -5px -5px #feab3a;\n}\n\n@media (max-width: 768px) {\n  .typography {\n    font-size: 80px !important;\n  }\n}\n\n@media (max-width: 500px) {\n  .typography {\n    font-size: 50px !important;\n  }\n}\n\n.highlight {\n  position: relative;\n}\n.highlight:before {\n  content: \"\";\n  background-color: black;\n  width: 100%;\n  transform: rotate(-2.5deg);\n  height: 0.9em;\n  position: absolute;\n  z-index: -111;\n  left: -0.45em;\n  top: 0.1em;\n  padding: 0 0.2em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Base Frontend                            Loading...            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGetDataComponent\n\nGetDataComponent\n\nAppModule -->\n\nGetDataComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nAppModule -->\n\nNotificationComponent->AppModule\n\n\n\n\n\nPostDataComponent\n\nPostDataComponent\n\nAppModule -->\n\nPostDataComponent->AppModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAppModule -->\n\nSigninComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nWebSocketComponent\n\nWebSocketComponent\n\nAppModule -->\n\nWebSocketComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nBackendInterceptor\n\nBackendInterceptor\n\nAppModule -->\n\nBackendInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GetDataComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotificationComponent\n                        \n                        \n                            PostDataComponent\n                        \n                        \n                            SigninComponent\n                        \n                        \n                            SignupComponent\n                        \n                        \n                            WebSocketComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthGuard\n                        \n                        \n                            BackendInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { GetDataComponent } from './components/get-data/get-data.component';\nimport { PostDataComponent } from './components/post-data/post-data.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NotificationComponent } from './components/notification/notification.component';\nimport { BackendInterceptor } from './services/backend.interceptor';\nimport { AuthGuard } from './services/auth.guard';\nimport { WebSocketComponent } from './components/web-socket/web-socket.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SigninComponent,\n    SignupComponent,\n    GetDataComponent,\n    PostDataComponent,\n    NavbarComponent,\n    NotificationComponent,\n    WebSocketComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BackendInterceptor,\n      multi: true,\n    },\n    AuthGuard,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { PostDataComponent } from './components/post-data/post-data.component';\nimport { GetDataComponent } from './components/get-data/get-data.component';\nimport { AuthGuard } from './services/auth.guard';\n\n/**\n * This is the routes constant. It contains all the routes of the application.\n */\nconst routes: Routes = [\n  {\n    path: 'signin',\n    component: SigninComponent,\n  },\n  {\n    path: 'signup',\n    component: SignupComponent,\n  },\n  {\n    path: 'post-data',\n    component: PostDataComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'get-data', component: GetDataComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the auth guard service class. It is used to check if the user is logged in or not logged in.\nThis auth guard is used to protect the get data screen and post data screen.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            This is the constructor of the auth guard class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to get the loggedInUserSubject observable. It is used to check if the user is logged in or not logged in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.guard.ts:24\n                \n            \n\n\n            \n                \n                    This method is used to check if the user is logged in or not logged in. It will return true if the user is logged in, else, it will return false.\nThis auth guard is used to protect the get data and post data routes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the route to be activated i.e. the route user is trying to access.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the state of the route to be activated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value. If the user is logged in, returning true, else, returning false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { CommonService } from './common.service';\n\n/**\n * This is the auth guard service class. It is used to check if the user is logged in or not logged in.\n * This auth guard is used to protect the get data screen and post data screen.\n */\n@Injectable()\nexport class AuthGuard {\n  /**\n   * This is the constructor of the auth guard class.\n   * @param commonService is used to get the [loggedInUserSubject]{@link CommonService#loggedInUserSubject} observable. It is used to check if the user is logged in or not logged in.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This method is used to check if the user is logged in or not logged in. It will return true if the user is logged in, else, it will return false.\n   * This auth guard is used to protect the get data and post data routes.\n   * @param route is the route to be activated i.e. the route user is trying to access.\n   * @param state is the state of the route to be activated\n   * @returns a boolean value. If the user is logged in, returning true, else, returning false.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    /**\n     * By default, assuming that the user is not logged in.\n     */\n    let value: boolean = false;\n    /**\n     * Subscribing to the [loggedInUserSubject]{@link CommonService#loggedInUserSubject} observable.\n     * If the user is logged in it would mean that user has a username stored in loggedInUserSubject.\n     * If the user is logged in, updating the value to true. For any error, logging the error.\n     */\n    this.commonService.loggedInUserSubject.subscribe({\n      next: (loggedInUser: string) => {\n        if (loggedInUser.length > 0) {\n          value = true;\n        }\n      },\n      error: (error: any) => {\n        this.commonService.logger(error);\n      },\n    });\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/BackendInterceptor.html":{"url":"interceptors/BackendInterceptor.html","title":"interceptor - BackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  BackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the backend interceptor. It is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            This is the constructor of the backend interceptor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to get the token from the session storage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.interceptor.ts:27\n                \n            \n\n\n            \n                \n                    This method is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the request to be sent to the backend.\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the next handler in the chain.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CommonService } from './common.service';\n\n/**\n * This is the backend interceptor. It is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n */\n@Injectable()\nexport class BackendInterceptor implements HttpInterceptor {\n  /**\n   * This is the constructor of the backend interceptor.\n   * @param commonService is used to get the token from the session storage.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This method is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n   * @param request is the request to be sent to the backend.\n   * @param next is the next handler in the chain.\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    /**  return next.handle(request); */ // This will send the request to the backend without any modification.\n\n    /**\n     * If the request is for sign in or sign up API, then there is no need to add the authorization token to the headers.\n     */\n    if (request.url.includes('signin') || request.url.includes('signup')) {\n      return next.handle(request);\n    }\n    const token: string = this.commonService.token;\n\n    /**\n     * Attaching the authorization token to the headers of the every other backend requests.\n     */\n    return next.handle(\n      request.clone({\n        setHeaders: { Authorization: `Bearer ${token.split(' ')[1]}` },\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendService.html":{"url":"injectables/BackendService.html","title":"injectable - BackendService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the service class for the backend. It is used to make the API calls to the backend. It is injected in the app.module.ts file as it is used in the whole application for making the API calls.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backendUrl\n                            \n                            \n                                websocketUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleGetData\n                            \n                            \n                                handleGetWebSocketData\n                            \n                            \n                                handlePostData\n                            \n                            \n                                handleSignIn\n                            \n                            \n                                handleSignOut\n                            \n                            \n                                handleSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend.service.ts:16\n                            \n                        \n\n                \n                    \n                            This is the constructor of the service class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API calls.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleGetData\n                        \n                    \n                \n            \n            \n                \nhandleGetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:79\n                \n            \n\n\n            \n                \n                    This method is used to get all the data from the backend.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleGetWebSocketData\n                        \n                    \n                \n            \n            \n                \nhandleGetWebSocketData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:94\n                \n            \n\n\n            \n                \n                    This method is used to get message from websocket.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handlePostData\n                        \n                    \n                \n            \n            \n                \nhandlePostData(data: requestData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                requestData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the data to be sent to the backend.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignIn\n                        \n                    \n                \n            \n            \n                \nhandleSignIn(data: signIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:40\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign in API call to the backend. It uses POST method to send the data to the backend. It signs in existing users.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                signIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the data to be sent to the backend.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignOut\n                        \n                    \n                \n            \n            \n                \nhandleSignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:69\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign out API call to the backend. It uses get method to send the data to the backend. It signs out the logged in user.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignUp\n                        \n                    \n                \n            \n            \n                \nhandleSignUp(data: signUp)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:55\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign up API call to the backend. It uses post method to send the data to the backend. It creates a new user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                signUp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backendUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.backendUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/backend.service.ts:27\n                        \n                    \n\n            \n                \n                    This is the URL for the backend. This will be picked from the current environment.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        websocketUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.backendUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/backend.service.ts:33\n                        \n                    \n\n            \n                \n                    This is the URL for the websocket. This will be picked from the current environment.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { signIn } from '../models/signIn.model';\nimport { signUp } from '../models/signUp.model';\nimport { requestData } from '../models/requestData.model';\nimport { apiPathConstant } from 'src/constants/apiPath.constant';\nimport { Observable } from 'rxjs';\n\n/**\n * This is the service class for the backend. It is used to make the API calls to the backend. It is injected in the [app.module.ts]{@link AppModule} file as it is used in the whole application for making the API calls.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BackendService {\n  /**\n   * This is the constructor of the service class.\n   * @param {HttpClient} httpClient is used to make the API calls.\n   */\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * This is the URL for the backend. This will be picked from the current environment.\n   * @type {string}\n   */\n  backendUrl: string = environment.backendUrl;\n\n  /**\n   * This is the URL for the websocket. This will be picked from the current environment.\n   * @type {string}\n   */\n  websocketUrl: string = environment.backendUrl;\n\n  /**\n   * This method is used to handle the sign in API call to the backend. It uses POST method to send the data to the backend. It signs in existing users.\n   * @param {signIn} data is the data to be sent to the backend.\n   * @returns the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n   */\n  handleSignIn(data: signIn) {\n    return this.httpClient.post(\n      this.backendUrl + apiPathConstant.signIn,\n      data,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  /**\n   * This method is used to handle the sign up API call to the backend. It uses post method to send the data to the backend. It creates a new user.\n   * @param {signUp} data\n   * @returns the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n   */\n  handleSignUp(data: signUp) {\n    return this.httpClient.post(\n      this.backendUrl + apiPathConstant.signUp,\n      data,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  /**\n   * This method is used to handle the sign out API call to the backend. It uses get method to send the data to the backend. It signs out the logged in user.\n   * @returns the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n   */\n  handleSignOut() {\n    return this.httpClient.get(this.backendUrl + apiPathConstant.signOut, {\n      observe: 'response',\n    });\n  }\n\n  /**\n   * This method is used to get all the data from the backend.\n   * @returns the response from the backend in the form of an observable.\n   */\n  handleGetData() {\n    return this.httpClient.get(this.backendUrl + apiPathConstant.data);\n  }\n\n  /**\n   * @param {data} data is the data to be sent to the backend.\n   * @returns the response from the backend in the form of an observable.\n   */\n  handlePostData(data: requestData) {\n    return this.httpClient.post(this.backendUrl + apiPathConstant.data, data);\n  }\n\n  /**\n   * This method is used to get message from websocket.\n   */\n  handleGetWebSocketData() {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/common.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the common service. It has the methods and shared observables that are used throughout the application. Therefore, it is injected in the app.module.ts file.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaderSubject\n                            \n                            \n                                loaderSubject$\n                            \n                            \n                                loggedInUserSubject\n                            \n                            \n                                loggedInUserSubject$\n                            \n                            \n                                notificationSubject\n                            \n                            \n                                notificationSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkSavedCredentials\n                            \n                            \n                                decodeToken\n                            \n                            \n                                logger\n                            \n                            \n                                signOut\n                            \n                            \n                                updateLoaderSubject\n                            \n                            \n                                updateLoggedInUserSubject\n                            \n                            \n                                updateNotificationSubject\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                                \n                                    username\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, backendService: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/common.service.ts:14\n                            \n                        \n\n                \n                    \n                            This is the constructor of the CommonService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to navigate the user to different pages.\n\n                                                        \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to call the backend APIs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkSavedCredentials\n                        \n                    \n                \n            \n            \n                \ncheckSavedCredentials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:207\n                \n            \n\n\n            \n                \n                    This method is used to check if the user has already signed in. It will check if the token and username are present in the session storage. If they are present, it will set the token and username.\nFor additional security, it will also check if the username in the token matches the username in the session storage. If they do not match, it will call the signOut method.\nIt will try to decode the token. If an error occurs while decoding the token, it will call the signOut method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeToken\n                        \n                    \n                \n            \n            \n                \ndecodeToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:152\n                \n            \n\n\n            \n                \n                    This method is used to decode the JWT. It will return the decoded JWT. If the token is empty, it will return default response. If while decoding the JWT, an error occurs, it will call the signOut method and return default response.\ndecodeToken(jwt);\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the JWT to be decoded.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            decodeToken(jwt);\n                        \n                    \n                    \n                        Returns :         decodedJWT\n\n                    \n                    \n                        the decoded JWT.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:248\n                \n            \n\n\n            \n                \n                    This method is used to log messages to the console. It will not log anything in production mode. It will also not log anything if the message is empty.\nlogger(`Something happened.`); // This will log 'Something happened.' to the console.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the message to be logged.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            logger(Something happened.); // This will log &#39;Something happened.&#39; to the console.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:113\n                \n            \n\n\n            \n                \n                    This method is used to sign out the signed in user. It will call the handleSignOut method. It will also clear the token and username from the session storage. After that, it will navigate the user to the sign in page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLoaderSubject\n                        \n                    \n                \n            \n            \n                \nupdateLoaderSubject(loaderState: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:38\n                \n            \n\n\n            \n                \n                    This method is used to update the loaderSubject. It will update the loaderSubject with the value of the loaderState parameter.\nupdateLoaderSubject(true); // This will update the loaderSubject with true.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loaderState\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the state of the loader.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            updateLoaderSubject(true); // This will update the loaderSubject with true.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLoggedInUserSubject\n                        \n                    \n                \n            \n            \n                \nupdateLoggedInUserSubject(loggedInUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:90\n                \n            \n\n\n            \n                \n                    This method is used to update the loggedInUserSubject. It will update the loggedInUserSubject with the value of the loggedInUser parameter.\nupdateLoggedInUserSubject(`John Doe`); // This will update the loggedInUserSubject with 'John Doe'.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the logged in user's name which is to be shown on the screen.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            updateLoggedInUserSubject(John Doe); // This will update the loggedInUserSubject with &#39;John Doe&#39;.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNotificationSubject\n                        \n                    \n                \n            \n            \n                \nupdateNotificationSubject(notification: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:64\n                \n            \n\n\n            \n                \n                    This method is used to update the notificationSubject. It will update the notificationSubject with the value of the notification parameter.\nupdateNotificationSubject(`Hello world!`); // This will update the notificationSubject with 'Hello world!'.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    notification\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the notification to be shown on the screen.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            updateNotificationSubject(Hello world!); // This will update the notificationSubject with &#39;Hello world!&#39;.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loaderSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:26\n                        \n                    \n\n            \n                \n                    This is the loader subject. It is used to show the loader on the screen. It is initialized with false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loaderSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:30\n                        \n                    \n\n            \n                \n                    This is the loader subject observable. This is used to subscribe to the loaderSubject.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    ''\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:76\n                        \n                    \n\n            \n                \n                    This is the logged in user subject. It is used to show the logged in user's name on the screen. It is initialized with an empty string.\nloggedInUserSubject.subscribe((loggedInUser: string) => {\n// Do something with the logged in user name.\n});\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUserSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loggedInUserSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:82\n                        \n                    \n\n            \n                \n                    This is the logged in user subject observable. This is used to subscribe to the loggedInUserSubject.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificationSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    ''\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:50\n                        \n                    \n\n            \n                \n                    This is the notification subject. It is used to show the notification on the screen. It is initialized with an empty string.\nnotificationSubject.subscribe((notification: string) => {\n // Do something with the notification.\n});\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificationSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.notificationSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:56\n                        \n                    \n\n            \n                \n                    This is the notification subject observable. This is used to subscribe to the notificationSubject.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:106\n                                \n                            \n                    \n                        \n                                This is used to get the token from the session storage. If the token is not present in the session storage, it will return an empty string.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        settoken(token: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:98\n                                \n                            \n                    \n                        \n                                This is used to set the token in the session storage.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    is the token to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:198\n                                \n                            \n                    \n                        \n                                This is used to get the username from the session storage. If the username is not present in the session storage, it will return an empty string.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setusername(username: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:189\n                                \n                            \n                    \n                        \n                                This is used to set the username in the session storage. It will also update the loggedInUserSubject.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            username\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    is the username to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, finalize } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BackendService } from './backend.service';\nimport { environment } from 'src/environments/environment';\nimport { decodedJWT } from '../models/decodedJWT.model';\n\n/**\n * This is the common service. It has the methods and shared observables that are used throughout the application. Therefore, it is injected in the [app.module.ts]{@link AppModule} file.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommonService {\n  /**\n   * This is the constructor of the [CommonService]{@link CommonService} class.\n   * @param {Router} router is used to navigate the user to different pages.\n   * @param {BackendService} backendService is used to call the backend APIs.\n   */\n  constructor(private router: Router, private backendService: BackendService) {}\n\n  /**\n   * This is the loader subject. It is used to show the loader on the screen. It is initialized with `false`.\n   * @type {BehaviorSubject}\n   */\n  loaderSubject: BehaviorSubject = new BehaviorSubject(false);\n  /**\n   * This is the loader subject observable. This is used to subscribe to the [loaderSubject]{@link loaderSubject}.\n   */\n  loaderSubject$ = this.loaderSubject.asObservable();\n\n  /**\n   * This method is used to update the [loaderSubject]{@link loaderSubject}. It will update the [loaderSubject]{@link loaderSubject} with the value of the `loaderState` parameter.\n   * @param {boolean} loaderState is the state of the loader.\n   * @example\n   * updateLoaderSubject(true); // This will update the loaderSubject with true.\n   */\n  updateLoaderSubject(loaderState: boolean) {\n    this.loaderSubject.next(loaderState);\n  }\n\n  /**\n   * This is the notification subject. It is used to show the notification on the screen. It is initialized with an empty string.\n   * @type {BehaviorSubject}\n   * @example\n   * notificationSubject.subscribe((notification: string) => {\n   *  // Do something with the notification.\n   * });\n   */\n  notificationSubject: BehaviorSubject = new BehaviorSubject(\n    ''\n  );\n  /**\n   * This is the notification subject observable. This is used to subscribe to the [notificationSubject]{@link notificationSubject}.\n   */\n  notificationSubject$ = this.notificationSubject.asObservable();\n\n  /**\n   * This method is used to update the [notificationSubject]{@link notificationSubject}. It will update the [notificationSubject]{@link notificationSubject} with the value of the `notification` parameter.\n   * @param {string} notification is the notification to be shown on the screen.\n   * @example\n   * updateNotificationSubject(`Hello world!`); // This will update the notificationSubject with 'Hello world!'.\n   */\n  updateNotificationSubject(notification: string) {\n    this.notificationSubject.next(notification);\n  }\n\n  /**\n   * This is the logged in user subject. It is used to show the logged in user's name on the screen. It is initialized with an empty string.\n   * @type {BehaviorSubject}\n   * @example\n   * loggedInUserSubject.subscribe((loggedInUser: string) => {\n   * // Do something with the logged in user name.\n   * });\n   */\n  loggedInUserSubject: BehaviorSubject = new BehaviorSubject(\n    ''\n  );\n  /**\n   * This is the logged in user subject observable. This is used to subscribe to the [loggedInUserSubject]{@link loggedInUserSubject}.\n   */\n  loggedInUserSubject$ = this.loggedInUserSubject.asObservable();\n\n  /**\n   * This method is used to update the [loggedInUserSubject]{@link loggedInUserSubject}. It will update the [loggedInUserSubject]{@link loggedInUserSubject} with the value of the `loggedInUser` parameter.\n   * @param {string} loggedInUser is the logged in user's name which is to be shown on the screen.\n   * @example\n   * updateLoggedInUserSubject(`John Doe`); // This will update the loggedInUserSubject with 'John Doe'.\n   */\n  updateLoggedInUserSubject(loggedInUser: string) {\n    this.loggedInUserSubject.next(loggedInUser);\n  }\n\n  /**\n   * This is used to set the token in the session storage.\n   * @param {string} token is the token to be set.\n   */\n  set token(token: string) {\n    sessionStorage.setItem('Authorization', token);\n  }\n\n  /**\n   * This is used to get the token from the session storage. If the token is not present in the session storage, it will return an empty string.\n   * @type {string}\n   */\n  get token(): string {\n    return sessionStorage.getItem('Authorization') || '';\n  }\n\n  /**\n   * This method is used to sign out the signed in user. It will call the [handleSignOut]{@link BackendService#handleSignOut} method. It will also clear the token and username from the session storage. After that, it will navigate the user to the sign in page.\n   */\n  signOut() {\n    /**\n     * Resetting the token and username.\n     */\n    this.updateLoaderSubject(true);\n    this.token = '';\n    this.username = '';\n    sessionStorage.removeItem('Authorization');\n    sessionStorage.removeItem('username');\n\n    /**\n     * Calling the [handleSignOut]{@link handleSignOut} method of the [backendService]{@link BackendService}. If the sign out is successful, it will update the [notificationSubject]{@link notificationSubject} with the message from the response. If an error occurs, it will update the [notificationSubject]{@link notificationSubject} with the error message.\n     */\n    this.backendService\n      .handleSignOut()\n      .pipe(\n        finalize(() => {\n          this.updateLoaderSubject(false);\n          this.router.navigate(['/signin']);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.updateNotificationSubject(response?.body?.message || 'Success');\n        },\n        error: (error: any) => {\n          this.logger(error);\n          this.updateNotificationSubject(error.error?.message || 'Error');\n        },\n      });\n  }\n\n  /**\n   * This method is used to decode the JWT. It will return the decoded JWT. If the token is empty, it will return default response. If while decoding the JWT, an error occurs, it will call the [signOut]{@link signOut} method and return default response.\n   * @param token is the JWT to be decoded.\n   * @example\n   * decodeToken(jwt);\n   * @returns { decodedJWT } the decoded JWT.\n   */\n  decodeToken(token: string): decodedJWT {\n    /**\n     * This is the default response. It will be returned if the token is empty or if an error occurs while decoding the JWT.\n     * @type { decodedJWT }\n     */\n    let response: decodedJWT = {\n      exp: 0,\n      iat: 0,\n      username: '',\n    };\n\n    /**\n     * If the token is empty, returning the default response.\n     */\n    if (!token) {\n      return response;\n    }\n    /**\n     * Trying to decode the JWT. If an error occurs, calling the [signOut]{@link signOut} method and returning the default response.\n     */\n    try {\n      const jwtPayload: string = token.split('.')[1];\n      const base64: string = jwtPayload.replace(/-/g, '+').replace(/_/g, '/');\n      const decodedPayload: any = JSON.parse(atob(base64));\n      response = decodedPayload;\n      return decodedPayload;\n    } catch (error) {\n      this.signOut();\n      this.logger(error);\n      return response;\n    }\n  }\n\n  /**\n   * This is used to set the username in the session storage. It will also update the [loggedInUserSubject]{@link loggedInUserSubject}.\n   * @param {string} username is the username to be set.\n   */\n  set username(username: string) {\n    this.updateLoggedInUserSubject(username);\n    sessionStorage.setItem('username', username);\n  }\n\n  /**\n   * This is used to get the username from the session storage. If the username is not present in the session storage, it will return an empty string.\n   * @type {string}\n   */\n  get username(): string {\n    return sessionStorage.getItem('username') || '';\n  }\n\n  /**\n   * This method is used to check if the user has already signed in. It will check if the token and username are present in the session storage. If they are present, it will set the [token]{@link token} and [username]{@link username}.\n   * For additional security, it will also check if the username in the token matches the username in the session storage. If they do not match, it will call the [signOut]{@link signOut} method.\n   * It will try to decode the token. If an error occurs while decoding the token, it will call the [signOut]{@link signOut} method.\n   */\n  checkSavedCredentials() {\n    try {\n      const sessionStorageToken = sessionStorage.getItem('Authorization');\n      const sessionStorageUsername = sessionStorage.getItem('username');\n\n      const decodedToken: decodedJWT = this.decodeToken(\n        sessionStorageToken || ''\n      );\n\n      /**\n       * If the decoded token has username as empty, calling the [signOut]{@link signOut} method.\n       * If the username in the token does not match the username in the session storage, calling the [signOut]{@link signOut} method.\n       */\n      if (\n        !decodedToken.username ||\n        (decodedToken.username &&\n          decodedToken.username !== sessionStorageUsername)\n      ) {\n        this.signOut();\n        return;\n      }\n\n      /**\n       * If the token and username are present in the session storage, setting the [token]{@link token} and [username]{@link username}. This would handle the case when the user has already signed in and has not signed out i.e the user has closed the browser tab and opened the application again or the user has refreshed the page.\n       */\n      if (sessionStorageToken && sessionStorageUsername) {\n        this.token = sessionStorageToken;\n        this.username = sessionStorageUsername;\n      }\n    } catch (error) {\n      this.signOut();\n      this.logger(error);\n    }\n  }\n\n  /**\n   * This method is used to log messages to the console. It will not log anything in production mode. It will also not log anything if the message is empty.\n   * @param {any} message is the message to be logged.\n   * @example\n   * logger(`Something happened.`); // This will log 'Something happened.' to the console.\n   */\n  logger(message: any) {\n    if (environment.production || !message) {\n      return;\n    }\n    console.log(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GetDataComponent.html":{"url":"components/GetDataComponent.html","title":"component - GetDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GetDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/get-data/get-data.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show all the data from the backend.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-get-data\n            \n\n\n\n            \n                styleUrls\n                ./get-data.component.css\n            \n\n\n\n            \n                templateUrl\n                ./get-data.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                handleGetData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/get-data/get-data.component.ts:15\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatDate\n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/get-data/get-data.component.ts:77\n                \n            \n\n\n            \n                \n                    This method is used to format the date in the format DD/MM/YYYY, HH:MM:SS AM/PM. It will return an empty string if the date is not present or if the date is invalid.\nformatDate('2023-08-01T21:08:40.472Z'); // This will return '8/2/2023, 2:38:40 AM'.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the date to be formatted in UTC format.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            formatDate(&#39;2023-08-01T21:08:40.472Z&#39;); // This will return &#39;8/2/2023, 2:38:40 AM&#39;.\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the date in the format DD/MM/YYYY, HH:MM:SS AM/PM.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleGetData\n                        \n                    \n                \n            \n            \n                \nhandleGetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/get-data/get-data.component.ts:39\n                \n            \n\n\n            \n                \n                    This method is used to get all the data from the backend. It will call the handleGetData method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handleGetData to get the data from the backend. It will update the data with the data received from the backend. For error, it will reset data variable, show the error message on the screen and log the error in the console.\nIf the user is not logged in or the token is expired, then it will sign out the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         responseData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/get-data/get-data.component.ts:31\n                        \n                    \n\n            \n                \n                    This is the data to be shown on the screen. It is initialized with an empty array.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { responseData } from 'src/app/models/responseData.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\n\n/**\n * This component is used to show all the data from the backend.\n */\n@Component({\n  selector: 'app-get-data',\n  templateUrl: './get-data.component.html',\n  styleUrls: ['./get-data.component.css'],\n})\nexport class GetDataComponent {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService\n  ) {}\n\n  /**\n   * This is the data to be shown on the screen. It is initialized with an empty array.\n   * @type {[]responseData}\n   * @default []\n   */\n  data: responseData[] = [];\n\n  /**\n   * This method is used to get all the data from the backend. It will call the [handleGetData]{@link BackendService#handleGetData} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handleGetData]{@link BackendService#handleGetData} to get the data from the backend. It will update the [data]{@link data} with the data received from the backend. For error, it will reset data variable, show the error message on the screen and log the error in the console.\n   * If the user is not logged in or the token is expired, then it will sign out the user.\n   */\n  handleGetData(): void {\n    this.commonService.updateLoaderSubject(true);\n    this.backendService\n      .handleGetData()\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.commonService.logger(response.data);\n          this.data = response.data;\n          this.commonService.updateNotificationSubject(\n            response?.message || 'Success'\n          );\n        },\n        error: (error: any) => {\n          this.data = [];\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message || 'Error'\n          );\n\n          if (error?.status === 401) {\n            this.commonService.signOut();\n          }\n        },\n      });\n  }\n\n  /**\n   * This method is used to format the date in the format DD/MM/YYYY, HH:MM:SS AM/PM. It will return an empty string if the date is not present or if the date is invalid.\n   * @param {Date} date is the date to be formatted in UTC format.\n   * @example\n   * formatDate('2023-08-01T21:08:40.472Z'); // This will return '8/2/2023, 2:38:40 AM'.\n   * @returns the date in the format DD/MM/YYYY, HH:MM:SS AM/PM.\n   */\n  formatDate(date: Date): string {\n    try {\n      if (!date) {\n        return '';\n      }\n      return new Date(date).toLocaleString();\n    } catch {\n      return '';\n    }\n  }\n}\n\n    \n\n    \n        \n  Get data\n  \n    \n      username {{ item.username }}\n      date {{ formatDate(item.createdAt) }}\n      title {{ item.title }}\n      article {{ item.article }}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./get-data.component.css\n                \n                .box {\n  border: 1px solid #000;\n  padding: 20px;\n}\n\n.data {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\nspan {\n  font-variation-settings: \"wght\" 350, \"wdth\" 120;\n}\n\n.highlight {\n  position: relative;\n}\n.highlight:after {\n  position: absolute;\n  content: \"xoxoxoxoxo\";\n  color: white;\n  text-align: center;\n  background-image: -webkit-linear-gradient(90deg, #3d3d3d, #9f9f9f);\n  width: min-content;\n  transform: rotate(8.5deg);\n  height: 1.9em;\n  z-index: -111;\n  top: 0.04em;\n  right: 0.45em;\n  padding: 0 0.2em;\n  text-emphasis: \"x\";\n  filter: blur(0.5px);\n}\n\n.highlight:nth-child(2n + 1):after {\n  transform: rotate(1.8deg);\n  left: -7.15em;\n  left: auto;\n}\n\n.highlight:nth-child(2n):after {\n  transform: rotate(-8.5deg);\n  left: -1.45em;\n  right: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Get data            username {{ item.username }}      date {{ formatDate(item.createdAt) }}      title {{ item.title }}      article {{ item.article }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GetDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the navigation bar on the screen.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggedInUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIsLoggedIn\n                            \n                            \n                                handleSignOut\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to update the loggedInUserSubject.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIsLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIsLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:44\n                \n            \n\n\n            \n                \n                    This method is used to check if the user is logged in or not. And, if user is not logged in, then it will not show the 'Sign out' button, 'Get data' and 'Post data' button on the screen. It would only show the 'Sign in' and 'Sign up' button.\nIt will subscribe to the loggedInUserSubject to get the logged in user's name. It will update the username or log error in the console.\nThis is also use to show the logged in user's name on the screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignOut\n                        \n                    \n                \n            \n            \n                \nhandleSignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:35\n                \n            \n\n\n            \n                \n                    This method is used to sign out the logged in user when user clicks on the 'Sign out' button. It will call the handleSignOut method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:28\n                \n            \n\n\n            \n                \n                    This method is used to initialize the component. It will check if the user is logged in or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:23\n                        \n                    \n\n            \n                \n                    This is the logged in user's name. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonService } from 'src/app/services/common.service';\n\n/**\n * This component is used to show the navigation bar on the screen.\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  /**\n   * This is the constructor of this component.\n   * @param commonService is used to update the [loggedInUserSubject]{@link CommonService#loggedInUserSubject}.\n   */\n  constructor(private commonService: CommonService) {}\n  /**\n   * This is the logged in user's name. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  loggedInUser: string = '';\n\n  /**\n   * This method is used to initialize the component. It will check if the user is logged in or not.\n   */\n  ngOnInit(): void {\n    this.checkIsLoggedIn();\n  }\n\n  /**\n   * This method is used to sign out the logged in user when user clicks on the 'Sign out' button. It will call the [handleSignOut]{@link CommonService#handleSignOut} method.\n   */\n  handleSignOut(): void {\n    this.commonService.signOut();\n  }\n\n  /**\n   * This method is used to check if the user is logged in or not. And, if user is not logged in, then it will not show the 'Sign out' button, 'Get data' and 'Post data' button on the screen. It would only show the 'Sign in' and 'Sign up' button.\n   * It will subscribe to the [loggedInUserSubject]{@link CommonService#loggedInUserSubject} to get the logged in user's name. It will update the username or log error in the console.\n   * This is also use to show the logged in user's name on the screen.\n   */\n  checkIsLoggedIn(): void {\n    this.commonService.loggedInUserSubject.subscribe({\n      next: (loggedInUser: string) => {\n        this.loggedInUser = loggedInUser;\n      },\n      error: (error: any) => {\n        this.loggedInUser = '';\n        this.commonService.logger(error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n   0\" [routerLink]=\"'/'\">{{\n    loggedInUser.length > 0\n      ? \" | \" +\n        loggedInUser.charAt(0).toUpperCase() +\n        loggedInUser.slice(1) +\n        \" | \"\n      : \" | Home | \"\n  }}\n   | Sign in | \n\n   | Sign up | \n\n   0\" [routerLink]=\"'/get-data'\">\n    | Get data |\n  \n\n   0\" [routerLink]=\"'/post-data'\">\n    | Post data |\n  \n\n   0\"\n    style=\"cursor: pointer\"\n    (click)=\"handleSignOut()\"\n  >\n    | Sign out |\n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                nav {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nnav > * {\n  font-variation-settings: \"wght\" 450, \"wdth\" 180 !important;\n}\n\nnav > a:not(:first-child) {\n  margin-left: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   0\" [routerLink]=\"\\'/\\'\">{{    loggedInUser.length > 0      ? \" | \" +        loggedInUser.charAt(0).toUpperCase() +        loggedInUser.slice(1) +        \" | \"      : \" | Home | \"  }}   | Sign in |    | Sign up |    0\" [routerLink]=\"\\'/get-data\\'\">    | Get data |     0\" [routerLink]=\"\\'/post-data\\'\">    | Post data |     0\"    style=\"cursor: pointer\"    (click)=\"handleSignOut()\"  >    | Sign out |  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationComponent.html":{"url":"components/NotificationComponent.html","title":"component - NotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/notification/notification.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the notification on the screen.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification\n            \n\n\n\n            \n                styleUrls\n                ./notification.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notification.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/notification/notification.component.ts:13\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to subscribe to the notificationSubject.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification/notification.component.ts:30\n                \n            \n\n\n            \n                \n                    This method is used to initialize the component. It will subscribe to the notificationSubject to get the updated notification to be shown on the screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notification/notification.component.ts:25\n                        \n                    \n\n            \n                \n                    This is the notification to be shown on the screen. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonService } from 'src/app/services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This component is used to show the notification on the screen.\n */\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css'],\n})\nexport class NotificationComponent implements OnInit {\n  /**\n   * This is the constructor of this component.\n   * @param commonService is used to subscribe to the [notificationSubject]{@link CommonService#notificationSubject}.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This is the notification to be shown on the screen. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  notification: string = '';\n\n  /**\n   * This method is used to initialize the component. It will subscribe to the [notificationSubject]{@link CommonService#notificationSubject} to get the updated notification to be shown on the screen.\n   */\n  ngOnInit(): void {\n    this.commonService.notificationSubject$.subscribe((notification: any) => {\n      this.notification = notification;\n      /**\n       * This is used to hide the notification after a certain time.\n       */\n      setTimeout(() => {\n        this.notification = '';\n      }, appConstant.hideNotifcationAfter);\n    });\n  }\n}\n\n    \n\n    \n        {{ notification }}\n\n    \n\n    \n                \n                    ./notification.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ notification }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostDataComponent.html":{"url":"components/PostDataComponent.html","title":"component - PostDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/post-data/post-data.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show form to send new data form on the screen to backend.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-data\n            \n\n\n\n            \n                styleUrls\n                ./post-data.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post-data.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handlePostData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/post-data/post-data.component.ts:15\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handlePostData\n                        \n                    \n                \n            \n            \n                \nhandlePostData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/post-data/post-data.component.ts:46\n                \n            \n\n\n            \n                \n                    This method is used to handle sending data to the backend. It will call the handlePostData method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handlePostData to sennd the data to the backend. For error, it will show the error message on the screen and log the error in the console.\nIf the user is not logged in or the token is expired, then it will sign out the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        article\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/post-data/post-data.component.ts:31\n                        \n                    \n\n            \n                \n                    This is the article that is needed to be sent to the backend. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/post-data/post-data.component.ts:38\n                        \n                    \n\n            \n                \n                    This is the title that is needed to be sent to the backend. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { requestData } from 'src/app/models/requestData.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\n\n/**\n * This component is used to show form to send new data form on the screen to backend.\n */\n@Component({\n  selector: 'app-post-data',\n  templateUrl: './post-data.component.html',\n  styleUrls: ['./post-data.component.css'],\n})\nexport class PostDataComponent {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService\n  ) {}\n\n  /**\n   * This is the article that is needed to be sent to the backend. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  article: string = '';\n\n  /**\n   * This is the title that is needed to be sent to the backend. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  title: string = '';\n\n  /**\n   * This method is used to handle sending data to the backend. It will call the [handlePostData]{@link BackendService#handlePostData} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handlePostData]{@link BackendService#handlePostData} to sennd the data to the backend. For error, it will show the error message on the screen and log the error in the console.\n   * If the user is not logged in or the token is expired, then it will sign out the user.\n   */\n  handlePostData() {\n    /**\n     * This is the data to be sent to the backend.\n     * @type {requestData}\n     */\n    const data: requestData = {\n      title: this.title,\n      article: this.article,\n    };\n    this.commonService.updateLoaderSubject(true);\n    this.backendService\n      .handlePostData(data)\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.commonService.logger(response);\n          this.commonService.updateNotificationSubject(\n            response?.message || 'Success'\n          );\n        },\n        error: (error: any) => {\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message || 'Error'\n          );\n\n          if (error?.status === 401) {\n            this.commonService.signOut();\n          }\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n    \n  \n  Post data\n\n\n    \n\n    \n                \n                    ./post-data.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Post data'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/signin/signin.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the sign in page on the screen. It is used to sign in the existing users.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signin\n            \n\n\n\n            \n                styleUrls\n                ./signin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleSignIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/signin/signin.component.ts:17\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used here to navigate the user to get data screen after successful sign in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignIn\n                        \n                    \n                \n            \n            \n                \nhandleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signin/signin.component.ts:51\n                \n            \n\n\n            \n                \n                    This method is used to sign in the existing user. It will call the handleSignIn method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handleSignIn to get the data from the backend. It will update the token and username with the data received from the backend.\nFor error, it will show the error message on the screen and log the error in the console.\nAfter successful sign in, it will navigate the user to the get data screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signin/signin.component.ts:42\n                        \n                    \n\n            \n                \n                    This is the password of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signin/signin.component.ts:35\n                        \n                    \n\n            \n                \n                    This is the username of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs';\nimport { signIn } from 'src/app/models/signIn.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\n\n/**\n * This component is used to show the sign in page on the screen. It is used to sign in the existing users.\n */\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   * @param router is used here to navigate the user to get data screen after successful sign in.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService,\n    private router: Router\n  ) {}\n\n  /**\n   * This is the username of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  username: string = '';\n\n  /**\n   * This is the password of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  password: string = '';\n\n  /**\n   * This method is used to sign in the existing user. It will call the [handleSignIn]{@link BackendService#handleSignIn} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handleSignIn]{@link BackendService#handleSignIn} to get the data from the backend. It will update the [token]{@link CommonService#token} and [username]{@link CommonService#username} with the data received from the backend.\n   * For error, it will show the error message on the screen and log the error in the console.\n   * After successful sign in, it will navigate the user to the get data screen.\n   */\n  handleSignIn() {\n    /**\n     * Creating the data to be sent to the backend.\n     * @type {signIn}\n     */\n    const data: signIn = {\n      username: this.username,\n      password: this.password,\n    };\n    this.commonService.updateLoaderSubject(true);\n    this.backendService\n      .handleSignIn(data)\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          const accessToken: string = response.headers.get('Authorization');\n          this.commonService.token = accessToken;\n          const decodedToken = this.commonService.decodeToken(accessToken);\n          this.commonService.logger(decodedToken);\n          this.commonService.username = decodedToken?.username;\n          this.router.navigate(['/get-data']);\n\n          this.commonService.updateNotificationSubject(\n            response?.body?.message || 'Success'\n          );\n        },\n        error: (error: any) => {\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message || 'Error'\n          );\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n  Sign in\n\n\n    \n\n    \n                \n                    ./signin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Sign in'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/signup/signup.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the sign up page on the screen. It is used to create a new user.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n\n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/signup/signup.component.ts:16\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used here to navigate the user to the post data screen after successful sign up.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignUp\n                        \n                    \n                \n            \n            \n                \nhandleSignUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:58\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign up button click. It will call the handleSignUp method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handleSignUp to sign up the user. It will update the token and username in the commonService based on the response from the backend.\nFor error, it will show the error message on the screen and log the error in the console.\nAfter successful sign up, it will navigate the user to the post data screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:49\n                        \n                    \n\n            \n                \n                    This is the email of the user. It is initialized with an empty string. It is optional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:41\n                        \n                    \n\n            \n                \n                    This is the password of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:34\n                        \n                    \n\n            \n                \n                    This is the username of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs';\nimport { signUp } from 'src/app/models/signUp.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\n\n/**\n * This component is used to show the sign up page on the screen. It is used to create a new user.\n */\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   * @param router is used here to navigate the user to the post data screen after successful sign up.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService,\n    private router: Router\n  ) {}\n\n  /**\n   * This is the username of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  username: string = '';\n\n  /**\n   * This is the password of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  password: string = '';\n\n  /**\n   * This is the email of the user. It is initialized with an empty string. It is optional.\n   * @optional\n   * @type {string}\n   * @default ''\n   */\n  email: string = '';\n\n  /**\n   * This method is used to handle the sign up button click. It will call the [handleSignUp]{@link BackendService#handleSignUp} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handleSignUp]{@link BackendService#handleSignUp} to sign up the user. It will update the [token]{@link CommonService#token} and [username]{@link CommonService#username} in the [commonService]{@link CommonService} based on the response from the backend.\n   * For error, it will show the error message on the screen and log the error in the console.\n   * After successful sign up, it will navigate the user to the post data screen.\n   */\n  handleSignUp() {\n    /**\n     * Creating the data object to be sent to the backend.\n     * @type {signUp}\n     */\n    const data: signUp = {\n      username: this.username,\n      password: this.password,\n      email: this.email ? this.email : undefined,\n    };\n    this.commonService.updateLoaderSubject(true);\n    this.backendService\n      .handleSignUp(data)\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          const accessToken: string = response.headers.get('Authorization');\n          this.commonService.token = accessToken;\n          const decodedToken = this.commonService.decodeToken(accessToken);\n          this.commonService.username = decodedToken?.username;\n          this.router.navigate(['/post-data']);\n\n          this.commonService.updateNotificationSubject(\n            response?.message || 'Success'\n          );\n        },\n        error: (error: any) => {\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message || 'Error'\n          );\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  Sign up\n\n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Sign up'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebSocketComponent.html":{"url":"components/WebSocketComponent.html","title":"component - WebSocketComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WebSocketComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/web-socket/web-socket.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the message from the connected websocket.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-web-socket\n            \n\n\n\n            \n                styleUrls\n                ./web-socket.component.css\n            \n\n\n\n            \n                templateUrl\n                ./web-socket.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/web-socket/web-socket.component.ts:11\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/web-socket/web-socket.component.ts:30\n                \n            \n\n\n            \n                \n                    This method is used to initialize the component. It will connect to the websocket.\nIt will subscribe to the handleGetWebSocketData to get the message from the websocket. It will update the message with the data received from the websocket.\nFor error, it will log the error in the console.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/web-socket/web-socket.component.ts:23\n                        \n                    \n\n            \n                \n                    This is the message from the connected websocket. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BackendService } from 'src/app/services/backend.service';\n/**\n * This component is used to show the message from the connected websocket.\n */\n@Component({\n  selector: 'app-web-socket',\n  templateUrl: './web-socket.component.html',\n  styleUrls: ['./web-socket.component.css'],\n})\nexport class WebSocketComponent implements OnInit {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   */\n  constructor(private backendService: BackendService) {}\n\n  /**\n   * This is the message from the connected websocket. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  message: string = '';\n\n  /**\n   * This method is used to initialize the component. It will connect to the websocket.\n   * It will subscribe to the [handleGetWebSocketData]{@link BackendService#handleGetWebSocketData} to get the message from the websocket. It will update the [message]{@link message} with the data received from the websocket.\n   * For error, it will log the error in the console.\n   */\n  ngOnInit(): void {\n    this.message = 'Hello World!';\n  }\n}\n\n    \n\n    \n        {{ message }}\n\n    \n\n    \n                \n                    ./web-socket.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ message }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WebSocketComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/get-data/get-data.component.ts\n            \n            component\n            GetDataComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/notification/notification.component.ts\n            \n            component\n            NotificationComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/post-data/post-data.component.ts\n            \n            component\n            PostDataComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/signin/signin.component.ts\n            \n            component\n            SigninComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/web-socket/web-socket.component.ts\n            \n            component\n            WebSocketComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/decodedJWT.model.ts\n            \n            interface\n            decodedJWT\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/requestData.model.ts\n            \n            interface\n            requestData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/responseData.model.ts\n            \n            interface\n            responseData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/signIn.model.ts\n            \n            interface\n            signIn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/signUp.model.ts\n            \n            interface\n            signUp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/backend.interceptor.ts\n            \n            interceptor\n            BackendInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            injectable\n            BackendService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/constants/apiPath.constant.ts\n            \n            variable\n            apiPathConstant\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants/app.constant.ts\n            \n            variable\n            appConstant\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.production.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/decodedJWT.html":{"url":"interfaces/decodedJWT.html","title":"interface - decodedJWT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  decodedJWT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/decodedJWT.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the decoded JWT.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the expiration time of the JWT.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the issue time of the JWT.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username extracted from the JWT.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface decodedJWT {\n  /**\n   * This is the expiration time of the JWT.\n   */\n  exp: number;\n  /**\n   * This is the issue time of the JWT.\n   */\n  iat: number;\n  /**\n   * This is the username extracted from the JWT.\n   */\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.0\n        \n            @angular/common : ^16.0.0\n        \n            @angular/compiler : ^16.0.0\n        \n            @angular/core : ^16.0.0\n        \n            @angular/forms : ^16.0.0\n        \n            @angular/platform-browser : ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^16.0.0\n        \n            @angular/router : ^16.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBase Frontend v0.0.1\n\n\nIntroduction\nThis project was generated with Angular CLI version 16.0.2.\nThis application serves as the frontend for base-node-server application.\nThis is a very minimal and basic single page web application to quickly test out the server in the browser. It has been documented, but I always strive to do better.\nRunning the application\nRun ng serve or npm run development for development server. Run npm run production for production server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nDocumentation for the application\nRun npm run compdoc for generating documentation. Navigate to http://127.0.0.1:5500/frontend/documentation/index.html for the documentation.\nBuilding the application (for production)\nRun npm build for generating production build files. Navigate to dist folder to see the files.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGetDataComponent\n\nGetDataComponent\n\nAppModule -->\n\nGetDataComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nAppModule -->\n\nNotificationComponent->AppModule\n\n\n\n\n\nPostDataComponent\n\nPostDataComponent\n\nAppModule -->\n\nPostDataComponent->AppModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAppModule -->\n\nSigninComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nWebSocketComponent\n\nWebSocketComponent\n\nAppModule -->\n\nWebSocketComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nBackendInterceptor\n\nBackendInterceptor\n\nAppModule -->\n\nBackendInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/requestData.html":{"url":"interfaces/requestData.html","title":"interface - requestData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  requestData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/requestData.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            article\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        article\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        article:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the article provided by the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the title provided by the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface requestData {\n  /**\n   * This is the title provided by the user.\n   */\n  title: string;\n  /**\n   * This is the article provided by the user.\n   */\n  article: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/responseData.html":{"url":"interfaces/responseData.html","title":"interface - responseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  responseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/responseData.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the response data that comes from the backend.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            article\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        article\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        article:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the article that comes from the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the created date that comes from the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the title that comes from the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username that comes from the backend.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface responseData {\n  /**\n   * This is the username that comes from the backend.\n   */\n  username: string;\n  /**\n   * This is the title that comes from the backend.\n   */\n  title: string;\n  /**\n   * This is the article that comes from the backend.\n   */\n  article: string;\n  /**\n   * This is the created date that comes from the backend.\n   */\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/signIn.html":{"url":"interfaces/signIn.html","title":"interface - signIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  signIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/signIn.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the sign in data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the password of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface signIn {\n  /**\n   * This is the username of the user.\n   */\n  username: string;\n  /**\n   * This is the password of the user.\n   */\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/signUp.html":{"url":"interfaces/signUp.html","title":"interface - signUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  signUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/signUp.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the sign up data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    This is the email of the user. It is optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the password of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface signUp {\n  /**\n   * This is the email of the user. It is optional.\n   * @optional\n   */\n  email?: string | undefined;\n  /**\n   * This is the username of the user.\n   */\n  username: string;\n  /**\n   * This is the password of the user.\n   */\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiPathConstant   (src/.../apiPath.constant.ts)\n                        \n                        \n                            appConstant   (src/.../app.constant.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.production.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants/apiPath.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiPathConstant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  signUp: '/signup',\n  signIn: '/signin',\n  signOut: '/signout',\n  data: '/data',\n  websocket: '/websocket',\n}\n                    \n                \n\n            \n                \n                    These are the API path constants.\n\n                \n            \n\n        \n    \n\n    src/constants/app.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConstant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  appName: 'Angular App',\n  hideNotifcationAfter: 5000,\n}\n                    \n                \n\n            \n                \n                    These are the common app constants.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  backendUrl: 'http://localhost:3000/api',\n  websocketUrl: 'ws://localhost:8080',\n  production: false,\n}\n                    \n                \n\n            \n                \n                    This is the environment file for the development environment.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  backendUrl: 'http://:3000/api',\n  websocketUrl: 'ws://:3000',\n  production: true,\n}\n                    \n                \n\n            \n                \n                    This is the environment file for the production environment.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  backendUrl: '',\n  websocketUrl: '',\n  production: false,\n}\n                    \n                \n\n            \n                \n                    This is the environment file for the default environment.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
