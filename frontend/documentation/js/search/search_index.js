var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.426,1,0.83]],["body/components/AppComponent.html",[0,0.765,1,1.238,2,1.274,3,0.291,4,0.251,5,0.96,6,0.96,7,0.96,8,0.96,9,0.213,10,1.945,11,0.554,12,3.761,13,2.498,14,1.274,15,2.55,16,0.96,17,2.235,18,1.839,19,1.405,20,4.082,21,1.405,22,3.45,23,0.427,24,0.554,25,4.996,26,2.659,27,0.951,28,2.807,29,1.125,30,1.31,31,1.458,32,1.238,33,2.357,34,0.649,35,0.039,36,1.125,37,0.591,38,0.587,39,1.377,40,2.022,41,2.242,42,3.45,43,2.357,44,0.951,45,2.155,46,2.155,47,0.951,48,2.848,49,1.553,50,1.919,51,1.919,52,3.45,53,3.45,54,2.848,55,2.848,56,1.274,57,1.945,58,0.649,59,1.274,60,3.192,61,1.125,62,1.238,63,2.55,64,2.357,65,1.274,66,1.274,67,2.807,68,1.919,69,0.656,70,3.45,71,2.357,72,1.722,73,2.848,74,0.918,75,0.476,76,2.357,77,0.87,78,1.061,79,0.291,80,0.53,81,0.649,82,0.96,83,1.945,84,2.357,85,2.357,86,2.357,87,2.357,88,2.357,89,2.848,90,2.848,91,3.45,92,2.357,93,2.848,94,3.947,95,2.357,96,4.996,97,4.261,98,2.848,99,3.45,100,4.369,101,4.493,102,3.369,103,3.45,104,4.996,105,4.082,106,1.674,107,1.674,108,3.192,109,4.082,110,2.357,111,3.947,112,1.674,113,1.674,114,1.674,115,1.945,116,1.674,117,1.945,118,2.357,119,3.709,120,2.848,121,2.848,122,2.848,123,3.45,124,4.493,125,2.357,126,2.357,127,2.848,128,2.357,129,2.357,130,2.357,131,2.357,132,2.357,133,2.357,134,2.357,135,2.357,136,1.945,137,2.357,138,2.357,139,1.945,140,1.945,141,1.945,142,3.45,143,3.45,144,3.369,145,2.357,146,2.357,147,2.357,148,2.357,149,1.945,150,2.848,151,1.945,152,2.357,153,1.674,154,2.357,155,1.945,156,1.945,157,2.357,158,1.945,159,2.357,160,1.945,161,1.945,162,1.945,163,1.674,164,1.945,165,1.945,166,2.357,167,1.945,168,1.31,169,1.945,170,0.79,171,1.405,172,1.405,173,0.96,174,1.83,175,0.96,176,0.96,177,0.587,178,1.405,179,0.649,180,0.96,181,0.649,182,0.96,183,0.587,184,0.717,185,0.587,186,0.96,187,0.587,188,0.96,189,0.649,190,0.87,191,0.96,192,0.96,193,0.96,194,0.021,195,0.021]],["title/modules/AppModule.html",[196,1.881,197,1.503]],["body/modules/AppModule.html",[1,1.637,3,0.397,4,0.342,9,0.29,18,1.076,35,0.039,68,1.785,72,1.602,74,1.357,75,0.649,79,0.397,80,0.722,170,1.076,177,1.375,179,1.52,181,1.52,183,1.375,185,1.375,187,1.375,189,1.52,194,0.026,195,0.026,196,2.005,197,3.098,198,1.785,199,2.005,200,3.981,201,3.981,202,3.981,203,2.281,204,2.65,205,2.65,206,2.65,207,2.65,208,2.65,209,3.066,210,2.752,211,3.066,212,3.537,213,2.281,214,1.186,215,3.21,216,3.537,217,3.537,218,4.284,219,2.65,220,3.21,221,3.21,222,2.65,223,2.65,224,2.65,225,2.005,226,3.537,227,2.65,228,2.005,229,3.21,230,4.284,231,2.65,232,4.284,233,4.284,234,2.281,235,3.21,236,3.21,237,2.65,238,3.21,239,2.281,240,3.21,241,3.21,242,3.21,243,3.21]],["title/modules/AppRoutingModule.html",[196,1.881,209,1.675]],["body/modules/AppRoutingModule.html",[0,0.787,3,0.488,4,0.42,9,0.356,13,2.194,35,0.039,74,1.328,75,0.797,79,0.488,80,0.887,177,1.22,183,1.22,184,1.199,185,1.22,187,1.22,194,0.03,195,0.03,198,2.194,203,2.803,209,2.721,210,2.654,216,3.257,217,4.039,222,3.257,223,3.257,224,3.257,225,2.464,226,4.039,227,3.257,228,2.464,237,3.257,244,3.945,245,3.945,246,4.893,247,3.179,248,1.969,249,3.945,250,3.945,251,1.969,252,4.718,253,1.776,254,1.776,255,1.1,256,4.039,257,3.945,258,3.945]],["title/injectables/AuthGuard.html",[210,1.503,259,1.227]],["body/injectables/AuthGuard.html",[3,0.362,4,0.312,9,0.264,11,0.739,23,0.362,27,1.109,29,1.268,30,1.629,31,1.515,32,1.109,34,1.109,35,0.039,36,1.109,37,0.498,38,1.004,39,1.613,44,1.109,46,3.352,47,1.651,49,2.726,55,3.323,58,1.109,60,3.69,61,0.807,62,1.479,63,3.244,66,1.83,68,2.984,69,0.47,74,1.034,75,0.592,79,0.362,80,1.168,81,1.268,82,1.193,168,1.629,184,1.506,194,0.025,195,0.025,210,2.009,247,2.239,248,1.461,255,1.259,256,3.798,259,1.64,260,1.829,261,2.418,262,5.6,263,5.6,264,2.861,265,4.954,266,2.929,267,2.861,268,2.874,269,2.929,270,4.954,271,4.43,272,4.954,273,2.929,274,2.888,275,5.682,276,4.954,277,3.323,278,3.323,279,4.09,280,2.418,281,2.861,282,3.323,283,2.929,284,2.929,285,2.929,286,0.982,287,2.929,288,2.929,289,1.83,290,2.929,291,2.418,292,1.193,293,2.081,294,2.418,295,1.461]],["title/interceptors/BackendInterceptor.html",[211,1.675,296,2.14]],["body/interceptors/BackendInterceptor.html",[3,0.393,4,0.339,9,0.287,11,0.771,14,1.175,23,0.393,27,1.174,29,1.323,30,1.769,31,1.548,32,1.174,34,1.174,35,0.039,36,1.174,37,0.526,38,1.062,39,1.516,44,1.174,58,0.877,69,0.511,74,1.153,75,0.643,79,0.393,80,0.715,81,1.323,82,1.296,136,2.627,194,0.026,195,0.026,211,2.368,234,2.261,251,1.588,259,1.735,268,2.999,274,2.67,280,2.627,292,2.241,296,3.643,297,3.182,298,2.627,299,2.191,300,5.617,301,2.355,302,4.232,303,5.345,304,3.991,305,2.602,306,5.501,307,1.894,308,3.182,309,3.516,310,3.516,311,3.182,312,5.127,313,5.127,314,3.182,315,5.617,316,2.368,317,4.259,318,4.259,319,3.182,320,4.259,321,1.175,322,4.259,323,2.261,324,3.182,325,3.182,326,1.427,327,1.588,328,3.182,329,3.182,330,3.182,331,2.261,332,3.182,333,3.182,334,3.182,335,3.182,336,3.182,337,3.182,338,3.182]],["title/injectables/BackendService.html",[259,1.227,339,1.112]],["body/injectables/BackendService.html",[3,0.243,4,0.209,9,0.331,11,0.659,12,1.397,13,1.675,23,0.243,24,0.484,27,0.83,29,1.009,32,1.416,34,1.131,35,0.039,36,1.131,37,0.62,38,1.023,39,1.553,44,1.553,47,1.131,49,1.356,50,2.596,54,3.388,58,1.47,61,0.83,62,0.83,69,0.78,74,1.093,75,0.397,79,0.243,80,0.995,81,1.131,82,0.801,184,1.248,194,0.019,195,0.019,197,0.981,214,1.516,234,1.397,253,1.992,254,1.992,255,1.306,259,1.227,260,1.228,264,2.916,268,3.277,274,2.596,299,2.25,301,2.328,302,3.854,304,3.317,305,2.101,307,1.999,316,2.282,323,3.317,326,1.565,327,1.503,339,1.113,340,1.623,341,2.048,342,2.487,343,1.623,344,3.012,345,3.012,346,3.023,347,3.023,348,3.388,349,3.388,350,2.487,351,2.487,352,2.916,353,2.487,354,1.966,355,5.013,356,1.966,357,1.966,358,2.7,359,4.33,360,1.966,361,1.356,362,2.916,363,2.487,364,2.461,365,1.966,366,2.487,367,1.966,368,4.669,369,4.105,370,2.487,371,2.487,372,4.669,373,4.669,374,3.854,375,3.854,376,4.669,377,4.669,378,4.669,379,3.317,380,3.854,381,3.854,382,3.854,383,5.14,384,4.669,385,1.966,386,2.487,387,1.966,388,3.012,389,1.503,390,4.105,391,1.966,392,4.105,393,4.105,394,2.764,395,1.966,396,1.966,397,1.623,398,1.966,399,1.966,400,1.966,401,1.397,402,1.966,403,1.623,404,1.623,405,3.012,406,3.012,407,1.966,408,1.966,409,3.012,410,1.966,411,3.012,412,1.966,413,1.623,414,1.623]],["title/injectables/CommonService.html",[31,0.83,259,1.227]],["body/injectables/CommonService.html",[3,0.143,4,0.124,9,0.231,11,0.687,12,0.824,13,1.422,23,0.143,24,0.316,27,0.83,29,0.705,31,0.83,32,1.416,34,1.131,35,0.039,36,1.339,37,0.628,38,1.023,39,1.593,40,2.452,41,2.048,44,1.51,46,2.287,47,1.399,48,2.111,49,2.101,50,0.645,51,1.422,56,1.441,57,4.078,58,1.286,59,1.516,60,2.14,61,1.314,62,1.286,63,1.228,65,1.352,66,1.634,67,1.881,68,1.422,69,0.926,72,0.579,73,0.957,74,0.877,75,0.234,77,0.428,78,0.522,79,0.143,80,0.575,81,1.178,82,0.472,83,2.111,168,1.093,194,0.012,195,0.012,197,0.579,214,1.112,248,0.579,251,1.827,259,0.801,260,0.724,264,1.396,267,3.609,268,2.287,271,1.622,274,2.824,277,0.957,278,0.957,279,1.622,281,2.14,286,1.882,289,1.724,292,0.472,293,2.14,299,0.726,305,2.588,307,1.634,309,4.33,310,4.33,321,0.428,326,1.129,339,1.634,342,1.622,343,0.957,352,1.817,358,2.187,361,1.925,374,0.957,375,0.957,380,3.853,381,1.622,382,0.957,389,1.827,394,0.724,397,0.957,403,0.957,404,0.957,413,1.622,414,2.782,415,0.957,416,1.622,417,1.965,418,1.965,419,1.965,420,4.192,421,3.012,422,1.965,423,1.965,424,3.937,425,1.965,426,1.965,427,1.965,428,1.965,429,1.16,430,2.916,431,1.16,432,1.881,433,1.965,434,1.965,435,1.965,436,1.16,437,3.661,438,1.925,439,1.965,440,1.965,441,1.965,442,2.558,443,2.486,444,3.37,445,3.902,446,3.37,447,1.965,448,1.16,449,3.853,450,3.221,451,2.012,452,2.558,453,3.853,454,2.437,455,1.965,456,1.16,457,1.925,458,1.965,459,1.517,460,3.012,461,1.396,462,1.965,463,1.965,464,3.37,465,3.661,466,1.16,467,1.16,468,1.16,469,1.16,470,1.965,471,1.965,472,1.16,473,3.012,474,3.661,475,2.558,476,1.965,477,1.16,478,1.965,479,3.37,480,1.965,481,2.486,482,1.16,483,1.16,484,1.16,485,1.965,486,1.16,487,2.425,488,1.965,489,1.16,490,1.16,491,1.16,492,4.859,493,1.965,494,1.16,495,4.668,496,1.491,497,1.965,498,1.16,499,1.16,500,1.965,501,1.965,502,1.16,503,1.16,504,1.965,505,1.965,506,1.16,507,1.16,508,1.16,509,1.16,510,1.16,511,1.16,512,1.16,513,1.16,514,1.16,515,1.093,516,1.16,517,1.16,518,0.957,519,0.522,520,1.16,521,2.782,522,1.16,523,1.16,524,1.16,525,1.16,526,1.16,527,1.622,528,1.16,529,1.16,530,1.16,531,1.965,532,1.396,533,1.16,534,1.16,535,3.012,536,1.16,537,0.824,538,0.645,539,0.645,540,1.16,541,1.16,542,1.965,543,0.957,544,0.645,545,1.965,546,2.558,547,0.645,548,0.645,549,3.661,550,0.957,551,0.957,552,1.16,553,1.16,554,1.16,555,1.16,556,1.16,557,1.16,558,1.965,559,1.16,560,1.622,561,2.558,562,1.16,563,1.16,564,1.16,565,1.965,566,1.396,567,1.396,568,3.012,569,1.16,570,0.957,571,3.012,572,0.824,573,1.16,574,2.558,575,1.16,576,1.16,577,1.16,578,1.16,579,1.16,580,1.16]],["title/interfaces/DecodedJWT.html",[454,1.881,581,0.916]],["body/interfaces/DecodedJWT.html",[3,0.52,4,0.448,9,0.38,11,0.675,23,0.52,24,0.817,35,0.038,37,0.676,69,0.878,79,0.52,194,0.031,195,0.031,286,1.982,449,4.94,450,3.471,454,3.178,550,4.692,551,4.692,581,1.547,582,2.098,583,3.471,584,5.915,585,5.087,586,4.692,587,5.087,588,5.087]],["title/components/GetDataComponent.html",[0,0.426,177,0.751]],["body/components/GetDataComponent.html",[0,0.741,1,0.501,2,1.048,3,0.225,4,0.194,5,0.741,6,0.741,7,0.741,8,0.741,9,0.164,11,0.56,14,1.048,16,0.741,17,2.092,18,1.721,19,1.156,21,1.156,23,0.351,24,0.456,26,1.578,27,0.782,29,1.085,31,1.347,32,1.247,34,0.782,35,0.039,36,1.085,37,0.559,38,0.707,39,1.464,40,1.277,41,2.258,44,1.247,47,1.085,49,1.277,56,0.672,58,1.085,59,1.288,61,0.782,62,0.501,65,1.897,66,1.897,67,1.772,69,0.633,74,1.017,75,0.368,77,0.672,78,0.819,79,0.225,80,0.409,81,0.961,94,1.502,97,1.502,98,1.502,100,2.342,102,1.502,106,2.016,107,2.478,108,1.293,112,1.293,113,1.293,114,1.293,116,1.293,119,1.502,120,1.502,121,1.502,122,1.502,127,1.502,139,1.502,140,1.502,141,1.502,144,1.502,149,1.502,150,2.342,151,1.502,153,2.478,156,2.879,158,1.502,160,1.502,161,1.502,162,1.502,163,2.478,164,1.502,165,1.502,167,2.342,168,1.012,169,1.502,170,0.61,171,1.156,172,1.156,173,0.741,174,1.604,175,0.741,176,0.741,177,0.982,178,1.156,179,0.501,180,0.741,181,0.501,182,0.741,183,0.454,184,0.553,185,0.454,186,0.741,187,0.454,188,0.741,189,0.501,190,0.672,191,0.741,192,0.741,193,0.741,194,0.017,195,0.017,213,2.016,214,1.048,225,2.951,255,1.298,274,2.718,286,0.951,289,1.805,292,0.741,295,0.908,299,1.963,301,1.843,305,1.277,307,1.805,321,0.672,326,0.951,339,1.745,341,1.416,348,3.9,358,1.57,361,1.277,389,0.908,438,1.773,443,1.502,451,1.843,453,2.342,457,1.277,459,1.277,487,1.965,496,1.604,515,1.578,519,2.036,538,1.012,539,1.012,544,1.012,547,1.012,548,1.012,560,1.502,589,3.9,590,1.293,591,1.74,592,2.879,593,2.342,594,2.688,595,2.837,596,1.965,597,1.012,598,1.502,599,2.837,600,4.689,601,1.82,602,4.888,603,3.939,604,3.939,605,3.939,606,2.837,607,2.837,608,3.488,609,2.837,610,2.837,611,3.488,612,2.837,613,2.837,614,1.82,615,1.82,616,1.82,617,1.82,618,1.82,619,1.772,620,1.772,621,1.578,622,1.772,623,1.772,624,2.016,625,2.342,626,2.342,627,1.82,628,1.416,629,1.416,630,1.416,631,2.46,632,1.502,633,2.837,634,1.502,635,1.82,636,1.012,637,0.908,638,2.837,639,2.837,640,1.82,641,1.137,642,1.416,643,1.137,644,1.82,645,2.837,646,1.82,647,1.772,648,1.293,649,2.837,650,1.502,651,1.502,652,1.293,653,1.82,654,0.908,655,2.837,656,2.837,657,2.837,658,1.772,659,2.837,660,1.82,661,1.82,662,1.82,663,1.82,664,1.82,665,1.502,666,2.342,667,1.82,668,1.82,669,1.502,670,1.502,671,1.82,672,1.82,673,1.82,674,1.82,675,1.82,676,1.82,677,1.82,678,1.82,679,1.82,680,1.82,681,1.82,682,2.837,683,1.82,684,2.837,685,1.82,686,1.82,687,1.82,688,1.82,689,2.837,690,1.82,691,1.82,692,1.82]],["title/components/NavbarComponent.html",[0,0.426,179,0.83]],["body/components/NavbarComponent.html",[0,0.786,1,0.575,2,1.164,3,0.258,4,0.222,5,0.85,6,0.85,7,0.85,8,0.85,9,0.188,11,0.506,14,1.164,15,2.373,16,0.85,17,2.17,18,1.786,19,1.284,21,1.284,23,0.258,24,0.506,27,0.869,28,2.644,29,1.047,30,1.161,31,1.367,32,1.367,34,0.575,35,0.039,36,1.441,37,0.562,38,0.52,39,1.512,40,1.905,44,1.407,45,1.969,46,2.644,47,1.468,49,2.522,56,1.164,58,1.166,59,1.832,61,0.869,62,0.575,65,1.886,66,1.765,69,0.767,74,0.854,75,0.422,79,0.258,80,0.469,81,0.575,82,0.85,93,1.723,106,1.483,107,2.24,108,1.483,111,1.723,112,1.483,113,1.483,114,1.483,115,1.723,116,1.483,117,1.723,153,1.483,163,1.483,168,2.963,170,0.699,171,1.284,172,1.284,173,0.85,174,1.724,175,0.85,176,0.85,177,0.52,178,1.284,179,1.166,180,0.85,181,0.575,182,0.85,183,0.52,184,1.382,185,0.52,186,0.85,187,0.52,188,0.85,189,0.575,190,0.771,191,0.85,192,0.85,193,0.85,194,0.019,195,0.019,214,1.886,255,1.233,267,2.24,281,2.24,282,2.602,286,1.056,289,1.563,291,1.723,292,0.85,293,3.228,294,2.602,295,1.041,307,1.164,321,0.771,326,1.909,327,2.112,352,3.228,438,1.419,451,1.724,457,1.419,459,1.419,481,3.944,496,1.724,519,1.905,527,1.723,591,1.895,594,2.769,596,2.112,628,1.573,629,1.573,630,1.573,637,1.041,642,1.573,652,1.483,654,1.041,665,1.723,666,1.723,669,1.723,670,1.723,693,1.723,694,3.152,695,3.152,696,3.152,697,3.799,698,3.152,699,4.233,700,2.087,701,2.087,702,4.216,703,3.152,704,2.087,705,3.152,706,2.087,707,2.087,708,2.087,709,2.087,710,2.087,711,2.087,712,3.152,713,3.152,714,3.152,715,3.152,716,3.152,717,2.087,718,2.087,719,3.152,720,3.152,721,3.152,722,3.799,723,2.087,724,2.087,725,2.087,726,2.087,727,2.087]],["title/components/NotificationComponent.html",[0,0.426,181,0.83]],["body/components/NotificationComponent.html",[0,0.828,1,0.765,2,1.433,3,0.343,4,0.296,5,1.13,6,1.13,7,1.13,8,1.13,9,0.25,11,0.623,14,1.433,15,2.793,16,1.13,17,2.317,18,1.906,19,1.58,21,1.58,23,0.343,24,0.623,27,1.069,28,3.024,29,1.232,30,1.543,31,1.493,32,1.404,34,0.765,35,0.039,36,1.232,37,0.63,38,0.692,39,1.547,44,1.069,45,2.423,56,1.788,58,1.069,59,1.651,61,1.069,62,0.765,65,1.433,66,1.949,67,3.024,69,0.818,74,1.089,75,0.561,77,1.025,78,1.249,79,0.343,80,0.624,81,0.765,82,1.13,170,0.93,171,1.58,172,1.58,173,1.13,174,1.972,175,1.13,176,1.13,177,0.692,178,1.58,179,0.765,180,1.13,181,1.334,182,1.13,183,0.692,184,0.844,185,0.692,186,1.13,187,0.692,188,1.13,189,0.765,190,1.025,191,1.13,192,1.13,193,1.13,194,0.024,195,0.024,321,1.025,420,3.202,438,1.746,451,1.972,487,2.968,496,1.972,519,2.179,521,3.202,586,2.291,591,2.231,594,2.917,596,2.416,621,1.543,628,1.935,629,1.935,630,1.935,637,1.385,642,1.935,654,1.385,728,2.291,729,4.471,730,3.879,731,2.775,732,2.775,733,2.775,734,3.879,735,2.775,736,2.775,737,3.879,738,2.775,739,3.879,740,2.775,741,2.775,742,2.775]],["title/components/PostDataComponent.html",[0,0.426,183,0.751]],["body/components/PostDataComponent.html",[0,0.774,1,0.601,2,1.203,3,0.269,4,0.232,5,0.888,6,0.888,7,0.888,8,0.888,9,0.197,11,0.523,14,1.203,16,0.888,17,2.194,18,1.805,19,1.326,21,1.326,23,0.269,24,0.523,26,2.701,27,0.897,29,1.192,31,1.426,32,1.338,34,0.601,35,0.039,36,1.074,37,0.64,38,0.543,39,1.484,41,2.423,44,1.192,47,1.192,49,1.466,50,1.811,56,0.805,58,0.897,59,1.203,61,1.192,62,0.897,65,1.989,66,1.989,69,0.865,74,1.092,75,0.44,77,0.805,78,0.981,79,0.269,80,0.49,81,0.897,170,0.73,171,1.326,172,1.326,173,0.888,174,1.762,175,0.888,176,0.888,177,0.543,178,1.326,179,0.601,180,0.888,181,0.601,182,0.888,183,1.078,184,1.638,185,0.543,186,0.888,187,0.543,188,0.888,189,0.601,190,0.805,191,0.888,192,0.888,193,0.888,194,0.02,195,0.02,214,1.203,228,3.144,251,1.087,255,1.245,289,1.911,292,0.888,295,1.087,299,2.104,301,1.978,305,1.466,307,1.911,316,2.574,321,0.805,323,2.314,326,1.091,339,1.859,341,1.625,350,4.009,358,1.755,359,3.57,361,1.466,363,1.799,364,2.168,389,1.625,438,1.466,451,1.978,457,1.466,459,1.466,487,2.158,496,1.978,515,1.811,519,2.186,538,1.212,539,1.212,544,1.212,547,1.212,548,1.212,590,1.548,591,1.945,592,3.218,593,2.688,594,2.793,596,2.158,597,1.212,598,1.799,619,2.034,620,2.034,621,1.811,622,2.034,623,2.034,626,2.688,628,1.625,629,1.625,630,1.625,632,1.799,634,1.799,636,1.212,637,1.087,641,1.361,642,1.625,643,1.361,647,2.034,648,1.548,650,1.799,651,1.799,652,1.548,654,1.087,658,3.034,743,4.155,744,2.179,745,3.256,746,3.256,747,2.179,748,4.325,749,2.179,750,2.179,751,3.256,752,3.256,753,2.179,754,2.179,755,2.179,756,3.256]],["title/interfaces/RequestData.html",[364,1.675,581,0.916]],["body/interfaces/RequestData.html",[3,0.54,4,0.465,9,0.394,11,0.701,23,0.54,24,0.836,26,3.318,35,0.038,37,0.643,47,1.586,69,0.958,79,0.54,194,0.032,195,0.032,255,0.982,364,2.893,581,1.582,582,2.178,658,3.727,757,3.604,758,5.755]],["title/interfaces/ResponseData.html",[581,0.916,631,1.881]],["body/interfaces/ResponseData.html",[3,0.499,4,0.43,9,0.364,11,0.648,23,0.499,24,0.796,26,3.257,35,0.038,37,0.693,69,0.97,79,0.499,194,0.031,195,0.031,255,0.907,286,1.963,299,2.23,358,1.815,581,1.508,582,2.012,600,4.748,631,3.098,658,3.658,759,3.329,760,6.039,761,5.603,762,4.094]],["title/interfaces/SignIn.html",[253,1.356,581,0.916]],["body/interfaces/SignIn.html",[3,0.543,4,0.468,9,0.396,11,0.705,23,0.543,24,0.839,35,0.038,37,0.646,47,1.589,69,0.959,79,0.543,194,0.032,195,0.032,253,2.35,255,0.987,286,2.002,326,1.472,581,1.588,582,2.192,763,3.625,764,3.732]],["title/interfaces/SignUp.html",[254,1.356,581,0.916]],["body/interfaces/SignUp.html",[3,0.513,4,0.442,9,0.374,11,0.666,23,0.513,24,0.81,35,0.039,37,0.672,38,1.445,47,1.625,69,0.974,79,0.513,194,0.031,195,0.031,254,2.271,255,0.933,286,1.976,326,1.39,327,2.07,581,1.534,582,2.07,764,3.683,765,3.425,766,4.867,767,4.489]],["title/components/SigninComponent.html",[0,0.426,185,0.751]],["body/components/SigninComponent.html",[0,0.77,1,0.587,2,1.182,3,0.263,4,0.227,5,0.868,6,0.868,7,0.868,8,0.868,9,0.192,11,0.514,14,1.182,16,0.868,17,2.181,18,1.795,19,1.304,21,1.304,23,0.263,24,0.514,27,0.882,29,1.178,31,1.416,32,1.327,34,0.587,35,0.039,36,1.06,37,0.635,38,0.531,39,1.55,40,1.441,41,2.403,44,1.178,47,1.476,51,1.78,56,0.787,58,0.882,59,1.182,61,1.178,62,0.882,65,1.978,66,2.078,69,0.873,74,1.123,75,0.43,77,0.787,78,0.959,79,0.263,80,0.479,81,1.06,170,0.714,171,1.304,172,1.304,173,0.868,174,1.742,175,0.868,176,0.868,177,0.531,178,1.304,179,0.587,180,0.868,181,0.587,182,0.868,183,0.531,184,0.648,185,1.066,186,0.868,187,0.531,188,0.868,189,0.587,190,0.787,191,0.868,192,0.868,193,0.868,194,0.02,195,0.02,248,1.063,251,1.919,253,2.063,255,1.223,286,1.674,289,1.898,292,0.868,295,1.063,299,1.942,301,1.961,305,0.959,307,1.898,316,1.184,321,0.787,326,1.847,331,1.513,339,1.845,341,1.597,351,3.975,358,1.731,361,1.441,366,1.758,370,3.53,371,2.642,430,3.651,432,2.671,438,1.441,451,1.961,457,1.441,459,1.441,487,2.134,496,1.961,515,1.78,519,2.248,532,1.513,537,3.038,538,1.184,539,1.184,543,1.758,544,1.184,547,1.184,548,1.184,566,1.513,567,1.513,570,1.758,572,1.513,591,1.919,594,2.78,596,2.134,597,1.184,619,2,620,2,621,1.78,622,2,623,2,624,2.274,628,1.597,629,1.597,630,1.597,636,1.184,637,1.063,641,1.331,642,1.597,643,1.331,647,2,654,1.063,764,3.008,768,1.758,769,3.846,770,3.201,771,2.13,772,2.642,773,2.13,774,2.13,775,2.13,776,2.13,777,2.13,778,2.13,779,3.201,780,3.201,781,1.758,782,1.758,783,1.758,784,1.758,785,2.642,786,2.13,787,1.758,788,2.13,789,1.758,790,1.758,791,2.13,792,3.201]],["title/components/SignupComponent.html",[0,0.426,187,0.751]],["body/components/SignupComponent.html",[0,0.759,1,0.553,2,1.13,3,0.248,4,0.214,5,0.817,6,0.817,7,0.817,8,0.817,9,0.181,11,0.491,14,1.13,16,0.817,17,2.148,18,1.767,19,1.246,21,1.246,23,0.248,24,0.491,27,0.843,29,1.143,31,1.453,32,1.349,34,0.553,35,0.039,36,1.022,37,0.652,38,1.034,39,1.532,40,1.377,41,2.348,44,1.143,47,1.532,50,1.701,51,1.701,56,0.741,58,0.843,59,1.13,61,1.297,62,1.022,65,1.948,66,2.054,69,0.909,74,1.1,75,0.405,77,0.741,78,0.903,79,0.248,80,0.451,81,1.022,170,0.672,171,1.246,172,1.246,173,0.817,174,1.689,175,0.817,176,0.817,177,0.5,178,1.246,179,0.553,180,0.817,181,0.553,182,0.817,183,0.5,184,1.358,185,0.5,186,0.817,187,1.034,188,0.817,189,0.553,190,0.741,191,0.817,192,0.817,193,0.817,194,0.019,195,0.019,248,1.001,251,1.85,254,2.01,255,1.1,286,1.64,289,1.863,292,0.817,295,1.001,299,1.807,301,1.917,305,0.903,307,1.863,316,1.116,321,0.741,326,1.822,327,2.713,331,1.425,339,1.807,341,1.526,353,3.884,358,2.01,361,1.377,386,1.656,389,1.526,430,3.585,432,2.591,438,1.377,451,2.055,457,1.377,459,1.377,487,2.07,496,2.055,515,1.701,518,1.656,519,2.203,532,1.425,537,2.947,538,1.116,539,1.116,544,1.116,547,1.116,548,1.116,566,1.425,567,1.425,572,1.425,591,1.85,594,2.746,596,2.07,597,1.116,619,1.911,620,1.911,621,1.701,622,2.591,623,1.911,628,1.526,629,1.526,630,1.526,636,1.116,637,1.001,641,1.253,642,1.526,643,1.253,647,1.911,648,1.425,654,1.001,702,2.525,764,2.939,766,3.884,767,1.656,772,2.525,781,1.656,782,1.656,783,1.656,784,1.656,785,2.525,787,1.656,789,1.656,790,1.656,793,1.656,794,3.059,795,3.708,796,3.059,797,2.006,798,2.006,799,3.059,800,2.006,801,2.006,802,2.006,803,2.006,804,2.006,805,2.006,806,3.059,807,3.059,808,1.656,809,3.059,810,2.006,811,2.006,812,3.059]],["title/components/WebSocketComponent.html",[0,0.426,189,0.83]],["body/components/WebSocketComponent.html",[0,0.81,1,0.831,2,1.516,3,0.373,4,0.321,5,1.228,6,1.228,7,1.228,8,1.228,9,0.272,11,0.659,14,1.516,15,2.917,16,1.228,17,2.355,18,1.938,19,1.673,21,1.673,23,0.373,24,0.659,27,1.131,28,3.132,29,1.287,32,1.287,34,0.831,35,0.039,36,1.287,37,0.577,38,0.751,39,1.492,40,1.848,44,1.131,45,2.565,56,1.516,58,0.831,59,1.516,61,1.131,62,0.831,65,1.516,69,0.843,74,0.923,75,0.609,79,0.373,80,0.678,81,0.831,82,1.228,170,1.01,171,1.673,172,1.673,173,1.228,174,2.043,175,1.228,176,1.228,177,0.751,178,1.673,179,0.831,180,1.228,181,0.831,182,1.228,183,0.751,184,0.916,185,0.751,186,1.228,187,0.751,188,1.228,189,1.382,190,2.082,191,1.902,192,1.228,193,1.228,194,0.025,195,0.025,239,3.563,255,0.923,289,1.852,299,1.516,301,1.673,307,1.516,339,2.046,341,2.049,349,2.488,361,2.665,362,4.108,451,1.673,457,1.848,459,1.848,496,1.673,597,1.676,624,2.917,636,1.676,813,4.139,814,2.488,815,5.014,816,4.67,817,4.106,818,3.014,819,3.014,820,4.106,821,3.014,822,3.014,823,3.014,824,3.014]],["title/coverage.html",[825,3.388]],["body/coverage.html",[0,0.833,1,1.012,9,0.331,10,3.031,31,1.012,35,0.038,37,0.454,77,1.356,155,5.131,177,0.915,179,1.012,181,1.012,183,0.915,185,0.915,187,0.915,189,1.012,194,0.029,195,0.029,210,1.832,211,2.042,225,2.293,228,2.293,239,2.609,253,1.653,254,1.653,259,2.096,261,3.031,296,2.609,298,3.031,339,1.356,340,3.031,364,2.042,389,1.832,394,3.214,401,2.609,415,3.031,454,2.293,581,1.701,583,3.031,589,3.031,590,3.323,625,4.619,631,2.293,693,3.031,728,3.031,743,3.031,757,3.031,759,3.031,763,3.031,765,3.031,768,3.031,793,3.031,813,3.031,814,3.031,825,3.031,826,3.031,827,3.672,828,3.672,829,4.677,830,5.146,831,4.677,832,3.672,833,5.146,834,5.418,835,3.672,836,3.672,837,3.672,838,3.031,839,5.595,840,3.031,841,3.031,842,3.031,843,3.031,844,3.672,845,3.672]],["title/dependencies.html",[199,2.261,846,2.079]],["body/dependencies.html",[35,0.038,72,2.647,75,0.911,194,0.033,195,0.033,199,2.817,219,4.379,231,3.723,248,2.251,321,1.666,847,4.511,848,6.112,849,4.511,850,4.511,851,4.511,852,4.511,853,4.511,854,4.511,855,4.511,856,4.511]],["title/index.html",[23,0.311,379,1.789,857,2.518]],["body/index.html",[4,0.438,13,3.312,35,0.031,51,2.285,72,2.051,89,4.47,90,4.141,190,1.518,194,0.031,195,0.031,214,1.518,432,3.383,461,4.007,762,3.392,826,4.47,858,4.109,859,4.109,860,4.109,861,4.109,862,3.392,863,4.109,864,3.392,865,4.109,866,4.109,867,5.017,868,5.64,869,4.109,870,4.109,871,4.109,872,4.109,873,4.109,874,4.109,875,4.109,876,4.109,877,4.109,878,5.956,879,4.109,880,4.109,881,5.64,882,4.141,883,4.109,884,4.109,885,4.109,886,4.109,887,5.416,888,4.109,889,5.017,890,4.109,891,4.109,892,5.017,893,4.109,894,4.109,895,4.109]],["title/modules.html",[198,2.282]],["body/modules.html",[35,0.034,72,2.384,194,0.034,195,0.034,197,2.384,198,2.657,209,2.657,896,4.779,897,4.779,898,5.486,899,4.779,900,4.779]],["title/overview.html",[901,3.388]],["body/overview.html",[1,1.63,2,1.47,35,0.038,170,1.334,177,1.331,179,1.471,181,1.471,183,1.331,185,1.331,187,1.331,189,1.471,194,0.03,195,0.03,196,2.487,197,3.135,198,2.214,199,2.487,200,3.286,201,3.286,202,3.286,203,2.829,204,3.286,205,3.286,206,3.286,207,3.286,208,3.286,209,2.969,210,2.665,211,2.969,212,4.061,213,2.829,214,1.47,247,2.214,260,2.487,582,1.987,901,3.286,902,3.981,903,3.981,904,3.981,905,4.92]],["title/properties.html",[24,0.581,846,2.079]],["body/properties.html",[24,0.778,35,0.036,194,0.034,195,0.034,864,3.997,906,4.842]],["title/routes.html",[247,2.282]],["body/routes.html",[35,0.034,194,0.034,195,0.034,247,2.711]],["title/miscellaneous/variables.html",[907,2.079,908,2.989]],["body/miscellaneous/variables.html",[9,0.467,18,1.581,23,0.46,35,0.039,37,0.695,61,1.582,62,1.548,63,2.946,68,2.07,77,1.742,194,0.029,195,0.029,214,1.375,252,3.072,253,2.331,254,2.331,255,1.224,289,1.742,301,1.516,304,2.644,327,1.857,346,4.275,347,4.275,362,3.352,379,2.644,394,3.791,401,3.352,416,3.072,424,4.275,461,3.869,808,4.638,838,3.072,840,3.072,841,3.072,842,3.072,843,3.072,862,3.072,882,3.072,907,3.072,908,3.072,909,3.722,910,3.722,911,3.722,912,3.722,913,3.722,914,4.717,915,3.722,916,3.722,917,3.722,918,3.722,919,4.717,920,5.179,921,3.722,922,3.722,923,3.722,924,3.722,925,3.722,926,3.722,927,3.722]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["0.0.1",{"_index":906,"title":{},"body":{"properties.html":{}}}],["0.04em",{"_index":681,"title":{},"body":{"components/GetDataComponent.html":{}}}],["0.13.0",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2em",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["0.44",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["0.45em",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["0.84",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["0.9em",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["000",{"_index":664,"title":{},"body":{"components/GetDataComponent.html":{}}}],["01t21:08:40.472z",{"_index":609,"title":{},"body":{"components/GetDataComponent.html":{}}}],["01t21:08:40.472z&#39",{"_index":615,"title":{},"body":{"components/GetDataComponent.html":{}}}],["08",{"_index":608,"title":{},"body":{"components/GetDataComponent.html":{}}}],["0px",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interceptors/BackendInterceptor.html":{}}}],["1):after",{"_index":686,"title":{},"body":{"components/GetDataComponent.html":{}}}],["1.45em",{"_index":692,"title":{},"body":{"components/GetDataComponent.html":{}}}],["1.9em",{"_index":680,"title":{},"body":{"components/GetDataComponent.html":{}}}],["1/1",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["100px",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":725,"title":{},"body":{"components/NavbarComponent.html":{}}}],["111",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["120",{"_index":672,"title":{},"body":{"components/GetDataComponent.html":{}}}],["15/15",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["16.0.2",{"_index":865,"title":{},"body":{"index.html":{}}}],["180",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["1px",{"_index":662,"title":{},"body":{"components/GetDataComponent.html":{}}}],["2",{"_index":902,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["2.5deg",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["2:38:40",{"_index":611,"title":{},"body":{"components/GetDataComponent.html":{}}}],["2s",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":904,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":671,"title":{},"body":{"components/GetDataComponent.html":{}}}],["360deg",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["39;8/2/2023",{"_index":616,"title":{},"body":{"components/GetDataComponent.html":{}}}],["39;hello",{"_index":490,"title":{},"body":{"injectables/CommonService.html":{}}}],["39;john",{"_index":483,"title":{},"body":{"injectables/CommonService.html":{}}}],["39;something",{"_index":467,"title":{},"body":{"injectables/CommonService.html":{}}}],["3d3d3d",{"_index":676,"title":{},"body":{"components/GetDataComponent.html":{}}}],["4/4",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":651,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["450",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["5",{"_index":905,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500px",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["50px",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["5px",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["6/6",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["7.15em",{"_index":688,"title":{},"body":{"components/GetDataComponent.html":{}}}],["7.8.0",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":903,"title":{},"body":{"overview.html":{}}}],["8.5deg",{"_index":691,"title":{},"body":{"components/GetDataComponent.html":{}}}],["8/2/2023",{"_index":610,"title":{},"body":{"components/GetDataComponent.html":{}}}],["8/8",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["9/10",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["9f9f9f",{"_index":677,"title":{},"body":{"components/GetDataComponent.html":{}}}],["a:not(:first",{"_index":723,"title":{},"body":{"components/NavbarComponent.html":{}}}],["absolute",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["access",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{}}}],["accessors",{"_index":428,"title":{},"body":{"injectables/CommonService.html":{}}}],["accesstoken",{"_index":785,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["activated",{"_index":276,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["activatedroutesnapshot",{"_index":270,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["actual_component",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["add",{"_index":303,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["additional",{"_index":439,"title":{},"body":{"injectables/CommonService.html":{}}}],["again",{"_index":577,"title":{},"body":{"injectables/CommonService.html":{}}}],["align",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["already",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["alternate",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["always",{"_index":874,"title":{},"body":{"index.html":{}}}],["am&#39",{"_index":617,"title":{},"body":{"components/GetDataComponent.html":{}}}],["am/pm",{"_index":605,"title":{},"body":{"components/GetDataComponent.html":{}}}],["angular",{"_index":862,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{}}}],["angular/compiler",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["anything",{"_index":460,"title":{},"body":{"injectables/CommonService.html":{}}}],["api",{"_index":301,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["apipathconstant",{"_index":401,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipathconstant.data",{"_index":411,"title":{},"body":{"injectables/BackendService.html":{}}}],["apipathconstant.signin",{"_index":407,"title":{},"body":{"injectables/BackendService.html":{}}}],["apipathconstant.signout",{"_index":410,"title":{},"body":{"injectables/BackendService.html":{}}}],["apipathconstant.signup",{"_index":408,"title":{},"body":{"injectables/BackendService.html":{}}}],["apis",{"_index":435,"title":{},"body":{"injectables/CommonService.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module.ts",{"_index":343,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["app.module.ts]{@link",{"_index":403,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconstant",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appconstant.appname",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["appconstant.authorizationheaderkey",{"_index":570,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{}}}],["appconstant.error",{"_index":548,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["appconstant.getdata",{"_index":649,"title":{},"body":{"components/GetDataComponent.html":{}}}],["appconstant.hidenotifcationafter",{"_index":742,"title":{},"body":{"components/NotificationComponent.html":{}}}],["appconstant.postdata",{"_index":756,"title":{},"body":{"components/PostDataComponent.html":{}}}],["appconstant.signin",{"_index":792,"title":{},"body":{"components/SigninComponent.html":{}}}],["appconstant.signout",{"_index":545,"title":{},"body":{"injectables/CommonService.html":{}}}],["appconstant.signup",{"_index":812,"title":{},"body":{"components/SignupComponent.html":{}}}],["appconstant.success",{"_index":544,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["application",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"index.html":{}}}],["appmodule",{"_index":197,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":209,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":633,"title":{},"body":{"components/GetDataComponent.html":{}}}],["article",{"_index":658,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{}}}],["assuming",{"_index":283,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["attaching",{"_index":332,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["auth",{"_index":262,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguard",{"_index":210,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authorization",{"_index":304,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"miscellaneous/variables.html":{}}}],["authorizationheaderkey",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":689,"title":{},"body":{"components/GetDataComponent.html":{}}}],["automatically",{"_index":884,"title":{},"body":{"index.html":{}}}],["available",{"_index":900,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":299,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"interfaces/ResponseData.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["backend.service",{"_index":516,"title":{},"body":{"injectables/CommonService.html":{}}}],["backendinterceptor",{"_index":211,"title":{"interceptors/BackendInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/BackendInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["backendservice",{"_index":339,"title":{"injectables/BackendService.html":{}},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{}}}],["backendservice#handlegetdata",{"_index":639,"title":{},"body":{"components/GetDataComponent.html":{}}}],["backendservice#handlegetwebsocketdata",{"_index":823,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["backendservice#handlepostdata",{"_index":752,"title":{},"body":{"components/PostDataComponent.html":{}}}],["backendservice#handlesignin",{"_index":780,"title":{},"body":{"components/SigninComponent.html":{}}}],["backendservice#handlesignout",{"_index":528,"title":{},"body":{"injectables/CommonService.html":{}}}],["backendservice#handlesignup",{"_index":807,"title":{},"body":{"components/SignupComponent.html":{}}}],["backendservice]{@link",{"_index":536,"title":{},"body":{"injectables/CommonService.html":{}}}],["backendurl",{"_index":346,"title":{},"body":{"injectables/BackendService.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["bar",{"_index":695,"title":{},"body":{"components/NavbarComponent.html":{}}}],["base",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["base64",{"_index":554,"title":{},"body":{"injectables/CommonService.html":{}}}],["based",{"_index":622,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["basic",{"_index":870,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":337,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["behaviorsubject",{"_index":492,"title":{},"body":{"injectables/CommonService.html":{}}}],["behaviorsubject(false",{"_index":493,"title":{},"body":{"injectables/CommonService.html":{}}}],["better",{"_index":876,"title":{},"body":{"index.html":{}}}],["bezier(0.165",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["black",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["blur(0.5px",{"_index":683,"title":{},"body":{"components/GetDataComponent.html":{}}}],["body",{"_index":373,"title":{},"body":{"injectables/BackendService.html":{}}}],["boolean",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["bootstrap",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":661,"title":{},"body":{"components/GetDataComponent.html":{}}}],["box",{"_index":660,"title":{},"body":{"components/GetDataComponent.html":{}}}],["browse",{"_index":898,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CommonService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":892,"title":{},"body":{"index.html":{}}}],["building",{"_index":891,"title":{},"body":{"index.html":{}}}],["button",{"_index":702,"title":{},"body":{"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["call",{"_index":307,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["called",{"_index":628,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["calling",{"_index":535,"title":{},"body":{"injectables/CommonService.html":{}}}],["calls",{"_index":302,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{}}}],["canactivate",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{}}}],["canactivate(route",{"_index":269,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["case",{"_index":375,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["catch",{"_index":560,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["center",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["certain",{"_index":740,"title":{},"body":{"components/NotificationComponent.html":{}}}],["chain",{"_index":318,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["change",{"_index":886,"title":{},"body":{"index.html":{}}}],["check",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["checkisloggedin",{"_index":699,"title":{},"body":{"components/NavbarComponent.html":{}}}],["checksavedcredentials",{"_index":421,"title":{},"body":{"injectables/CommonService.html":{}}}],["child",{"_index":724,"title":{},"body":{"components/NavbarComponent.html":{}}}],["child(2n",{"_index":685,"title":{},"body":{"components/GetDataComponent.html":{}}}],["child(2n):after",{"_index":690,"title":{},"body":{"components/GetDataComponent.html":{}}}],["class",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["clear",{"_index":470,"title":{},"body":{"injectables/CommonService.html":{}}}],["cli",{"_index":863,"title":{},"body":{"index.html":{}}}],["click",{"_index":799,"title":{},"body":{"components/SignupComponent.html":{}}}],["click)=\"handlesignout",{"_index":721,"title":{},"body":{"components/NavbarComponent.html":{}}}],["clicks",{"_index":705,"title":{},"body":{"components/NavbarComponent.html":{}}}],["clip",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["closed",{"_index":575,"title":{},"body":{"injectables/CommonService.html":{}}}],["cluster_appmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["column",{"_index":668,"title":{},"body":{"components/GetDataComponent.html":{}}}],["comes",{"_index":760,"title":{},"body":{"interfaces/ResponseData.html":{}}}],["common",{"_index":416,"title":{},"body":{"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["common.service",{"_index":280,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{}}}],["commonservice",{"_index":31,"title":{"injectables/CommonService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["commonservice#handlesignout",{"_index":711,"title":{},"body":{"components/NavbarComponent.html":{}}}],["commonservice#loadersubject",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["commonservice#loggedinusersubject",{"_index":282,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NavbarComponent.html":{}}}],["commonservice#notificationsubject",{"_index":737,"title":{},"body":{"components/NotificationComponent.html":{}}}],["commonservice#token",{"_index":781,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["commonservice#username",{"_index":782,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["commonservice]{@link",{"_index":518,"title":{},"body":{"injectables/CommonService.html":{},"components/SignupComponent.html":{}}}],["compdoc",{"_index":888,"title":{},"body":{"index.html":{}}}],["completed",{"_index":620,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"overview.html":{}}}],["components/get",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.component",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["components/notification/notification.component",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["components/post",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/signin/signin.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/signup/signup.component",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/web",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":820,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["connected",{"_index":815,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["console",{"_index":459,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["console.log(message",{"_index":580,"title":{},"body":{"injectables/CommonService.html":{}}}],["const",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["constant",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constants",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["constructor(backendservice",{"_index":597,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["constructor(commonservice",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{}}}],["constructor(httpclient",{"_index":354,"title":{},"body":{"injectables/BackendService.html":{}}}],["constructor(private",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["constructor(router",{"_index":429,"title":{},"body":{"injectables/CommonService.html":{}}}],["contains",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["content",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["coverage",{"_index":825,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":794,"title":{},"body":{"components/SignupComponent.html":{}}}],["created",{"_index":762,"title":{},"body":{"interfaces/ResponseData.html":{},"index.html":{}}}],["createdat",{"_index":761,"title":{},"body":{"interfaces/ResponseData.html":{}}}],["creates",{"_index":388,"title":{},"body":{"injectables/BackendService.html":{}}}],["creating",{"_index":783,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["cubic",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["current",{"_index":393,"title":{},"body":{"injectables/BackendService.html":{}}}],["data",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["data'},{'name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["data.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["data.component.css",{"_index":592,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.html",{"_index":593,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.ts",{"_index":590,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"coverage.html":{}}}],["data.component.ts:101",{"_index":627,"title":{},"body":{"components/GetDataComponent.html":{}}}],["data.component.ts:16",{"_index":598,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.ts:32",{"_index":632,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.ts:39",{"_index":634,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.ts:46",{"_index":749,"title":{},"body":{"components/PostDataComponent.html":{}}}],["data.component.ts:47",{"_index":618,"title":{},"body":{"components/GetDataComponent.html":{}}}],["data.component.ts:54",{"_index":744,"title":{},"body":{"components/PostDataComponent.html":{}}}],["data.component.ts:87",{"_index":601,"title":{},"body":{"components/GetDataComponent.html":{}}}],["data.component.ts:96",{"_index":747,"title":{},"body":{"components/PostDataComponent.html":{}}}],["data/get",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"coverage.html":{}}}],["data/post",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PostDataComponent.html":{},"coverage.html":{}}}],["data]{@link",{"_index":640,"title":{},"body":{"components/GetDataComponent.html":{}}}],["date",{"_index":600,"title":{},"body":{"components/GetDataComponent.html":{},"interfaces/ResponseData.html":{}}}],["date(date).tolocalestring",{"_index":653,"title":{},"body":{"components/GetDataComponent.html":{}}}],["dd/mm/yyyy",{"_index":603,"title":{},"body":{"components/GetDataComponent.html":{}}}],["declarations",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":444,"title":{},"body":{"injectables/CommonService.html":{}}}],["decoded",{"_index":450,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{}}}],["decodedjwt",{"_index":454,"title":{"interfaces/DecodedJWT.html":{}},"body":{"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"coverage.html":{}}}],["decodedpayload",{"_index":558,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodedtoken",{"_index":572,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["decodedtoken.username",{"_index":574,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodedtoken?.username",{"_index":790,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["decodetoken",{"_index":422,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodetoken(jwt",{"_index":452,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodetoken(token",{"_index":447,"title":{},"body":{"injectables/CommonService.html":{}}}],["decoding",{"_index":446,"title":{},"body":{"injectables/CommonService.html":{}}}],["default",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["dependencies",{"_index":199,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["destroyed",{"_index":629,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["development",{"_index":882,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":433,"title":{},"body":{"injectables/CommonService.html":{}}}],["direct",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["direction",{"_index":667,"title":{},"body":{"components/GetDataComponent.html":{}}}],["directive",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["directives",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["display",{"_index":665,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["dist",{"_index":893,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":826,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":873,"title":{},"body":{"index.html":{}}}],["doe",{"_index":479,"title":{},"body":{"injectables/CommonService.html":{}}}],["doe&#39",{"_index":484,"title":{},"body":{"injectables/CommonService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["dynamic",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["email",{"_index":766,"title":{},"body":{"interfaces/SignUp.html":{},"components/SignupComponent.html":{}}}],["emphasis",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["empty",{"_index":451,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["environment",{"_index":394,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.backendurl",{"_index":390,"title":{},"body":{"injectables/BackendService.html":{}}}],["environment.production",{"_index":579,"title":{},"body":{"injectables/CommonService.html":{}}}],["error",{"_index":289,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["error.error?.message",{"_index":547,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["error?.status",{"_index":650,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["example",{"_index":453,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["existing",{"_index":370,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["exp",{"_index":550,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{}}}],["expiration",{"_index":585,"title":{},"body":{"interfaces/DecodedJWT.html":{}}}],["expired",{"_index":626,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["export",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["exports",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extracted",{"_index":588,"title":{},"body":{"interfaces/DecodedJWT.html":{}}}],["f35626",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["feab3a",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":887,"title":{},"body":{"index.html":{}}}],["fill",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["finalize",{"_index":515,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["flex",{"_index":666,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["folder",{"_index":894,"title":{},"body":{"index.html":{}}}],["font",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["form",{"_index":359,"title":{},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["format",{"_index":602,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate",{"_index":595,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate(&#39;2023",{"_index":614,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate('2023",{"_index":607,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate(date",{"_index":599,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate(item.createdat",{"_index":656,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatted",{"_index":612,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formsmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["g",{"_index":556,"title":{},"body":{"injectables/CommonService.html":{}}}],["generated",{"_index":861,"title":{},"body":{"index.html":{}}}],["generating",{"_index":889,"title":{},"body":{"index.html":{}}}],["getdata",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getdatacomponent",{"_index":177,"title":{"components/GetDataComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["getting",{"_index":379,"title":{"index.html":{}},"body":{"injectables/BackendService.html":{},"miscellaneous/variables.html":{}}}],["gettoken",{"_index":507,"title":{},"body":{"injectables/CommonService.html":{}}}],["getusername",{"_index":511,"title":{},"body":{"injectables/CommonService.html":{}}}],["gradient(90deg",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["graph",{"_index":899,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":263,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handle",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/PostDataComponent.html":{},"components/SignupComponent.html":{}}}],["handlegetdata",{"_index":348,"title":{},"body":{"injectables/BackendService.html":{},"components/GetDataComponent.html":{}}}],["handlegetdata]{@link",{"_index":638,"title":{},"body":{"components/GetDataComponent.html":{}}}],["handlegetwebsocketdata",{"_index":349,"title":{},"body":{"injectables/BackendService.html":{},"components/WebSocketComponent.html":{}}}],["handlegetwebsocketdata]{@link",{"_index":822,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["handlepostdata",{"_index":350,"title":{},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["handlepostdata(data",{"_index":363,"title":{},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["handlepostdata]{@link",{"_index":751,"title":{},"body":{"components/PostDataComponent.html":{}}}],["handler",{"_index":317,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["handlesignin",{"_index":351,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["handlesignin(data",{"_index":366,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["handlesignin]{@link",{"_index":779,"title":{},"body":{"components/SigninComponent.html":{}}}],["handlesignout",{"_index":352,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["handlesignout]{@link",{"_index":527,"title":{},"body":{"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["handlesignup",{"_index":353,"title":{},"body":{"injectables/BackendService.html":{},"components/SignupComponent.html":{}}}],["handlesignup(data",{"_index":386,"title":{},"body":{"injectables/BackendService.html":{},"components/SignupComponent.html":{}}}],["handlesignup]{@link",{"_index":806,"title":{},"body":{"components/SignupComponent.html":{}}}],["happened",{"_index":464,"title":{},"body":{"injectables/CommonService.html":{}}}],["happened.&#39",{"_index":468,"title":{},"body":{"injectables/CommonService.html":{}}}],["header",{"_index":376,"title":{},"body":{"injectables/BackendService.html":{}}}],["headers",{"_index":306,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["height",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["hello",{"_index":413,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["here",{"_index":772,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["hh:mm:ss",{"_index":604,"title":{},"body":{"components/GetDataComponent.html":{}}}],["hide",{"_index":621,"title":{},"body":{"components/GetDataComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["hidenotifcationafter",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highlight",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["highlight:after",{"_index":673,"title":{},"body":{"components/GetDataComponent.html":{}}}],["highlight:before",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["highlight:nth",{"_index":684,"title":{},"body":{"components/GetDataComponent.html":{}}}],["home",{"_index":716,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["http://127.0.0.1:5500/frontend/documentation/index.html",{"_index":890,"title":{},"body":{"index.html":{}}}],["http://:3000/api",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000/api",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":883,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":355,"title":{},"body":{"injectables/BackendService.html":{}}}],["httpclientmodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":319,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httphandler",{"_index":313,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httpinterceptor",{"_index":320,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httprequest",{"_index":312,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httpresponse",{"_index":396,"title":{},"body":{"injectables/BackendService.html":{}}}],["hue",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["i.e",{"_index":277,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["iat",{"_index":551,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{}}}],["identifier",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interceptors/BackendInterceptor.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["import",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["important",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["imports",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["initialize",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["initialized",{"_index":496,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["injectable",{"_index":259,"title":{"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"coverage.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"overview.html":{}}}],["injected",{"_index":342,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["intercept",{"_index":300,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["intercept(request",{"_index":311,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["interceptor",{"_index":296,"title":{"interceptors/BackendInterceptor.html":{}},"body":{"interceptors/BackendInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":297,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["interface",{"_index":581,"title":{"interfaces/DecodedJWT.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{}},"body":{"interfaces/DecodedJWT.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"coverage.html":{}}}],["interfaces",{"_index":582,"title":{},"body":{"interfaces/DecodedJWT.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"overview.html":{}}}],["introduction",{"_index":859,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":606,"title":{},"body":{"components/GetDataComponent.html":{}}}],["issue",{"_index":587,"title":{},"body":{"interfaces/DecodedJWT.html":{}}}],["item.article",{"_index":659,"title":{},"body":{"components/GetDataComponent.html":{}}}],["item.title",{"_index":657,"title":{},"body":{"components/GetDataComponent.html":{}}}],["item.username",{"_index":655,"title":{},"body":{"components/GetDataComponent.html":{}}}],["items",{"_index":669,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["john",{"_index":480,"title":{},"body":{"injectables/CommonService.html":{}}}],["json.parse(atob(base64",{"_index":559,"title":{},"body":{"injectables/CommonService.html":{}}}],["justify",{"_index":670,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["jwt",{"_index":449,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{}}}],["jwtpayload",{"_index":552,"title":{},"body":{"injectables/CommonService.html":{}}}],["jwtpayload.replace",{"_index":555,"title":{},"body":{"injectables/CommonService.html":{}}}],["keyframes",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["left",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["legend",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"overview.html":{}}}],["linear",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["loader",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["loaderstate",{"_index":473,"title":{},"body":{"injectables/CommonService.html":{}}}],["loaderstatus",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["loaderstatus]{@link",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["loadersubject",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["loadersubject]{@link",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["loading",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["log",{"_index":457,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["logged",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{}}}],["loggedinuser",{"_index":293,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["loggedinuser.charat(0).touppercase",{"_index":714,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loggedinuser.length",{"_index":294,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NavbarComponent.html":{}}}],["loggedinuser.slice(1",{"_index":715,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loggedinusersubject",{"_index":267,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["loggedinusersubject.subscribe((loggedinuser",{"_index":500,"title":{},"body":{"injectables/CommonService.html":{}}}],["loggedinusersubject]{@link",{"_index":281,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["logger",{"_index":423,"title":{},"body":{"injectables/CommonService.html":{}}}],["logger(`something",{"_index":463,"title":{},"body":{"injectables/CommonService.html":{}}}],["logger(message",{"_index":455,"title":{},"body":{"injectables/CommonService.html":{}}}],["logger(something",{"_index":466,"title":{},"body":{"injectables/CommonService.html":{}}}],["logging",{"_index":290,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["make",{"_index":341,"title":{},"body":{"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["making",{"_index":345,"title":{},"body":{"injectables/BackendService.html":{}}}],["margin",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["match",{"_index":442,"title":{},"body":{"injectables/CommonService.html":{}}}],["matches",{"_index":441,"title":{},"body":{"injectables/CommonService.html":{}}}],["matching",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["mean",{"_index":285,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["media",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":361,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["message]{@link",{"_index":824,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["messages",{"_index":458,"title":{},"body":{"injectables/CommonService.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["method",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["min",{"_index":678,"title":{},"body":{"components/GetDataComponent.html":{}}}],["miscellaneous",{"_index":907,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":462,"title":{},"body":{"injectables/CommonService.html":{}}}],["models/decodedjwt.model",{"_index":517,"title":{},"body":{"injectables/CommonService.html":{}}}],["models/requestdata.model",{"_index":400,"title":{},"body":{"injectables/BackendService.html":{}}}],["models/signin.model",{"_index":398,"title":{},"body":{"injectables/BackendService.html":{}}}],["models/signup.model",{"_index":399,"title":{},"body":{"injectables/BackendService.html":{}}}],["modification",{"_index":325,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["module",{"_index":196,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":198,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["nav",{"_index":722,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":696,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["navbar.component.css",{"_index":697,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":698,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":179,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":432,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["navigation",{"_index":694,"title":{},"body":{"components/NavbarComponent.html":{}}}],["need",{"_index":328,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["needed",{"_index":748,"title":{},"body":{"components/PostDataComponent.html":{}}}],["new",{"_index":389,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["next",{"_index":292,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["next.handle",{"_index":334,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["next.handle(request",{"_index":322,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["ng",{"_index":879,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":596,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["node",{"_index":867,"title":{},"body":{"index.html":{}}}],["normally",{"_index":372,"title":{},"body":{"injectables/BackendService.html":{}}}],["notification",{"_index":487,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["notification'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["notification.component.css",{"_index":729,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification.component.html",{"_index":730,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notificationcomponent",{"_index":181,"title":{"components/NotificationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsubject",{"_index":420,"title":{},"body":{"injectables/CommonService.html":{},"components/NotificationComponent.html":{}}}],["notificationsubject.subscribe((notification",{"_index":504,"title":{},"body":{"injectables/CommonService.html":{}}}],["notificationsubject]{@link",{"_index":521,"title":{},"body":{"injectables/CommonService.html":{},"components/NotificationComponent.html":{}}}],["npm",{"_index":881,"title":{},"body":{"index.html":{}}}],["number",{"_index":584,"title":{},"body":{"interfaces/DecodedJWT.html":{}}}],["object",{"_index":808,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":268,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["observables",{"_index":418,"title":{},"body":{"injectables/CommonService.html":{}}}],["observe",{"_index":383,"title":{},"body":{"injectables/BackendService.html":{}}}],["occurs",{"_index":445,"title":{},"body":{"injectables/CommonService.html":{}}}],["ondestroy",{"_index":591,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["opened",{"_index":576,"title":{},"body":{"injectables/CommonService.html":{}}}],["option",{"_index":384,"title":{},"body":{"injectables/BackendService.html":{}}}],["optional",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["out",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":901,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":846,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["page",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["pages",{"_index":434,"title":{},"body":{"injectables/CommonService.html":{}}}],["param",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["parameter",{"_index":474,"title":{},"body":{"injectables/CommonService.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["password",{"_index":764,"title":{},"body":{"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["path",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["picked",{"_index":392,"title":{},"body":{"injectables/BackendService.html":{}}}],["pipe",{"_index":539,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["pointer",{"_index":720,"title":{},"body":{"components/NavbarComponent.html":{}}}],["position",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["post",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["postdata",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postdatacomponent",{"_index":183,"title":{"components/PostDataComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["posting",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["present",{"_index":438,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["private",{"_index":519,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["production",{"_index":461,"title":{},"body":{"injectables/CommonService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":619,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["project",{"_index":860,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"properties.html":{}}}],["protect",{"_index":265,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["provide",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":758,"title":{},"body":{"interfaces/RequestData.html":{}}}],["providedin",{"_index":404,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["providers",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["received",{"_index":624,"title":{},"body":{"components/GetDataComponent.html":{},"components/SigninComponent.html":{},"components/WebSocketComponent.html":{}}}],["redirectto",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refresh",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["refreshed",{"_index":578,"title":{},"body":{"injectables/CommonService.html":{}}}],["relative",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["reload",{"_index":885,"title":{},"body":{"index.html":{}}}],["replace(/_/g",{"_index":557,"title":{},"body":{"injectables/CommonService.html":{}}}],["request",{"_index":315,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["request.clone",{"_index":335,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["request.url.includes('signin",{"_index":329,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["request.url.includes('signup",{"_index":330,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["requestdata",{"_index":364,"title":{"interfaces/RequestData.html":{}},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"coverage.html":{}}}],["requests",{"_index":333,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["required",{"_index":378,"title":{},"body":{"injectables/BackendService.html":{}}}],["reset",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"components/GetDataComponent.html":{},"overview.html":{}}}],["resetting",{"_index":529,"title":{},"body":{"injectables/CommonService.html":{}}}],["response",{"_index":358,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"interfaces/ResponseData.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["response.data",{"_index":646,"title":{},"body":{"components/GetDataComponent.html":{}}}],["response.headers.get",{"_index":786,"title":{},"body":{"components/SigninComponent.html":{}}}],["response.headers.get('authorization",{"_index":810,"title":{},"body":{"components/SignupComponent.html":{}}}],["response?.body?.message",{"_index":543,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{}}}],["response?.message",{"_index":648,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SignupComponent.html":{}}}],["responsedata",{"_index":631,"title":{"interfaces/ResponseData.html":{}},"body":{"components/GetDataComponent.html":{},"interfaces/ResponseData.html":{},"coverage.html":{}}}],["results",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retro",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["return",{"_index":274,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["returned",{"_index":374,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["returning",{"_index":279,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["returns",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["reverse",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":682,"title":{},"body":{"components/GetDataComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["root'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["rotate",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["rotate(0deg",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["rotate(1.8deg",{"_index":687,"title":{},"body":{"components/GetDataComponent.html":{}}}],["rotate(8.5deg",{"_index":679,"title":{},"body":{"components/GetDataComponent.html":{}}}],["route",{"_index":275,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["router",{"_index":430,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["routerlink",{"_index":713,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"'/get",{"_index":717,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"'/post",{"_index":718,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"\\'/get",{"_index":726,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"\\'/post",{"_index":727,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routermodule",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":272,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["routes",{"_index":247,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":878,"title":{},"body":{"index.html":{}}}],["running",{"_index":877,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":321,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["screen",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["security",{"_index":440,"title":{},"body":{"injectables/CommonService.html":{}}}],["see",{"_index":895,"title":{},"body":{"index.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["send",{"_index":323,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["sending",{"_index":745,"title":{},"body":{"components/PostDataComponent.html":{}}}],["sennd",{"_index":746,"title":{},"body":{"components/PostDataComponent.html":{}}}],["sent",{"_index":316,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["serve",{"_index":880,"title":{},"body":{"index.html":{}}}],["server",{"_index":868,"title":{},"body":{"index.html":{}}}],["serves",{"_index":866,"title":{},"body":{"index.html":{}}}],["service",{"_index":264,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["services/auth.guard",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["services/backend.interceptor",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["services/common.service",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["session",{"_index":309,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{}}}],["sessionstorage.getitem",{"_index":569,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.getitem('username",{"_index":565,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.getitem(appconstant.authorizationheaderkey",{"_index":526,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.removeitem('username",{"_index":534,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.removeitem(appconstant.authorizationheaderkey",{"_index":533,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.setitem('username",{"_index":564,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.setitem(appconstant.authorizationheaderkey",{"_index":525,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstoragetoken",{"_index":568,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorageusername",{"_index":571,"title":{},"body":{"injectables/CommonService.html":{}}}],["set",{"_index":380,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["setheaders",{"_index":336,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["settimeout",{"_index":741,"title":{},"body":{"components/NotificationComponent.html":{}}}],["setting",{"_index":382,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["settings",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["settoken(token",{"_index":509,"title":{},"body":{"injectables/CommonService.html":{}}}],["setusername(username",{"_index":513,"title":{},"body":{"injectables/CommonService.html":{}}}],["shadow",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["shared",{"_index":417,"title":{},"body":{"injectables/CommonService.html":{}}}],["show",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["shown",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NotificationComponent.html":{}}}],["sign",{"_index":326,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["signed",{"_index":437,"title":{},"body":{"injectables/CommonService.html":{}}}],["signin",{"_index":253,"title":{"interfaces/SignIn.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"interfaces/SignIn.html":{},"components/SigninComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signin'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["signin.component.css",{"_index":769,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin.component.html",{"_index":770,"title":{},"body":{"components/SigninComponent.html":{}}}],["signincomponent",{"_index":185,"title":{"components/SigninComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signing",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signout",{"_index":424,"title":{},"body":{"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["signout]{@link",{"_index":549,"title":{},"body":{"injectables/CommonService.html":{}}}],["signs",{"_index":369,"title":{},"body":{"injectables/BackendService.html":{}}}],["signup",{"_index":254,"title":{"interfaces/SignUp.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"interfaces/SignUp.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signup'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["signup.component.css",{"_index":795,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":796,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupcomponent",{"_index":187,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["single",{"_index":871,"title":{},"body":{"index.html":{}}}],["size",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["socket",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["socket.component",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["socket.component.css",{"_index":816,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.html",{"_index":817,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.ts",{"_index":814,"title":{},"body":{"components/WebSocketComponent.html":{},"coverage.html":{}}}],["socket.component.ts:11",{"_index":818,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.ts:23",{"_index":821,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.ts:30",{"_index":819,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket/web",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/WebSocketComponent.html":{},"coverage.html":{}}}],["solid",{"_index":663,"title":{},"body":{"components/GetDataComponent.html":{}}}],["something",{"_index":465,"title":{},"body":{"injectables/CommonService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"index.html":{}}}],["span",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["src/.../apipath.constant.ts",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.constant.ts",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.production.ts",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/get",{"_index":589,"title":{},"body":{"components/GetDataComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":693,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:13",{"_index":700,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:24",{"_index":708,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":709,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:36",{"_index":707,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:43",{"_index":704,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:52",{"_index":701,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:67",{"_index":706,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/notification/notification.component.ts",{"_index":728,"title":{},"body":{"components/NotificationComponent.html":{},"coverage.html":{}}}],["src/app/components/notification/notification.component.ts:14",{"_index":731,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:26",{"_index":735,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:33",{"_index":736,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:38",{"_index":733,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:55",{"_index":732,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/post",{"_index":743,"title":{},"body":{"components/PostDataComponent.html":{},"coverage.html":{}}}],["src/app/components/signin/signin.component.ts",{"_index":768,"title":{},"body":{"components/SigninComponent.html":{},"coverage.html":{}}}],["src/app/components/signin/signin.component.ts:104",{"_index":774,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signin/signin.component.ts:17",{"_index":771,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signin/signin.component.ts:35",{"_index":777,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signin/signin.component.ts:42",{"_index":775,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signin/signin.component.ts:49",{"_index":776,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signin/signin.component.ts:58",{"_index":773,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signup/signup.component.ts",{"_index":793,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/components/signup/signup.component.ts:109",{"_index":800,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:17",{"_index":797,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:35",{"_index":804,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:42",{"_index":802,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:50",{"_index":801,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:57",{"_index":803,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:66",{"_index":798,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/web",{"_index":813,"title":{},"body":{"components/WebSocketComponent.html":{},"coverage.html":{}}}],["src/app/models/decodedjwt.model.ts",{"_index":583,"title":{},"body":{"interfaces/DecodedJWT.html":{},"coverage.html":{}}}],["src/app/models/requestdata.model",{"_index":750,"title":{},"body":{"components/PostDataComponent.html":{}}}],["src/app/models/requestdata.model.ts",{"_index":757,"title":{},"body":{"interfaces/RequestData.html":{},"coverage.html":{}}}],["src/app/models/responsedata.model",{"_index":635,"title":{},"body":{"components/GetDataComponent.html":{}}}],["src/app/models/responsedata.model.ts",{"_index":759,"title":{},"body":{"interfaces/ResponseData.html":{},"coverage.html":{}}}],["src/app/models/signin.model",{"_index":778,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/models/signin.model.ts",{"_index":763,"title":{},"body":{"interfaces/SignIn.html":{},"coverage.html":{}}}],["src/app/models/signup.model",{"_index":805,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/models/signup.model.ts",{"_index":765,"title":{},"body":{"interfaces/SignUp.html":{},"coverage.html":{}}}],["src/app/services/auth.guard.ts",{"_index":261,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/services/auth.guard.ts:10",{"_index":266,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/services/auth.guard.ts:24",{"_index":273,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/services/backend.interceptor.ts",{"_index":298,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"coverage.html":{}}}],["src/app/services/backend.interceptor.ts:15",{"_index":308,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["src/app/services/backend.interceptor.ts:27",{"_index":314,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["src/app/services/backend.service",{"_index":636,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["src/app/services/backend.service.ts",{"_index":340,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{}}}],["src/app/services/backend.service.ts:16",{"_index":356,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:27",{"_index":391,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:33",{"_index":395,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:40",{"_index":367,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:55",{"_index":387,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:69",{"_index":385,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:79",{"_index":357,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:87",{"_index":365,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:94",{"_index":360,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/common.service",{"_index":637,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["src/app/services/common.service.ts",{"_index":415,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/app/services/common.service.ts:107",{"_index":508,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:114",{"_index":469,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:15",{"_index":431,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:159",{"_index":448,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:196",{"_index":514,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:205",{"_index":512,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:214",{"_index":436,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:257",{"_index":456,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:27",{"_index":494,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:31",{"_index":498,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:39",{"_index":472,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:51",{"_index":503,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:57",{"_index":506,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:65",{"_index":486,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:77",{"_index":499,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:83",{"_index":502,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:91",{"_index":477,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:99",{"_index":510,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/constants/apipath.constant",{"_index":402,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/constants/apipath.constant.ts",{"_index":838,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/app.constant",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["src/constants/app.constant.ts",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment",{"_index":397,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["src/environments/environment.development.ts",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.production.ts",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":857,"title":{"index.html":{}},"body":{}}],["state",{"_index":271,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["statements",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["storage",{"_index":310,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{}}}],["stored",{"_index":287,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["string",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["strive",{"_index":875,"title":{},"body":{"index.html":{}}}],["style=\"cursor",{"_index":719,"title":{},"body":{"components/NavbarComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["subject",{"_index":495,"title":{},"body":{"injectables/CommonService.html":{}}}],["subscribe",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["subscribes",{"_index":623,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribing",{"_index":284,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["subscription",{"_index":594,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["success",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successful",{"_index":537,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["support",{"_index":896,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":897,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["table",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["test",{"_index":872,"title":{},"body":{"index.html":{}}}],["text",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["therefore",{"_index":381,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["this.article",{"_index":754,"title":{},"body":{"components/PostDataComponent.html":{}}}],["this.backendservice",{"_index":538,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.backendurl",{"_index":406,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.checkisloggedin",{"_index":710,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.commonservice.checksavedcredentials",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["this.commonservice.decodetoken(accesstoken",{"_index":787,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.loadersubject$.subscribe((loaderstatus",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["this.commonservice.loggedinusersubject.subscribe",{"_index":291,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NavbarComponent.html":{}}}],["this.commonservice.logger(decodedtoken",{"_index":788,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.commonservice.logger(error",{"_index":295,"title":{},"body":{"injectables/AuthGuard.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.logger(response",{"_index":755,"title":{},"body":{"components/PostDataComponent.html":{}}}],["this.commonservice.logger(response.data",{"_index":644,"title":{},"body":{"components/GetDataComponent.html":{}}}],["this.commonservice.notificationsubject$.subscribe",{"_index":738,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.commonservice.signout",{"_index":652,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{}}}],["this.commonservice.token",{"_index":331,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.updateloadersubject(false",{"_index":643,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.updateloadersubject(true",{"_index":641,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.updatenotificationsubject",{"_index":647,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.username",{"_index":789,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.data",{"_index":645,"title":{},"body":{"components/GetDataComponent.html":{}}}],["this.decodetoken",{"_index":573,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.email",{"_index":809,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.httpclient.get(this.backendurl",{"_index":409,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.httpclient.post",{"_index":405,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.httpclient.post(this.backendurl",{"_index":412,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.loaderstatus",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadersubject.asobservable",{"_index":497,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.loadersubject.next(loaderstate",{"_index":520,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.loggedinuser",{"_index":712,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loggedinusersubject.asobservable",{"_index":501,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.loggedinusersubject.next(loggedinuser",{"_index":523,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.logger(error",{"_index":546,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.notification",{"_index":739,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.notificationsubject.asobservable",{"_index":505,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.notificationsubject.next(notification",{"_index":522,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.password",{"_index":784,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.router.navigate(['/get",{"_index":791,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.router.navigate(['/post",{"_index":811,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.router.navigate(['/signin",{"_index":541,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.signout",{"_index":561,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.subscription",{"_index":642,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":654,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.title",{"_index":753,"title":{},"body":{"components/PostDataComponent.html":{}}}],["this.token",{"_index":531,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updateloadersubject(false",{"_index":540,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updateloadersubject(true",{"_index":530,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updateloggedinusersubject(username",{"_index":563,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updatenotificationsubject",{"_index":542,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.username",{"_index":532,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["throughout",{"_index":419,"title":{},"body":{"injectables/CommonService.html":{}}}],["time",{"_index":586,"title":{},"body":{"interfaces/DecodedJWT.html":{},"components/NotificationComponent.html":{}}}],["title",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{}}}],["token",{"_index":305,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["token(token",{"_index":524,"title":{},"body":{"injectables/CommonService.html":{}}}],["token.split",{"_index":338,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["token.split('.')[1",{"_index":553,"title":{},"body":{"injectables/CommonService.html":{}}}],["token]{@link",{"_index":566,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["top",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["transform",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["transparent",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["true",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":443,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["trying",{"_index":278,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["tslib",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typography",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["undefined",{"_index":767,"title":{},"body":{"interfaces/SignUp.html":{},"components/SignupComponent.html":{}}}],["unsubscribe",{"_index":630,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["up",{"_index":327,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/NavbarComponent.html":{},"interfaces/SignUp.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["updated",{"_index":734,"title":{},"body":{"components/NotificationComponent.html":{}}}],["updateloadersubject",{"_index":425,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloadersubject(loaderstate",{"_index":471,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloadersubject(true",{"_index":475,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject",{"_index":426,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject(`john",{"_index":478,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject(john",{"_index":482,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject(loggedinuser",{"_index":476,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject",{"_index":427,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject(`hello",{"_index":488,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject(hello",{"_index":489,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject(notification",{"_index":485,"title":{},"body":{"injectables/CommonService.html":{}}}],["updating",{"_index":288,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["url",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{}}}],["use",{"_index":703,"title":{},"body":{"components/NavbarComponent.html":{}}}],["useclass",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["user",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["user's",{"_index":481,"title":{},"body":{"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["username",{"_index":286,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["username(username",{"_index":562,"title":{},"body":{"injectables/CommonService.html":{}}}],["username]{@link",{"_index":567,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["users",{"_index":371,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["uses",{"_index":368,"title":{},"body":{"injectables/BackendService.html":{}}}],["utc",{"_index":613,"title":{},"body":{"components/GetDataComponent.html":{}}}],["v0.0.1",{"_index":858,"title":{},"body":{"index.html":{}}}],["value",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":377,"title":{},"body":{"injectables/BackendService.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["variable",{"_index":625,"title":{},"body":{"components/GetDataComponent.html":{},"coverage.html":{}}}],["variables",{"_index":908,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variation",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["version",{"_index":864,"title":{},"body":{"index.html":{},"properties.html":{}}}],["very",{"_index":869,"title":{},"body":{"index.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["wdth",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["web",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"index.html":{}}}],["webkit",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["websocket",{"_index":362,"title":{},"body":{"injectables/BackendService.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["websocketcomponent",{"_index":189,"title":{"components/WebSocketComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["websocketurl",{"_index":347,"title":{},"body":{"injectables/BackendService.html":{},"miscellaneous/variables.html":{}}}],["wght",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["white",{"_index":675,"title":{},"body":{"components/GetDataComponent.html":{}}}],["whole",{"_index":344,"title":{},"body":{"injectables/BackendService.html":{}}}],["width",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["without",{"_index":324,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["world",{"_index":414,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["world!&#39",{"_index":491,"title":{},"body":{"injectables/CommonService.html":{}}}],["ws://:3000",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws://localhost:8080",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["xoxoxoxoxo",{"_index":674,"title":{},"body":{"components/GetDataComponent.html":{}}}],["z",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["zone.js",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is the root component of the application.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaderStatus\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            This is the constructor of the root component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to update the loader status.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:36\n                \n            \n\n\n            \n                \n                    This method is used to initialize the root component. It will check if the user is already logged in or not, to handle the page refresh and direct URL access. It will also subscribe to the loaderSubject to update the loaderStatus.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loaderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    This is used to show the loader on the screen. It will be shown when the value is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : appConstant.appName\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n            \n                \n                    This is the title of the application. It will be shown on the browser tab.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonService } from './services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This is the root component of the application.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  /**\n   * This is the constructor of the root component.\n   * @param { CommonService } commonService is used to update the loader status.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This is used to show the loader on the screen. It will be shown when the value is true.\n   * @default false\n   * @type { boolean }\n   */\n  loaderStatus: boolean = false;\n\n  /**\n   * This is the title of the application. It will be shown on the browser tab.\n   * @type { string }\n   */\n  title: string = appConstant.appName;\n\n  /**\n   * This method is used to initialize the root component. It will check if the user is already logged in or not, to handle the page refresh and direct URL access. It will also subscribe to the [loaderSubject]{@link CommonService#loaderSubject} to update the [loaderStatus]{@link loaderStatus}.\n   */\n  ngOnInit(): void {\n    this.commonService.checkSavedCredentials();\n    this.commonService.loaderSubject$.subscribe((loaderStatus: boolean) => {\n      this.loaderStatus = loaderStatus;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Base Frontend\n    \n    \n    \n    \n    \n    \n    Loading...\n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .retro {\n  margin: 20px 20px;\n}\n\n@keyframes hue {\n  from {\n    -webkit-filter: hue-rotate(0deg);\n    text-shadow: -20px -20px hue-rotate(0deg);\n  }\n  to {\n    -webkit-filter: hue-rotate(-360deg);\n    text-shadow: -5px -5px hue-rotate(-360deg);\n  }\n}\n\n.typography {\n  text-align: center;\n  font-size: 100px !important;\n  font-variation-settings: \"wght\" 450, \"wdth\" 180 !important;\n  margin: 20px 0px;\n\n  background-image: -webkit-linear-gradient(90deg, #f35626, #feab3a);\n  text-shadow: -5px -5px #feab3a;\n\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  -webkit-animation: hue 2s infinite cubic-bezier(0.165, 0.84, 0.44, 1)\n    alternate-reverse !important;\n}\n\nspan {\n  text-emphasis: \"x\";\n  background-image: -webkit-linear-gradient(90deg, #f35626, #feab3a);\n  text-shadow: -5px -5px #feab3a;\n}\n\n@media (max-width: 768px) {\n  .typography {\n    font-size: 80px !important;\n  }\n}\n\n@media (max-width: 500px) {\n  .typography {\n    font-size: 50px !important;\n  }\n}\n\n.highlight {\n  position: relative;\n}\n.highlight:before {\n  content: \"\";\n  background-color: black;\n  width: 100%;\n  transform: rotate(-2.5deg);\n  height: 0.9em;\n  position: absolute;\n  z-index: -111;\n  left: -0.45em;\n  top: 0.1em;\n  padding: 0 0.2em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Base Frontend                            Loading...            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGetDataComponent\n\nGetDataComponent\n\nAppModule -->\n\nGetDataComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nAppModule -->\n\nNotificationComponent->AppModule\n\n\n\n\n\nPostDataComponent\n\nPostDataComponent\n\nAppModule -->\n\nPostDataComponent->AppModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAppModule -->\n\nSigninComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nWebSocketComponent\n\nWebSocketComponent\n\nAppModule -->\n\nWebSocketComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nBackendInterceptor\n\nBackendInterceptor\n\nAppModule -->\n\nBackendInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GetDataComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotificationComponent\n                        \n                        \n                            PostDataComponent\n                        \n                        \n                            SigninComponent\n                        \n                        \n                            SignupComponent\n                        \n                        \n                            WebSocketComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthGuard\n                        \n                        \n                            BackendInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { GetDataComponent } from './components/get-data/get-data.component';\nimport { PostDataComponent } from './components/post-data/post-data.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NotificationComponent } from './components/notification/notification.component';\nimport { BackendInterceptor } from './services/backend.interceptor';\nimport { AuthGuard } from './services/auth.guard';\nimport { WebSocketComponent } from './components/web-socket/web-socket.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SigninComponent,\n    SignupComponent,\n    GetDataComponent,\n    PostDataComponent,\n    NavbarComponent,\n    NotificationComponent,\n    WebSocketComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BackendInterceptor,\n      multi: true,\n    },\n    AuthGuard,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { PostDataComponent } from './components/post-data/post-data.component';\nimport { GetDataComponent } from './components/get-data/get-data.component';\nimport { AuthGuard } from './services/auth.guard';\n\n/**\n * This is the routes constant. It contains all the routes of the application.\n */\nconst routes: Routes = [\n  {\n    path: 'signin',\n    component: SigninComponent,\n  },\n  {\n    path: 'signup',\n    component: SignupComponent,\n  },\n  {\n    path: 'post-data',\n    component: PostDataComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'get-data', component: GetDataComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the auth guard service class. It is used to check if the user is logged in or not logged in.\nThis auth guard is used to protect the get data screen and post data screen.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            This is the constructor of the auth guard class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to get the loggedInUserSubject observable. It is used to check if the user is logged in or not logged in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.guard.ts:24\n                \n            \n\n\n            \n                \n                    This method is used to check if the user is logged in or not logged in. It will return true if the user is logged in, else, it will return false.\nThis auth guard is used to protect the get data and post data routes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the route to be activated i.e. the route user is trying to access.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the state of the route to be activated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value. If the user is logged in, returning true, else, returning false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { CommonService } from './common.service';\n\n/**\n * This is the auth guard service class. It is used to check if the user is logged in or not logged in.\n * This auth guard is used to protect the get data screen and post data screen.\n */\n@Injectable()\nexport class AuthGuard {\n  /**\n   * This is the constructor of the auth guard class.\n   * @param commonService is used to get the [loggedInUserSubject]{@link CommonService#loggedInUserSubject} observable. It is used to check if the user is logged in or not logged in.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This method is used to check if the user is logged in or not logged in. It will return true if the user is logged in, else, it will return false.\n   * This auth guard is used to protect the get data and post data routes.\n   * @param route is the route to be activated i.e. the route user is trying to access.\n   * @param state is the state of the route to be activated\n   * @returns a boolean value. If the user is logged in, returning true, else, returning false.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    /**\n     * By default, assuming that the user is not logged in.\n     */\n    let value: boolean = false;\n    /**\n     * Subscribing to the [loggedInUserSubject]{@link CommonService#loggedInUserSubject} observable.\n     * If the user is logged in it would mean that user has a username stored in loggedInUserSubject.\n     * If the user is logged in, updating the value to true. For any error, logging the error.\n     */\n    this.commonService.loggedInUserSubject.subscribe({\n      next: (loggedInUser: string) => {\n        if (loggedInUser.length > 0) {\n          value = true;\n        }\n      },\n      error: (error: any) => {\n        this.commonService.logger(error);\n      },\n    });\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/BackendInterceptor.html":{"url":"interceptors/BackendInterceptor.html","title":"interceptor - BackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  BackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the backend interceptor. It is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            This is the constructor of the backend interceptor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to get the token from the session storage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.interceptor.ts:27\n                \n            \n\n\n            \n                \n                    This method is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the request to be sent to the backend.\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the next handler in the chain.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CommonService } from './common.service';\n\n/**\n * This is the backend interceptor. It is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n */\n@Injectable()\nexport class BackendInterceptor implements HttpInterceptor {\n  /**\n   * This is the constructor of the backend interceptor.\n   * @param commonService is used to get the token from the session storage.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This method is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n   * @param request is the request to be sent to the backend.\n   * @param next is the next handler in the chain.\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    /**  return next.handle(request); */ // This will send the request to the backend without any modification.\n\n    /**\n     * If the request is for sign in or sign up API, then there is no need to add the authorization token to the headers.\n     */\n    if (request.url.includes('signin') || request.url.includes('signup')) {\n      return next.handle(request);\n    }\n    const token: string = this.commonService.token;\n\n    /**\n     * Attaching the authorization token to the headers of the every other backend requests.\n     */\n    return next.handle(\n      request.clone({\n        setHeaders: { Authorization: `Bearer ${token.split(' ')[1]}` },\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendService.html":{"url":"injectables/BackendService.html","title":"injectable - BackendService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the service class for the backend. It is used to make the API calls to the backend. It is injected in the app.module.ts file as it is used in the whole application for making the API calls.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backendUrl\n                            \n                            \n                                websocketUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleGetData\n                            \n                            \n                                handleGetWebSocketData\n                            \n                            \n                                handlePostData\n                            \n                            \n                                handleSignIn\n                            \n                            \n                                handleSignOut\n                            \n                            \n                                handleSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend.service.ts:16\n                            \n                        \n\n                \n                    \n                            This is the constructor of the service class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API calls.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleGetData\n                        \n                    \n                \n            \n            \n                \nhandleGetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:79\n                \n            \n\n\n            \n                \n                    This method is used to get all the data from the backend.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleGetWebSocketData\n                        \n                    \n                \n            \n            \n                \nhandleGetWebSocketData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:94\n                \n            \n\n\n            \n                \n                    This method is used to get message from websocket.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handlePostData\n                        \n                    \n                \n            \n            \n                \nhandlePostData(data: RequestData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RequestData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the data to be sent to the backend.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignIn\n                        \n                    \n                \n            \n            \n                \nhandleSignIn(data: SignIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:40\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign in API call to the backend. It uses POST method to send the data to the backend. It signs in existing users.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SignIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the data to be sent to the backend.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignOut\n                        \n                    \n                \n            \n            \n                \nhandleSignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:69\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign out API call to the backend. It uses get method to send the data to the backend. It signs out the logged in user.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignUp\n                        \n                    \n                \n            \n            \n                \nhandleSignUp(data: SignUp)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:55\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign up API call to the backend. It uses post method to send the data to the backend. It creates a new user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SignUp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backendUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.backendUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/backend.service.ts:27\n                        \n                    \n\n            \n                \n                    This is the URL for the backend. This will be picked from the current environment.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        websocketUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.backendUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/backend.service.ts:33\n                        \n                    \n\n            \n                \n                    This is the URL for the websocket. This will be picked from the current environment.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { SignIn } from '../models/SignIn.model';\nimport { SignUp } from '../models/SignUp.model';\nimport { RequestData } from '../models/RequestData.model';\n\nimport { apiPathConstant } from 'src/constants/apiPath.constant';\n\n/**\n * This is the service class for the backend. It is used to make the API calls to the backend. It is injected in the [app.module.ts]{@link AppModule} file as it is used in the whole application for making the API calls.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BackendService {\n  /**\n   * This is the constructor of the service class.\n   * @param {HttpClient} httpClient is used to make the API calls.\n   */\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * This is the URL for the backend. This will be picked from the current environment.\n   * @type {string}\n   */\n  backendUrl: string = environment.backendUrl;\n\n  /**\n   * This is the URL for the websocket. This will be picked from the current environment.\n   * @type {string}\n   */\n  websocketUrl: string = environment.backendUrl;\n\n  /**\n   * This method is used to handle the sign in API call to the backend. It uses POST method to send the data to the backend. It signs in existing users.\n   * @param {SignIn} data is the data to be sent to the backend.\n   * @returns the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n   */\n  handleSignIn(data: SignIn) {\n    return this.httpClient.post(\n      this.backendUrl + apiPathConstant.signIn,\n      data,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  /**\n   * This method is used to handle the sign up API call to the backend. It uses post method to send the data to the backend. It creates a new user.\n   * @param {SignUp} data\n   * @returns the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n   */\n  handleSignUp(data: SignUp) {\n    return this.httpClient.post(\n      this.backendUrl + apiPathConstant.signUp,\n      data,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  /**\n   * This method is used to handle the sign out API call to the backend. It uses get method to send the data to the backend. It signs out the logged in user.\n   * @returns the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n   */\n  handleSignOut() {\n    return this.httpClient.get(this.backendUrl + apiPathConstant.signOut, {\n      observe: 'response',\n    });\n  }\n\n  /**\n   * This method is used to get all the data from the backend.\n   * @returns the response from the backend in the form of an observable.\n   */\n  handleGetData() {\n    return this.httpClient.get(this.backendUrl + apiPathConstant.data);\n  }\n\n  /**\n   * @param {RequestData} data is the data to be sent to the backend.\n   * @returns the response from the backend in the form of an observable.\n   */\n  handlePostData(data: RequestData) {\n    return this.httpClient.post(this.backendUrl + apiPathConstant.data, data);\n  }\n\n  /**\n   * This method is used to get message from websocket.\n   */\n  handleGetWebSocketData() {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/common.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the common service. It has the methods and shared observables that are used throughout the application. Therefore, it is injected in the app.module.ts file.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaderSubject\n                            \n                            \n                                loaderSubject$\n                            \n                            \n                                loggedInUserSubject\n                            \n                            \n                                loggedInUserSubject$\n                            \n                            \n                                notificationSubject\n                            \n                            \n                                notificationSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkSavedCredentials\n                            \n                            \n                                decodeToken\n                            \n                            \n                                logger\n                            \n                            \n                                signOut\n                            \n                            \n                                updateLoaderSubject\n                            \n                            \n                                updateLoggedInUserSubject\n                            \n                            \n                                updateNotificationSubject\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                                \n                                    username\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, backendService: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/common.service.ts:15\n                            \n                        \n\n                \n                    \n                            This is the constructor of the CommonService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to navigate the user to different pages.\n\n                                                        \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to call the backend APIs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkSavedCredentials\n                        \n                    \n                \n            \n            \n                \ncheckSavedCredentials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:214\n                \n            \n\n\n            \n                \n                    This method is used to check if the user has already signed in. It will check if the token and username are present in the session storage. If they are present, it will set the token and username.\nFor additional security, it will also check if the username in the token matches the username in the session storage. If they do not match, it will call the signOut method.\nIt will try to decode the token. If an error occurs while decoding the token, it will call the signOut method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeToken\n                        \n                    \n                \n            \n            \n                \ndecodeToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:159\n                \n            \n\n\n            \n                \n                    This method is used to decode the JWT. It will return the decoded JWT. If the token is empty, it will return default response. If while decoding the JWT, an error occurs, it will call the signOut method and return default response.\ndecodeToken(jwt);\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the JWT to be decoded.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            decodeToken(jwt);\n                        \n                    \n                    \n                        Returns :         DecodedJWT\n\n                    \n                    \n                        the decoded JWT.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:257\n                \n            \n\n\n            \n                \n                    This method is used to log messages to the console. It will not log anything in production mode. It will also not log anything if the message is empty.\nlogger(`Something happened.`); // This will log 'Something happened.' to the console.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the message to be logged.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            logger(Something happened.); // This will log &#39;Something happened.&#39; to the console.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:114\n                \n            \n\n\n            \n                \n                    This method is used to sign out the signed in user. It will call the handleSignOut method. It will also clear the token and username from the session storage. After that, it will navigate the user to the sign in page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLoaderSubject\n                        \n                    \n                \n            \n            \n                \nupdateLoaderSubject(loaderState: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:39\n                \n            \n\n\n            \n                \n                    This method is used to update the loaderSubject. It will update the loaderSubject with the value of the loaderState parameter.\nupdateLoaderSubject(true); // This will update the loaderSubject with true.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loaderState\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the state of the loader.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            updateLoaderSubject(true); // This will update the loaderSubject with true.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLoggedInUserSubject\n                        \n                    \n                \n            \n            \n                \nupdateLoggedInUserSubject(loggedInUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:91\n                \n            \n\n\n            \n                \n                    This method is used to update the loggedInUserSubject. It will update the loggedInUserSubject with the value of the loggedInUser parameter.\nupdateLoggedInUserSubject(`John Doe`); // This will update the loggedInUserSubject with 'John Doe'.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the logged in user's name which is to be shown on the screen.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            updateLoggedInUserSubject(John Doe); // This will update the loggedInUserSubject with &#39;John Doe&#39;.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNotificationSubject\n                        \n                    \n                \n            \n            \n                \nupdateNotificationSubject(notification: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:65\n                \n            \n\n\n            \n                \n                    This method is used to update the notificationSubject. It will update the notificationSubject with the value of the notification parameter.\nupdateNotificationSubject(`Hello world!`); // This will update the notificationSubject with 'Hello world!'.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    notification\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the notification to be shown on the screen.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            updateNotificationSubject(Hello world!); // This will update the notificationSubject with &#39;Hello world!&#39;.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loaderSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:27\n                        \n                    \n\n            \n                \n                    This is the loader subject. It is used to show the loader on the screen. It is initialized with false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loaderSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:31\n                        \n                    \n\n            \n                \n                    This is the loader subject observable. This is used to subscribe to the loaderSubject.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    ''\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:77\n                        \n                    \n\n            \n                \n                    This is the logged in user subject. It is used to show the logged in user's name on the screen. It is initialized with an empty string.\nloggedInUserSubject.subscribe((loggedInUser: string) => {\n// Do something with the logged in user name.\n});\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUserSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loggedInUserSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:83\n                        \n                    \n\n            \n                \n                    This is the logged in user subject observable. This is used to subscribe to the loggedInUserSubject.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificationSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    ''\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:51\n                        \n                    \n\n            \n                \n                    This is the notification subject. It is used to show the notification on the screen. It is initialized with an empty string.\nnotificationSubject.subscribe((notification: string) => {\n // Do something with the notification.\n});\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificationSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.notificationSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:57\n                        \n                    \n\n            \n                \n                    This is the notification subject observable. This is used to subscribe to the notificationSubject.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:107\n                                \n                            \n                    \n                        \n                                This is used to get the token from the session storage. If the token is not present in the session storage, it will return an empty string.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        settoken(token: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:99\n                                \n                            \n                    \n                        \n                                This is used to set the token in the session storage.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    is the token to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:205\n                                \n                            \n                    \n                        \n                                This is used to get the username from the session storage. If the username is not present in the session storage, it will return an empty string.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setusername(username: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:196\n                                \n                            \n                    \n                        \n                                This is used to set the username in the session storage. It will also update the loggedInUserSubject.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            username\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    is the username to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, finalize } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BackendService } from './backend.service';\nimport { environment } from 'src/environments/environment';\nimport { appConstant } from 'src/constants/app.constant';\nimport { DecodedJWT } from '../models/DecodedJWT.model';\n\n/**\n * This is the common service. It has the methods and shared observables that are used throughout the application. Therefore, it is injected in the [app.module.ts]{@link AppModule} file.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommonService {\n  /**\n   * This is the constructor of the [CommonService]{@link CommonService} class.\n   * @param {Router} router is used to navigate the user to different pages.\n   * @param {BackendService} backendService is used to call the backend APIs.\n   */\n  constructor(private router: Router, private backendService: BackendService) {}\n\n  /**\n   * This is the loader subject. It is used to show the loader on the screen. It is initialized with `false`.\n   * @type {BehaviorSubject}\n   */\n  loaderSubject: BehaviorSubject = new BehaviorSubject(false);\n  /**\n   * This is the loader subject observable. This is used to subscribe to the [loaderSubject]{@link loaderSubject}.\n   */\n  loaderSubject$ = this.loaderSubject.asObservable();\n\n  /**\n   * This method is used to update the [loaderSubject]{@link loaderSubject}. It will update the [loaderSubject]{@link loaderSubject} with the value of the `loaderState` parameter.\n   * @param {boolean} loaderState is the state of the loader.\n   * @example\n   * updateLoaderSubject(true); // This will update the loaderSubject with true.\n   */\n  updateLoaderSubject(loaderState: boolean) {\n    this.loaderSubject.next(loaderState);\n  }\n\n  /**\n   * This is the notification subject. It is used to show the notification on the screen. It is initialized with an empty string.\n   * @type {BehaviorSubject}\n   * @example\n   * notificationSubject.subscribe((notification: string) => {\n   *  // Do something with the notification.\n   * });\n   */\n  notificationSubject: BehaviorSubject = new BehaviorSubject(\n    ''\n  );\n  /**\n   * This is the notification subject observable. This is used to subscribe to the [notificationSubject]{@link notificationSubject}.\n   */\n  notificationSubject$ = this.notificationSubject.asObservable();\n\n  /**\n   * This method is used to update the [notificationSubject]{@link notificationSubject}. It will update the [notificationSubject]{@link notificationSubject} with the value of the `notification` parameter.\n   * @param {string} notification is the notification to be shown on the screen.\n   * @example\n   * updateNotificationSubject(`Hello world!`); // This will update the notificationSubject with 'Hello world!'.\n   */\n  updateNotificationSubject(notification: string) {\n    this.notificationSubject.next(notification);\n  }\n\n  /**\n   * This is the logged in user subject. It is used to show the logged in user's name on the screen. It is initialized with an empty string.\n   * @type {BehaviorSubject}\n   * @example\n   * loggedInUserSubject.subscribe((loggedInUser: string) => {\n   * // Do something with the logged in user name.\n   * });\n   */\n  loggedInUserSubject: BehaviorSubject = new BehaviorSubject(\n    ''\n  );\n  /**\n   * This is the logged in user subject observable. This is used to subscribe to the [loggedInUserSubject]{@link loggedInUserSubject}.\n   */\n  loggedInUserSubject$ = this.loggedInUserSubject.asObservable();\n\n  /**\n   * This method is used to update the [loggedInUserSubject]{@link loggedInUserSubject}. It will update the [loggedInUserSubject]{@link loggedInUserSubject} with the value of the `loggedInUser` parameter.\n   * @param {string} loggedInUser is the logged in user's name which is to be shown on the screen.\n   * @example\n   * updateLoggedInUserSubject(`John Doe`); // This will update the loggedInUserSubject with 'John Doe'.\n   */\n  updateLoggedInUserSubject(loggedInUser: string) {\n    this.loggedInUserSubject.next(loggedInUser);\n  }\n\n  /**\n   * This is used to set the token in the session storage.\n   * @param {string} token is the token to be set.\n   */\n  set token(token: string) {\n    sessionStorage.setItem(appConstant.authorizationHeaderKey, token);\n  }\n\n  /**\n   * This is used to get the token from the session storage. If the token is not present in the session storage, it will return an empty string.\n   * @type {string}\n   */\n  get token(): string {\n    return sessionStorage.getItem(appConstant.authorizationHeaderKey) ?? '';\n  }\n\n  /**\n   * This method is used to sign out the signed in user. It will call the [handleSignOut]{@link BackendService#handleSignOut} method. It will also clear the token and username from the session storage. After that, it will navigate the user to the sign in page.\n   */\n  signOut() {\n    /**\n     * Resetting the token and username.\n     */\n    this.updateLoaderSubject(true);\n    this.token = '';\n    this.username = '';\n    sessionStorage.removeItem(appConstant.authorizationHeaderKey);\n    sessionStorage.removeItem('username');\n\n    /**\n     * Calling the [handleSignOut]{@link handleSignOut} method of the [backendService]{@link BackendService}. If the sign out is successful, it will update the [notificationSubject]{@link notificationSubject} with the message from the response. If an error occurs, it will update the [notificationSubject]{@link notificationSubject} with the error message.\n     */\n    this.backendService\n      .handleSignOut()\n      .pipe(\n        finalize(() => {\n          this.updateLoaderSubject(false);\n          this.router.navigate(['/signin']);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.updateNotificationSubject(\n            response?.body?.message ||\n              `${appConstant.success} ${appConstant.signOut}.`\n          );\n        },\n        error: (error: any) => {\n          this.logger(error);\n          this.updateNotificationSubject(\n            error.error?.message ||\n              `${appConstant.error} ${appConstant.signOut}.`\n          );\n        },\n      });\n  }\n\n  /**\n   * This method is used to decode the JWT. It will return the decoded JWT. If the token is empty, it will return default response. If while decoding the JWT, an error occurs, it will call the [signOut]{@link signOut} method and return default response.\n   * @param token is the JWT to be decoded.\n   * @example\n   * decodeToken(jwt);\n   * @returns { DecodedJWT } the decoded JWT.\n   */\n  decodeToken(token: string): DecodedJWT {\n    /**\n     * This is the default response. It will be returned if the token is empty or if an error occurs while decoding the JWT.\n     * @type { DecodedJWT }\n     */\n    let response: DecodedJWT = {\n      exp: 0,\n      iat: 0,\n      username: '',\n    };\n\n    /**\n     * If the token is empty, returning the default response.\n     */\n    if (!token) {\n      return response;\n    }\n    /**\n     * Trying to decode the JWT. If an error occurs, calling the [signOut]{@link signOut} method and returning the default response.\n     */\n    try {\n      const jwtPayload: string = token.split('.')[1];\n      const base64: string = jwtPayload.replace(/-/g, '+').replace(/_/g, '/');\n      const decodedPayload: any = JSON.parse(atob(base64));\n      response = decodedPayload;\n      return response;\n    } catch (error) {\n      this.signOut();\n      this.logger(error);\n      return response;\n    }\n  }\n\n  /**\n   * This is used to set the username in the session storage. It will also update the [loggedInUserSubject]{@link loggedInUserSubject}.\n   * @param {string} username is the username to be set.\n   */\n  set username(username: string) {\n    this.updateLoggedInUserSubject(username);\n    sessionStorage.setItem('username', username);\n  }\n\n  /**\n   * This is used to get the username from the session storage. If the username is not present in the session storage, it will return an empty string.\n   * @type {string}\n   */\n  get username(): string {\n    return sessionStorage.getItem('username') ?? '';\n  }\n\n  /**\n   * This method is used to check if the user has already signed in. It will check if the token and username are present in the session storage. If they are present, it will set the [token]{@link token} and [username]{@link username}.\n   * For additional security, it will also check if the username in the token matches the username in the session storage. If they do not match, it will call the [signOut]{@link signOut} method.\n   * It will try to decode the token. If an error occurs while decoding the token, it will call the [signOut]{@link signOut} method.\n   */\n  checkSavedCredentials() {\n    try {\n      const sessionStorageToken = sessionStorage.getItem(\n        appConstant.authorizationHeaderKey\n      );\n      const sessionStorageUsername = sessionStorage.getItem('username');\n\n      const decodedToken: DecodedJWT = this.decodeToken(\n        sessionStorageToken ?? ''\n      );\n\n      /**\n       * If the decoded token has username as empty, calling the [signOut]{@link signOut} method.\n       * If the username in the token does not match the username in the session storage, calling the [signOut]{@link signOut} method.\n       */\n      if (\n        !decodedToken.username ||\n        (decodedToken.username &&\n          decodedToken.username !== sessionStorageUsername)\n      ) {\n        this.signOut();\n        return;\n      }\n\n      /**\n       * If the token and username are present in the session storage, setting the [token]{@link token} and [username]{@link username}. This would handle the case when the user has already signed in and has not signed out i.e the user has closed the browser tab and opened the application again or the user has refreshed the page.\n       */\n      if (sessionStorageToken && sessionStorageUsername) {\n        this.token = sessionStorageToken;\n        this.username = sessionStorageUsername;\n      }\n    } catch (error) {\n      this.signOut();\n      this.logger(error);\n    }\n  }\n\n  /**\n   * This method is used to log messages to the console. It will not log anything in production mode. It will also not log anything if the message is empty.\n   * @param {any} message is the message to be logged.\n   * @example\n   * logger(`Something happened.`); // This will log 'Something happened.' to the console.\n   */\n  logger(message: any) {\n    if (environment.production || !message) {\n      return;\n    }\n    console.log(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecodedJWT.html":{"url":"interfaces/DecodedJWT.html","title":"interface - DecodedJWT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecodedJWT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/DecodedJWT.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the decoded JWT.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the expiration time of the JWT.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the issue time of the JWT.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username extracted from the JWT.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DecodedJWT {\n  /**\n   * This is the expiration time of the JWT.\n   */\n  exp: number;\n  /**\n   * This is the issue time of the JWT.\n   */\n  iat: number;\n  /**\n   * This is the username extracted from the JWT.\n   */\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GetDataComponent.html":{"url":"components/GetDataComponent.html","title":"component - GetDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GetDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/get-data/get-data.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show all the data from the backend.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-get-data\n            \n\n\n\n            \n                styleUrls\n                ./get-data.component.css\n            \n\n\n\n            \n                templateUrl\n                ./get-data.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                handleGetData\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/get-data/get-data.component.ts:16\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatDate\n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/get-data/get-data.component.ts:87\n                \n            \n\n\n            \n                \n                    This method is used to format the date in the format DD/MM/YYYY, HH:MM:SS AM/PM. It will return an empty string if the date is not present or if the date is invalid.\nformatDate('2023-08-01T21:08:40.472Z'); // This will return '8/2/2023, 2:38:40 AM'.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the date to be formatted in UTC format.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            formatDate(&#39;2023-08-01T21:08:40.472Z&#39;); // This will return &#39;8/2/2023, 2:38:40 AM&#39;.\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the date in the format DD/MM/YYYY, HH:MM:SS AM/PM.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleGetData\n                        \n                    \n                \n            \n            \n                \nhandleGetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/get-data/get-data.component.ts:47\n                \n            \n\n\n            \n                \n                    This method is used to get all the data from the backend. It will call the handleGetData method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handleGetData to get the data from the backend. It will update the data with the data received from the backend. For error, it will reset data variable, show the error message on the screen and log the error in the console.\nIf the user is not logged in or the token is expired, then it will sign out the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/get-data/get-data.component.ts:101\n                \n            \n\n\n            \n                \n                    This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/get-data/get-data.component.ts:32\n                        \n                    \n\n            \n                \n                    This is the data to be shown on the screen. It is initialized with an empty array.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/get-data/get-data.component.ts:39\n                        \n                    \n\n            \n                \n                    This is the subscription that would be used in this component. It is initialized with an empty subscription.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { finalize, Subscription } from 'rxjs';\nimport { ResponseData } from 'src/app/models/ResponseData.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This component is used to show all the data from the backend.\n */\n@Component({\n  selector: 'app-get-data',\n  templateUrl: './get-data.component.html',\n  styleUrls: ['./get-data.component.css'],\n})\nexport class GetDataComponent implements OnDestroy {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService\n  ) {}\n\n  /**\n   * This is the data to be shown on the screen. It is initialized with an empty array.\n   * @type {[]ResponseData}\n   * @default []\n   */\n  data: ResponseData[] = [];\n\n  /**\n   * This is the subscription that would be used in this component. It is initialized with an empty subscription.\n   * @type {Subscription}\n   * @private\n   */\n  private subscription!: Subscription;\n\n  /**\n   * This method is used to get all the data from the backend. It will call the [handleGetData]{@link BackendService#handleGetData} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handleGetData]{@link BackendService#handleGetData} to get the data from the backend. It will update the [data]{@link data} with the data received from the backend. For error, it will reset data variable, show the error message on the screen and log the error in the console.\n   * If the user is not logged in or the token is expired, then it will sign out the user.\n   */\n  handleGetData(): void {\n    this.commonService.updateLoaderSubject(true);\n    this.subscription = this.backendService\n      .handleGetData()\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.commonService.logger(response.data);\n          this.data = response.data;\n          this.commonService.updateNotificationSubject(\n            response?.message ||\n              `${appConstant.success} ${appConstant.getData}.`\n          );\n        },\n        error: (error: any) => {\n          this.data = [];\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message ||\n              `${appConstant.error} ${appConstant.getData}.`\n          );\n\n          if (error?.status === 401) {\n            this.commonService.signOut();\n          }\n        },\n      });\n  }\n\n  /**\n   * This method is used to format the date in the format DD/MM/YYYY, HH:MM:SS AM/PM. It will return an empty string if the date is not present or if the date is invalid.\n   * @param {Date} date is the date to be formatted in UTC format.\n   * @example\n   * formatDate('2023-08-01T21:08:40.472Z'); // This will return '8/2/2023, 2:38:40 AM'.\n   * @returns the date in the format DD/MM/YYYY, HH:MM:SS AM/PM.\n   */\n  formatDate(date: Date): string {\n    try {\n      if (!date) {\n        return '';\n      }\n      return new Date(date).toLocaleString();\n    } catch {\n      return '';\n    }\n  }\n\n  /**\n   * This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n   */\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  Get data\n  \n    \n      username {{ item.username }}\n      date {{ formatDate(item.createdAt) }}\n      title {{ item.title }}\n      article {{ item.article }}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./get-data.component.css\n                \n                .box {\n  border: 1px solid #000;\n  padding: 20px;\n}\n\n.data {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\nspan {\n  font-variation-settings: \"wght\" 350, \"wdth\" 120;\n}\n\n.highlight {\n  position: relative;\n}\n.highlight:after {\n  position: absolute;\n  content: \"xoxoxoxoxo\";\n  color: white;\n  text-align: center;\n  background-image: -webkit-linear-gradient(90deg, #3d3d3d, #9f9f9f);\n  width: min-content;\n  transform: rotate(8.5deg);\n  height: 1.9em;\n  z-index: -111;\n  top: 0.04em;\n  right: 0.45em;\n  padding: 0 0.2em;\n  text-emphasis: \"x\";\n  filter: blur(0.5px);\n}\n\n.highlight:nth-child(2n + 1):after {\n  transform: rotate(1.8deg);\n  left: -7.15em;\n  left: auto;\n}\n\n.highlight:nth-child(2n):after {\n  transform: rotate(-8.5deg);\n  left: -1.45em;\n  right: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Get data            username {{ item.username }}      date {{ formatDate(item.createdAt) }}      title {{ item.title }}      article {{ item.article }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GetDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the navigation bar on the screen.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggedInUser\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIsLoggedIn\n                            \n                            \n                                handleSignOut\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:13\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to update the loggedInUserSubject.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIsLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIsLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:52\n                \n            \n\n\n            \n                \n                    This method is used to check if the user is logged in or not. And, if user is not logged in, then it will not show the 'Sign out' button, 'Get data' and 'Post data' button on the screen. It would only show the 'Sign in' and 'Sign up' button.\nIt will subscribe to the loggedInUserSubject to get the logged in user's name. It will update the username or log error in the console.\nThis is also use to show the logged in user's name on the screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignOut\n                        \n                    \n                \n            \n            \n                \nhandleSignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:43\n                \n            \n\n\n            \n                \n                    This method is used to sign out the logged in user when user clicks on the 'Sign out' button. It will call the handleSignOut method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:67\n                \n            \n\n\n            \n                \n                    This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:36\n                \n            \n\n\n            \n                \n                    This method is used to initialize the component. It will check if the user is logged in or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:24\n                        \n                    \n\n            \n                \n                    This is the logged in user's name. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:31\n                        \n                    \n\n            \n                \n                    This is the subscription that would be used in this component. It is initialized with an empty subscription.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CommonService } from 'src/app/services/common.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * This component is used to show the navigation bar on the screen.\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  /**\n   * This is the constructor of this component.\n   * @param commonService is used to update the [loggedInUserSubject]{@link CommonService#loggedInUserSubject}.\n   */\n  constructor(private commonService: CommonService) {}\n  /**\n   * This is the logged in user's name. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  loggedInUser: string = '';\n\n  /**\n   * This is the subscription that would be used in this component. It is initialized with an empty subscription.\n   * @type {Subscription}\n   * @private\n   */\n  private subscription!: Subscription;\n\n  /**\n   * This method is used to initialize the component. It will check if the user is logged in or not.\n   */\n  ngOnInit(): void {\n    this.checkIsLoggedIn();\n  }\n\n  /**\n   * This method is used to sign out the logged in user when user clicks on the 'Sign out' button. It will call the [handleSignOut]{@link CommonService#handleSignOut} method.\n   */\n  handleSignOut(): void {\n    this.commonService.signOut();\n  }\n\n  /**\n   * This method is used to check if the user is logged in or not. And, if user is not logged in, then it will not show the 'Sign out' button, 'Get data' and 'Post data' button on the screen. It would only show the 'Sign in' and 'Sign up' button.\n   * It will subscribe to the [loggedInUserSubject]{@link CommonService#loggedInUserSubject} to get the logged in user's name. It will update the username or log error in the console.\n   * This is also use to show the logged in user's name on the screen.\n   */\n  checkIsLoggedIn(): void {\n    this.subscription = this.commonService.loggedInUserSubject.subscribe({\n      next: (loggedInUser: string) => {\n        this.loggedInUser = loggedInUser;\n      },\n      error: (error: any) => {\n        this.loggedInUser = '';\n        this.commonService.logger(error);\n      },\n    });\n  }\n\n  /**\n   * This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n   */\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n   0\" [routerLink]=\"'/'\">{{\n    loggedInUser.length > 0\n      ? \" | \" +\n        loggedInUser.charAt(0).toUpperCase() +\n        loggedInUser.slice(1) +\n        \" | \"\n      : \" | Home | \"\n  }}\n   | Sign in | \n\n   | Sign up | \n\n   0\" [routerLink]=\"'/get-data'\">\n    | Get data |\n  \n\n   0\" [routerLink]=\"'/post-data'\">\n    | Post data |\n  \n\n   0\"\n    style=\"cursor: pointer\"\n    (click)=\"handleSignOut()\"\n  >\n    | Sign out |\n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                nav {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nnav > * {\n  font-variation-settings: \"wght\" 450, \"wdth\" 180 !important;\n}\n\nnav > a:not(:first-child) {\n  margin-left: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   0\" [routerLink]=\"\\'/\\'\">{{    loggedInUser.length > 0      ? \" | \" +        loggedInUser.charAt(0).toUpperCase() +        loggedInUser.slice(1) +        \" | \"      : \" | Home | \"  }}   | Sign in |    | Sign up |    0\" [routerLink]=\"\\'/get-data\\'\">    | Get data |     0\" [routerLink]=\"\\'/post-data\\'\">    | Post data |     0\"    style=\"cursor: pointer\"    (click)=\"handleSignOut()\"  >    | Sign out |  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationComponent.html":{"url":"components/NotificationComponent.html","title":"component - NotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/notification/notification.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the notification on the screen.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification\n            \n\n\n\n            \n                styleUrls\n                ./notification.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notification.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notification\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/notification/notification.component.ts:14\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to subscribe to the notificationSubject.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification/notification.component.ts:55\n                \n            \n\n\n            \n                \n                    This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification/notification.component.ts:38\n                \n            \n\n\n            \n                \n                    This method is used to initialize the component. It will subscribe to the notificationSubject to get the updated notification to be shown on the screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notification/notification.component.ts:26\n                        \n                    \n\n            \n                \n                    This is the notification to be shown on the screen. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notification/notification.component.ts:33\n                        \n                    \n\n            \n                \n                    This is the subscription that would be used in this component. It is initialized with an empty subscription.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { CommonService } from 'src/app/services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This component is used to show the notification on the screen.\n */\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css'],\n})\nexport class NotificationComponent implements OnInit, OnDestroy {\n  /**\n   * This is the constructor of this component.\n   * @param commonService is used to subscribe to the [notificationSubject]{@link CommonService#notificationSubject}.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This is the notification to be shown on the screen. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  notification: string = '';\n\n  /**\n   * This is the subscription that would be used in this component. It is initialized with an empty subscription.\n   * @type {Subscription}\n   * @private\n   */\n  private subscription!: Subscription;\n\n  /**\n   * This method is used to initialize the component. It will subscribe to the [notificationSubject]{@link CommonService#notificationSubject} to get the updated notification to be shown on the screen.\n   */\n  ngOnInit(): void {\n    this.subscription = this.commonService.notificationSubject$.subscribe(\n      (notification: any) => {\n        this.notification = notification;\n        /**\n         * This is used to hide the notification after a certain time.\n         */\n        setTimeout(() => {\n          this.notification = '';\n        }, appConstant.hideNotifcationAfter);\n      }\n    );\n  }\n\n  /**\n   * This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n   */\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        {{ notification }}\n\n    \n\n    \n                \n                    ./notification.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ notification }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostDataComponent.html":{"url":"components/PostDataComponent.html","title":"component - PostDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/post-data/post-data.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show form to send new data form on the screen to backend.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-data\n            \n\n\n\n            \n                styleUrls\n                ./post-data.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post-data.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handlePostData\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/post-data/post-data.component.ts:16\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handlePostData\n                        \n                    \n                \n            \n            \n                \nhandlePostData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/post-data/post-data.component.ts:54\n                \n            \n\n\n            \n                \n                    This method is used to handle sending data to the backend. It will call the handlePostData method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handlePostData to sennd the data to the backend. For error, it will show the error message on the screen and log the error in the console.\nIf the user is not logged in or the token is expired, then it will sign out the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/post-data/post-data.component.ts:96\n                \n            \n\n\n            \n                \n                    This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        article\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/post-data/post-data.component.ts:32\n                        \n                    \n\n            \n                \n                    This is the article that is needed to be sent to the backend. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/post-data/post-data.component.ts:46\n                        \n                    \n\n            \n                \n                    This is the subscription that would be used in this component. It is initialized with an empty subscription.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/post-data/post-data.component.ts:39\n                        \n                    \n\n            \n                \n                    This is the title that is needed to be sent to the backend. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Subscription, finalize } from 'rxjs';\nimport { RequestData } from 'src/app/models/RequestData.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This component is used to show form to send new data form on the screen to backend.\n */\n@Component({\n  selector: 'app-post-data',\n  templateUrl: './post-data.component.html',\n  styleUrls: ['./post-data.component.css'],\n})\nexport class PostDataComponent implements OnDestroy {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService\n  ) {}\n\n  /**\n   * This is the article that is needed to be sent to the backend. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  article: string = '';\n\n  /**\n   * This is the title that is needed to be sent to the backend. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  title: string = '';\n\n  /**\n   * This is the subscription that would be used in this component. It is initialized with an empty subscription.\n   * @type {Subscription}\n   * @private\n   */\n  private subscription!: Subscription;\n\n  /**\n   * This method is used to handle sending data to the backend. It will call the [handlePostData]{@link BackendService#handlePostData} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handlePostData]{@link BackendService#handlePostData} to sennd the data to the backend. For error, it will show the error message on the screen and log the error in the console.\n   * If the user is not logged in or the token is expired, then it will sign out the user.\n   */\n  handlePostData() {\n    /**\n     * This is the data to be sent to the backend.\n     * @type {RequestData}\n     */\n    const data: RequestData = {\n      title: this.title,\n      article: this.article,\n    };\n    this.commonService.updateLoaderSubject(true);\n    this.subscription = this.backendService\n      .handlePostData(data)\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.commonService.logger(response);\n          this.commonService.updateNotificationSubject(\n            response?.message ||\n              `${appConstant.success} ${appConstant.postData}.`\n          );\n        },\n        error: (error: any) => {\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message ||\n              `${appConstant.error} ${appConstant.postData}.`\n          );\n\n          if (error?.status === 401) {\n            this.commonService.signOut();\n          }\n        },\n      });\n  }\n\n  /**\n   * This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n   */\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n    \n  \n  Post data\n\n\n    \n\n    \n                \n                    ./post-data.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Post data'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestData.html":{"url":"interfaces/RequestData.html","title":"interface - RequestData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/RequestData.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            article\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        article\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        article:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the article provided by the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the title provided by the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RequestData {\n  /**\n   * This is the title provided by the user.\n   */\n  title: string;\n  /**\n   * This is the article provided by the user.\n   */\n  article: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseData.html":{"url":"interfaces/ResponseData.html","title":"interface - ResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ResponseData.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the response data that comes from the backend.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            article\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        article\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        article:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the article that comes from the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the created date that comes from the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the title that comes from the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username that comes from the backend.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ResponseData {\n  /**\n   * This is the username that comes from the backend.\n   */\n  username: string;\n  /**\n   * This is the title that comes from the backend.\n   */\n  title: string;\n  /**\n   * This is the article that comes from the backend.\n   */\n  article: string;\n  /**\n   * This is the created date that comes from the backend.\n   */\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignIn.html":{"url":"interfaces/SignIn.html","title":"interface - SignIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/SignIn.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the sign in data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the password of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SignIn {\n  /**\n   * This is the username of the user.\n   */\n  username: string;\n  /**\n   * This is the password of the user.\n   */\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUp.html":{"url":"interfaces/SignUp.html","title":"interface - SignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/SignUp.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the sign up data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    This is the email of the user. It is optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the password of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SignUp {\n  /**\n   * This is the email of the user. It is optional.\n   * @optional\n   */\n  email?: string | undefined;\n  /**\n   * This is the username of the user.\n   */\n  username: string;\n  /**\n   * This is the password of the user.\n   */\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/signin/signin.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the sign in page on the screen. It is used to sign in the existing users.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signin\n            \n\n\n\n            \n                styleUrls\n                ./signin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleSignIn\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/signin/signin.component.ts:17\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used here to navigate the user to get data screen after successful sign in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignIn\n                        \n                    \n                \n            \n            \n                \nhandleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signin/signin.component.ts:58\n                \n            \n\n\n            \n                \n                    This method is used to sign in the existing user. It will call the handleSignIn method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handleSignIn to get the data from the backend. It will update the token and username with the data received from the backend.\nFor error, it will show the error message on the screen and log the error in the console.\nAfter successful sign in, it will navigate the user to the get data screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signin/signin.component.ts:104\n                \n            \n\n\n            \n                \n                    This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signin/signin.component.ts:42\n                        \n                    \n\n            \n                \n                    This is the password of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signin/signin.component.ts:49\n                        \n                    \n\n            \n                \n                    This is the subscription that would be used in this component. It is initialized with an empty subscription.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signin/signin.component.ts:35\n                        \n                    \n\n            \n                \n                    This is the username of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription, finalize } from 'rxjs';\nimport { SignIn } from 'src/app/models/SignIn.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This component is used to show the sign in page on the screen. It is used to sign in the existing users.\n */\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent implements OnDestroy {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   * @param router is used here to navigate the user to get data screen after successful sign in.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService,\n    private router: Router\n  ) {}\n\n  /**\n   * This is the username of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  username: string = '';\n\n  /**\n   * This is the password of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  password: string = '';\n\n  /**\n   * This is the subscription that would be used in this component. It is initialized with an empty subscription.\n   * @type {Subscription}\n   * @private\n   */\n  private subscription!: Subscription;\n\n  /**\n   * This method is used to sign in the existing user. It will call the [handleSignIn]{@link BackendService#handleSignIn} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handleSignIn]{@link BackendService#handleSignIn} to get the data from the backend. It will update the [token]{@link CommonService#token} and [username]{@link CommonService#username} with the data received from the backend.\n   * For error, it will show the error message on the screen and log the error in the console.\n   * After successful sign in, it will navigate the user to the get data screen.\n   */\n  handleSignIn() {\n    /**\n     * Creating the data to be sent to the backend.\n     * @type {SignIn}\n     */\n    const data: SignIn = {\n      username: this.username,\n      password: this.password,\n    };\n    this.commonService.updateLoaderSubject(true);\n    this.subscription = this.backendService\n      .handleSignIn(data)\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          const accessToken: string = response.headers.get(\n            appConstant.authorizationHeaderKey\n          );\n          this.commonService.token = accessToken;\n          const decodedToken = this.commonService.decodeToken(accessToken);\n          this.commonService.logger(decodedToken);\n          this.commonService.username = decodedToken?.username;\n          this.router.navigate(['/get-data']);\n\n          this.commonService.updateNotificationSubject(\n            response?.body?.message ||\n              `${appConstant.success} ${appConstant.signIn}.`\n          );\n        },\n        error: (error: any) => {\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message ||\n              `${appConstant.error} ${appConstant.signIn}.`\n          );\n        },\n      });\n  }\n\n  /**\n   * This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n   */\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n  Sign in\n\n\n    \n\n    \n                \n                    ./signin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Sign in'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/signup/signup.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the sign up page on the screen. It is used to create a new user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n\n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleSignUp\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/signup/signup.component.ts:17\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used here to navigate the user to the post data screen after successful sign up.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignUp\n                        \n                    \n                \n            \n            \n                \nhandleSignUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:66\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign up button click. It will call the handleSignUp method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handleSignUp to sign up the user. It will update the token and username in the commonService based on the response from the backend.\nFor error, it will show the error message on the screen and log the error in the console.\nAfter successful sign up, it will navigate the user to the post data screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:109\n                \n            \n\n\n            \n                \n                    This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:50\n                        \n                    \n\n            \n                \n                    This is the email of the user. It is initialized with an empty string. It is optional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:42\n                        \n                    \n\n            \n                \n                    This is the password of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:57\n                        \n                    \n\n            \n                \n                    This is the subscription that would be used in this component. It is initialized with an empty subscription.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:35\n                        \n                    \n\n            \n                \n                    This is the username of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription, finalize } from 'rxjs';\nimport { SignUp } from 'src/app/models/SignUp.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This component is used to show the sign up page on the screen. It is used to create a new user.\n */\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnDestroy {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   * @param router is used here to navigate the user to the post data screen after successful sign up.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService,\n    private router: Router\n  ) {}\n\n  /**\n   * This is the username of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  username: string = '';\n\n  /**\n   * This is the password of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  password: string = '';\n\n  /**\n   * This is the email of the user. It is initialized with an empty string. It is optional.\n   * @optional\n   * @type {string}\n   * @default ''\n   */\n  email: string = '';\n\n  /**\n   * This is the subscription that would be used in this component. It is initialized with an empty subscription.\n   * @type {Subscription}\n   * @private\n   */\n  private subscription!: Subscription;\n\n  /**\n   * This method is used to handle the sign up button click. It will call the [handleSignUp]{@link BackendService#handleSignUp} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handleSignUp]{@link BackendService#handleSignUp} to sign up the user. It will update the [token]{@link CommonService#token} and [username]{@link CommonService#username} in the [commonService]{@link CommonService} based on the response from the backend.\n   * For error, it will show the error message on the screen and log the error in the console.\n   * After successful sign up, it will navigate the user to the post data screen.\n   */\n  handleSignUp() {\n    /**\n     * Creating the data object to be sent to the backend.\n     * @type {SignUp}\n     */\n    const data: SignUp = {\n      username: this.username,\n      password: this.password,\n      email: this.email ? this.email : undefined,\n    };\n    this.commonService.updateLoaderSubject(true);\n    this.subscription = this.backendService\n      .handleSignUp(data)\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          const accessToken: string = response.headers.get('Authorization');\n          this.commonService.token = accessToken;\n          const decodedToken = this.commonService.decodeToken(accessToken);\n          this.commonService.username = decodedToken?.username;\n          this.router.navigate(['/post-data']);\n\n          this.commonService.updateNotificationSubject(\n            response?.message || `${appConstant.success} ${appConstant.signUp}.`\n          );\n        },\n        error: (error: any) => {\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message ||\n              `${appConstant.error} ${appConstant.signUp}.`\n          );\n        },\n      });\n  }\n\n  /**\n   * This is called when the component is destroyed. It will unsubscribe from the subscription if it is present.\n   */\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  Sign up\n\n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Sign up'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebSocketComponent.html":{"url":"components/WebSocketComponent.html","title":"component - WebSocketComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WebSocketComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/web-socket/web-socket.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the message from the connected websocket.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-web-socket\n            \n\n\n\n            \n                styleUrls\n                ./web-socket.component.css\n            \n\n\n\n            \n                templateUrl\n                ./web-socket.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/web-socket/web-socket.component.ts:11\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/web-socket/web-socket.component.ts:30\n                \n            \n\n\n            \n                \n                    This method is used to initialize the component. It will connect to the websocket.\nIt will subscribe to the handleGetWebSocketData to get the message from the websocket. It will update the message with the data received from the websocket.\nFor error, it will log the error in the console.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/web-socket/web-socket.component.ts:23\n                        \n                    \n\n            \n                \n                    This is the message from the connected websocket. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BackendService } from 'src/app/services/backend.service';\n/**\n * This component is used to show the message from the connected websocket.\n */\n@Component({\n  selector: 'app-web-socket',\n  templateUrl: './web-socket.component.html',\n  styleUrls: ['./web-socket.component.css'],\n})\nexport class WebSocketComponent implements OnInit {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   */\n  constructor(private backendService: BackendService) {}\n\n  /**\n   * This is the message from the connected websocket. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  message: string = '';\n\n  /**\n   * This method is used to initialize the component. It will connect to the websocket.\n   * It will subscribe to the [handleGetWebSocketData]{@link BackendService#handleGetWebSocketData} to get the message from the websocket. It will update the [message]{@link message} with the data received from the websocket.\n   * For error, it will log the error in the console.\n   */\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ message }}\n\n    \n\n    \n                \n                    ./web-socket.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ message }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WebSocketComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/get-data/get-data.component.ts\n            \n            component\n            GetDataComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/notification/notification.component.ts\n            \n            component\n            NotificationComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/post-data/post-data.component.ts\n            \n            component\n            PostDataComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/signin/signin.component.ts\n            \n            component\n            SigninComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/web-socket/web-socket.component.ts\n            \n            component\n            WebSocketComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/DecodedJWT.model.ts\n            \n            interface\n            DecodedJWT\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/RequestData.model.ts\n            \n            interface\n            RequestData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/ResponseData.model.ts\n            \n            interface\n            ResponseData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/SignIn.model.ts\n            \n            interface\n            SignIn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/SignUp.model.ts\n            \n            interface\n            SignUp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/backend.interceptor.ts\n            \n            interceptor\n            BackendInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            injectable\n            BackendService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/constants/apiPath.constant.ts\n            \n            variable\n            apiPathConstant\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants/app.constant.ts\n            \n            variable\n            appConstant\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.production.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.0\n        \n            @angular/common : ^16.0.0\n        \n            @angular/compiler : ^16.0.0\n        \n            @angular/core : ^16.0.0\n        \n            @angular/forms : ^16.0.0\n        \n            @angular/platform-browser : ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^16.0.0\n        \n            @angular/router : ^16.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBase Frontend v0.0.1\n\n\nIntroduction\nThis project was generated with Angular CLI version 16.0.2.\nThis application serves as the frontend for base-node-server application.\nThis is a very basic single page web application created to test out the base-node-server in the browser. It has been documented, but I always strive to do better.\nRunning the application\nRun ng serve or npm run development for development server. Run npm run production for production server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nDocumentation for the application\nRun npm run compdoc for generating documentation. Navigate to http://127.0.0.1:5500/frontend/documentation/index.html for the documentation.\nBuilding the application (for production)\nRun npm build for generating production build files. Navigate to dist folder to see the files.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGetDataComponent\n\nGetDataComponent\n\nAppModule -->\n\nGetDataComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nAppModule -->\n\nNotificationComponent->AppModule\n\n\n\n\n\nPostDataComponent\n\nPostDataComponent\n\nAppModule -->\n\nPostDataComponent->AppModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAppModule -->\n\nSigninComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nWebSocketComponent\n\nWebSocketComponent\n\nAppModule -->\n\nWebSocketComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nBackendInterceptor\n\nBackendInterceptor\n\nAppModule -->\n\nBackendInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiPathConstant   (src/.../apiPath.constant.ts)\n                        \n                        \n                            appConstant   (src/.../app.constant.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.production.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants/apiPath.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiPathConstant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  signUp: '/signup',\n  signIn: '/signin',\n  signOut: '/signout',\n  data: '/data',\n  websocket: '/websocket',\n}\n                    \n                \n\n            \n                \n                    These are the API path constants.\n\n                \n            \n\n        \n    \n\n    src/constants/app.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConstant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  appName: 'Angular App',\n  hideNotifcationAfter: 5000,\n  authorizationHeaderKey: 'Authorization',\n  success: 'Success',\n  error: 'Error',\n  signUp: '- signing up',\n  signIn: '- signing in',\n  signOut: '- signing out',\n  getData: '- getting data',\n  postData: '- posting data',\n}\n                    \n                \n\n            \n                \n                    These are the common app constants.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  backendUrl: 'http://localhost:3000/api',\n  websocketUrl: 'ws://localhost:8080',\n  production: false,\n}\n                    \n                \n\n            \n                \n                    This is the environment file for the development environment.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  backendUrl: 'http://:3000/api',\n  websocketUrl: 'ws://:3000',\n  production: true,\n}\n                    \n                \n\n            \n                \n                    This is the environment file for the production environment.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  backendUrl: '',\n  websocketUrl: '',\n  production: false,\n}\n                    \n                \n\n            \n                \n                    This is the environment file for the default environment.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
