var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.426,1,0.83]],["body/components/AppComponent.html",[0,0.759,1,1.221,2,1.248,3,0.283,4,0.244,5,0.933,6,0.933,7,0.933,8,0.933,9,0.207,10,1.89,11,0.542,12,3.73,13,2.464,14,1.878,15,2.507,16,0.933,17,2.22,18,1.827,19,1.376,20,4.014,21,1.376,22,3.378,23,0.418,24,0.542,25,4.945,26,2.628,27,0.931,28,2.768,29,1.106,30,1.273,31,1.447,32,1.221,33,2.29,34,0.631,35,0.039,36,1.106,37,0.584,38,0.571,39,1.363,40,1.994,41,2.211,42,3.378,43,2.29,44,0.931,45,2.11,46,2.11,47,0.931,48,2.788,49,1.52,50,1.878,51,1.878,52,3.378,53,3.378,54,2.788,55,2.788,56,1.248,57,1.89,58,0.631,59,1.248,60,3.148,61,1.106,62,1.221,63,2.507,64,2.29,65,1.248,66,1.248,67,2.768,68,1.878,69,0.645,70,3.378,71,2.29,72,1.686,73,2.788,74,0.903,75,0.463,76,2.29,77,0.846,78,1.03,79,0.283,80,0.515,81,0.631,82,0.933,83,1.89,84,2.29,85,2.29,86,2.29,87,2.29,88,2.29,89,2.788,90,2.788,91,3.378,92,2.29,93,2.788,94,3.901,95,2.29,96,4.945,97,4.222,98,2.788,99,3.378,100,4.333,101,4.431,102,3.313,103,3.378,104,4.945,105,4.014,106,1.627,107,1.627,108,3.148,109,4.014,110,2.29,111,3.901,112,1.627,113,1.627,114,1.627,115,1.89,116,1.627,117,1.89,118,2.29,119,3.658,120,2.788,121,2.788,122,2.788,123,3.378,124,4.431,125,2.29,126,2.29,127,2.788,128,2.29,129,2.29,130,2.29,131,2.29,132,2.29,133,2.29,134,2.29,135,2.29,136,1.89,137,2.29,138,2.29,139,1.89,140,1.89,141,1.89,142,3.378,143,3.378,144,3.313,145,2.29,146,2.29,147,2.29,148,2.29,149,1.89,150,2.788,151,1.89,152,2.29,153,1.627,154,2.29,155,1.89,156,1.89,157,2.29,158,1.89,159,2.29,160,1.89,161,1.89,162,1.89,163,1.627,164,1.89,165,1.89,166,2.29,167,1.89,168,1.273,169,1.89,170,0.767,171,1.376,172,1.376,173,0.933,174,1.805,175,0.933,176,0.933,177,0.571,178,1.376,179,0.631,180,0.933,181,0.631,182,0.933,183,0.571,184,0.696,185,0.571,186,0.933,187,0.571,188,0.933,189,0.631,190,0.846,191,0.933,192,0.933,193,0.933,194,0.021,195,0.021]],["title/modules/AppModule.html",[196,1.881,197,1.503]],["body/modules/AppModule.html",[1,1.632,3,0.389,4,0.335,9,0.284,18,1.055,35,0.039,68,1.751,72,1.571,74,1.353,75,0.636,79,0.389,80,0.708,170,1.055,177,1.367,179,1.511,181,1.511,183,1.367,185,1.367,187,1.367,189,1.511,194,0.026,195,0.026,196,1.967,197,3.093,198,1.751,199,1.967,200,3.942,201,3.942,202,3.942,203,2.237,204,2.599,205,2.599,206,2.599,207,2.599,208,2.599,209,3.049,210,2.736,211,3.049,212,3.491,213,2.237,214,1.163,215,3.148,216,3.491,217,3.491,218,4.229,219,2.599,220,3.148,221,3.148,222,2.599,223,2.599,224,2.599,225,1.967,226,3.491,227,2.599,228,1.967,229,3.148,230,4.229,231,2.599,232,4.229,233,4.229,234,2.237,235,3.148,236,3.148,237,2.599,238,3.148,239,2.237,240,3.148,241,3.148,242,3.148,243,3.148]],["title/modules/AppRoutingModule.html",[196,1.881,209,1.675]],["body/modules/AppRoutingModule.html",[0,0.784,3,0.482,4,0.416,9,0.352,13,2.169,35,0.039,74,1.325,75,0.788,79,0.482,80,0.877,177,1.211,183,1.211,184,1.186,185,1.211,187,1.211,194,0.03,195,0.03,198,2.169,203,2.771,209,2.702,210,2.64,216,3.22,217,4.01,222,3.22,223,3.22,224,3.22,225,2.437,226,4.01,227,3.22,228,2.437,237,3.22,244,3.901,245,3.901,246,4.858,247,3.168,248,1.946,249,3.901,250,3.901,251,1.946,252,4.703,253,1.756,254,1.756,255,1.092,256,4.01,257,3.901,258,3.901]],["title/injectables/AuthGuard.html",[210,1.503,259,1.227]],["body/injectables/AuthGuard.html",[3,0.354,4,0.305,9,0.258,11,0.73,23,0.354,27,1.092,29,1.253,30,1.592,31,1.506,32,1.092,34,1.092,35,0.039,36,1.092,37,0.49,38,0.988,39,1.607,44,1.092,46,3.329,47,1.646,49,2.719,55,3.272,58,1.092,60,3.661,61,0.789,62,1.469,63,3.218,66,1.812,68,2.964,69,0.46,74,1.022,75,0.579,79,0.354,80,1.158,81,1.253,82,1.166,168,1.592,184,1.492,194,0.024,195,0.024,210,1.978,247,2.204,248,1.429,255,1.252,256,3.753,259,1.615,260,1.789,261,2.364,262,5.569,263,5.569,264,2.816,265,4.907,266,2.863,267,2.816,268,2.84,269,2.863,270,4.907,271,4.399,272,4.907,273,2.863,274,2.865,275,5.654,276,4.907,277,3.272,278,3.272,279,4.051,280,2.364,281,2.816,282,3.272,283,2.863,284,2.863,285,2.863,286,0.96,287,2.863,288,2.863,289,1.812,290,2.863,291,2.364,292,1.166,293,2.034,294,2.364,295,1.429]],["title/interceptors/BackendInterceptor.html",[211,1.675,296,2.14]],["body/interceptors/BackendInterceptor.html",[3,0.386,4,0.332,9,0.282,11,0.763,14,1.735,23,0.386,27,1.158,29,1.31,30,1.735,31,1.54,32,1.158,34,1.158,35,0.039,36,1.158,37,0.52,38,1.048,39,1.507,44,1.158,58,0.86,69,0.501,74,1.144,75,0.63,79,0.386,80,0.701,81,1.31,82,1.271,136,2.575,194,0.026,195,0.026,211,2.337,234,2.216,251,1.557,259,1.712,268,2.969,274,2.643,280,2.575,292,2.228,296,3.614,297,3.12,298,2.575,299,2.184,300,5.589,301,2.345,302,4.198,303,5.309,304,3.971,305,2.592,306,5.469,307,1.878,308,3.12,309,3.469,310,3.469,311,3.12,312,5.086,313,5.086,314,3.12,315,5.589,316,2.337,317,4.203,318,4.203,319,3.12,320,4.203,321,1.404,322,4.203,323,2.216,324,3.12,325,3.12,326,1.409,327,1.557,328,3.12,329,3.12,330,3.12,331,2.216,332,3.12,333,3.12,334,3.12,335,3.12,336,3.12,337,3.12,338,3.12]],["title/injectables/BackendService.html",[259,1.227,339,1.112]],["body/injectables/BackendService.html",[3,0.235,4,0.203,9,0.324,11,0.648,12,1.351,13,1.633,23,0.235,24,0.472,27,0.809,29,0.988,32,1.403,34,1.111,35,0.039,36,1.111,37,0.613,38,1.005,39,1.544,44,1.544,47,1.111,49,1.322,50,2.562,54,3.33,58,1.458,61,0.809,62,0.809,69,0.771,74,1.08,75,0.384,79,0.235,80,0.98,81,1.111,82,0.775,184,1.226,194,0.018,195,0.018,197,0.949,214,1.49,234,1.351,253,1.962,254,1.962,255,1.3,259,1.196,260,1.188,264,2.866,268,3.247,274,2.562,299,2.244,301,2.316,302,3.803,304,3.273,305,2.074,307,1.984,316,2.243,323,3.273,326,1.544,327,1.465,339,1.085,340,1.57,341,2.013,342,2.424,343,1.57,344,2.937,345,2.937,346,2.961,347,2.961,348,3.33,349,3.33,350,2.424,351,2.424,352,2.866,353,2.424,354,1.902,355,4.96,356,1.902,357,1.902,358,2.691,359,4.291,360,1.902,361,1.322,362,2.866,363,2.424,364,2.424,365,1.902,366,2.424,367,1.902,368,4.607,369,4.034,370,2.424,371,2.424,372,4.607,373,4.607,374,3.803,375,3.803,376,4.607,377,4.607,378,4.607,379,3.273,380,3.803,381,3.803,382,3.803,383,5.09,384,4.607,385,1.902,386,2.424,387,1.902,388,2.937,389,1.465,390,4.034,391,1.902,392,4.034,393,4.034,394,2.723,395,1.902,396,1.902,397,1.57,398,1.902,399,1.902,400,1.902,401,1.351,402,1.902,403,1.57,404,1.57,405,2.937,406,2.937,407,1.902,408,1.902,409,2.937,410,1.902,411,2.937,412,1.902,413,1.57,414,1.57]],["title/injectables/CommonService.html",[31,0.83,259,1.227]],["body/injectables/CommonService.html",[3,0.137,4,0.118,9,0.224,11,0.675,12,0.79,13,1.379,23,0.137,24,0.305,27,0.807,29,0.683,31,0.807,32,1.401,34,1.11,35,0.039,36,1.322,37,0.621,38,1.004,39,1.585,40,2.432,41,2.01,44,1.498,46,2.236,47,1.384,48,2.047,49,2.071,50,0.618,51,1.379,56,1.412,57,4.029,58,1.268,59,1.487,60,2.082,61,1.297,62,1.268,63,1.185,65,1.322,66,1.608,67,1.83,68,1.379,69,0.921,72,0.555,73,0.918,74,0.86,75,0.225,77,0.411,78,0.501,79,0.137,80,0.558,81,1.158,82,0.453,83,2.047,168,1.055,194,0.012,195,0.012,197,0.555,214,1.082,248,0.555,251,1.787,259,0.773,260,0.695,264,1.348,267,3.569,268,2.236,271,1.566,274,2.793,277,0.918,278,0.918,279,1.566,281,2.082,286,1.869,289,1.7,292,0.453,293,2.082,299,0.7,305,2.574,307,1.608,309,4.288,310,4.288,321,0.501,326,1.102,339,1.608,342,1.566,343,0.918,352,1.762,358,2.159,361,1.891,374,0.918,375,0.918,380,3.799,381,1.566,382,0.918,389,1.787,394,0.695,397,0.918,403,0.918,404,0.918,413,1.566,414,2.715,415,0.918,416,1.566,417,1.897,418,1.897,419,1.897,420,4.147,421,2.93,422,1.897,423,1.897,424,3.884,425,1.897,426,1.897,427,1.897,428,1.897,429,1.112,430,2.861,431,1.112,432,1.83,433,1.897,434,1.897,435,1.897,436,1.112,437,3.58,438,3.469,439,1.897,440,1.897,441,1.897,442,2.48,443,2.419,444,3.289,445,3.823,446,3.289,447,1.897,448,1.112,449,3.799,450,3.156,451,1.988,452,2.48,453,3.799,454,2.388,455,1.897,456,1.112,457,1.891,458,1.897,459,1.48,460,2.93,461,1.348,462,1.897,463,1.897,464,3.289,465,3.58,466,1.112,467,1.112,468,1.112,469,1.112,470,1.897,471,1.897,472,1.112,473,2.93,474,3.58,475,2.48,476,1.897,477,1.112,478,1.897,479,3.289,480,1.897,481,2.419,482,1.112,483,1.112,484,1.112,485,1.897,486,1.112,487,2.394,488,1.897,489,1.112,490,1.112,491,1.112,492,4.797,493,1.897,494,1.112,495,4.602,496,1.458,497,1.897,498,1.112,499,1.112,500,1.897,501,1.897,502,1.112,503,1.112,504,1.897,505,1.897,506,1.112,507,1.112,508,1.112,509,1.112,510,1.112,511,1.112,512,1.112,513,1.112,514,1.112,515,1.055,516,1.112,517,1.112,518,0.918,519,0.618,520,1.112,521,2.715,522,1.112,523,1.112,524,1.112,525,1.112,526,1.112,527,1.566,528,1.112,529,1.112,530,1.112,531,1.897,532,1.348,533,1.112,534,1.112,535,2.93,536,1.112,537,0.79,538,0.618,539,0.618,540,1.112,541,1.112,542,1.897,543,0.918,544,0.618,545,1.897,546,2.48,547,0.618,548,0.618,549,3.58,550,0.918,551,0.918,552,1.112,553,1.112,554,1.112,555,1.112,556,1.112,557,1.112,558,1.897,559,1.112,560,1.566,561,2.48,562,1.112,563,1.112,564,1.112,565,1.897,566,1.348,567,1.348,568,2.93,569,1.112,570,0.918,571,2.93,572,0.79,573,1.112,574,2.48,575,1.112,576,1.112,577,1.112,578,1.112,579,1.112,580,1.112]],["title/interfaces/DecodedJWT.html",[454,1.881,581,0.916]],["body/interfaces/DecodedJWT.html",[3,0.515,4,0.444,9,0.376,11,0.67,23,0.515,24,0.813,35,0.038,37,0.674,69,0.875,79,0.515,194,0.031,195,0.031,286,1.978,449,4.932,450,3.442,454,3.162,550,4.678,551,4.678,581,1.539,582,2.081,583,3.442,584,5.903,585,5.062,586,4.678,587,5.062,588,5.062]],["title/components/GetDataComponent.html",[0,0.426,177,0.751]],["body/components/GetDataComponent.html",[0,0.677,1,0.517,2,1.073,3,0.232,4,0.2,5,0.764,6,0.764,7,0.764,8,0.764,9,0.169,11,0.571,16,0.764,17,2.11,18,1.736,19,1.183,21,1.183,23,0.359,24,0.467,26,1.616,27,0.801,29,1.103,31,1.361,32,1.103,34,0.801,35,0.039,36,1.103,37,0.495,38,0.724,39,1.427,40,1.308,41,2.286,44,1.262,47,1.103,49,1.308,56,0.693,58,0.98,59,1.073,61,0.801,62,0.517,65,1.913,66,1.913,67,1.815,69,0.643,74,1.03,75,0.379,77,0.693,78,0.844,79,0.232,80,0.422,81,0.98,94,1.549,97,1.549,98,1.549,100,2.398,102,1.549,106,2.064,107,2.526,108,1.333,112,1.333,113,1.333,114,1.333,116,1.333,119,1.549,120,1.549,121,1.549,122,1.549,127,1.549,139,1.549,140,1.549,141,1.549,144,1.549,149,1.549,150,2.398,151,1.549,153,2.526,156,2.935,158,1.549,160,1.549,161,1.549,162,1.549,163,2.526,164,1.549,165,1.549,167,2.398,168,1.043,169,1.549,170,0.629,171,1.183,172,1.183,173,0.764,174,1.631,175,0.764,176,0.764,177,0.998,178,1.183,179,0.517,180,0.764,181,0.517,182,0.764,183,0.468,184,0.57,185,0.468,186,0.764,187,0.468,188,0.764,189,0.517,190,0.693,191,0.764,192,0.764,193,0.764,194,0.018,195,0.018,213,2.064,214,1.073,225,2.706,255,1.304,274,2.746,286,0.974,289,1.824,292,0.764,295,0.936,299,1.977,301,1.866,305,1.308,307,1.824,321,0.844,326,0.974,339,1.765,341,1.45,348,3.944,358,1.6,361,1.308,389,0.936,438,2.398,443,1.549,451,1.631,453,2.398,457,1.308,459,1.308,487,1.998,496,1.183,515,1.616,519,1.616,538,1.043,539,1.043,544,1.043,547,1.043,548,1.043,560,1.549,589,3.576,590,1.333,591,2.935,592,2.398,593,2.905,594,1.043,595,1.549,596,2.905,597,4.712,598,1.876,599,4.938,600,4.004,601,4.004,602,4.004,603,2.905,604,2.905,605,3.556,606,2.905,607,2.905,608,3.556,609,2.905,610,2.905,611,1.876,612,1.876,613,1.876,614,1.876,615,1.876,616,1.815,617,1.815,618,1.616,619,1.815,620,1.815,621,2.064,622,2.398,623,2.398,624,2.501,625,1.549,626,2.905,627,1.876,628,1.043,629,0.936,630,2.905,631,2.905,632,1.876,633,1.172,634,1.172,635,1.876,636,2.905,637,1.876,638,1.815,639,1.333,640,2.905,641,1.549,642,1.549,643,1.333,644,1.876,645,2.905,646,2.905,647,2.905,648,1.815,649,2.905,650,1.876,651,1.876,652,1.876,653,1.876,654,1.876,655,1.549,656,2.398,657,1.876,658,1.876,659,1.549,660,1.549,661,1.876,662,1.876,663,1.876,664,1.876,665,1.876,666,1.876,667,1.876,668,1.876,669,1.876,670,1.876,671,1.876,672,2.905,673,1.876,674,2.905,675,1.876,676,1.876,677,1.876,678,1.876,679,2.905,680,1.876,681,1.876,682,1.876]],["title/components/NavbarComponent.html",[0,0.426,179,0.83]],["body/components/NavbarComponent.html",[0,0.749,1,0.6,2,1.201,3,0.269,4,0.232,5,0.886,6,0.886,7,0.886,8,0.886,9,0.196,11,0.522,14,1.809,15,2.433,16,0.886,17,2.193,18,1.804,19,1.325,21,1.325,23,0.269,24,0.522,27,0.896,28,2.699,29,1.073,30,1.21,31,1.386,32,1.275,34,0.6,35,0.039,36,1.457,37,0.481,38,0.542,39,1.484,40,1.945,44,1.425,45,2.032,46,2.699,47,1.484,49,2.542,56,1.201,58,1.073,59,1.793,61,0.896,62,0.6,65,1.91,66,1.793,69,0.779,74,0.731,75,0.44,79,0.269,80,0.489,81,0.6,82,0.886,93,1.796,106,1.546,107,2.311,108,1.546,111,1.796,112,1.546,113,1.546,114,1.546,115,1.796,116,1.546,117,1.796,153,1.546,163,1.546,168,2.994,170,0.729,171,1.325,172,1.325,173,0.886,174,1.76,175,0.886,176,0.886,177,0.542,178,1.325,179,1.191,180,0.886,181,0.6,182,0.886,183,0.542,184,1.406,185,0.542,186,0.886,187,0.542,188,0.886,189,0.6,190,0.804,191,0.886,192,0.886,193,0.886,194,0.02,195,0.02,214,1.91,255,1.245,267,2.311,281,2.311,282,2.685,286,1.09,289,1.596,291,1.796,292,0.886,293,3.287,294,2.685,295,1.086,307,1.201,326,1.922,327,2.156,352,3.287,451,1.325,457,1.464,459,1.464,481,4.007,496,1.325,527,1.796,629,1.086,643,1.546,655,1.796,656,1.796,659,1.796,660,1.796,683,1.796,684,3.252,685,3.252,686,3.252,687,3.895,688,3.252,689,4.322,690,2.176,691,2.176,692,4.269,693,3.252,694,2.176,695,3.252,696,2.176,697,2.176,698,2.176,699,2.176,700,3.252,701,3.252,702,3.252,703,3.252,704,3.252,705,2.176,706,2.176,707,3.252,708,3.252,709,3.252,710,3.895,711,2.176,712,2.176,713,2.176,714,2.176,715,2.176]],["title/components/NotificationComponent.html",[0,0.426,181,0.83]],["body/components/NotificationComponent.html",[0,0.809,1,0.827,2,1.512,3,0.371,4,0.32,5,1.222,6,1.222,7,1.222,8,1.222,9,0.271,11,0.657,14,2.277,15,2.911,16,1.222,17,2.353,18,1.936,19,1.668,21,1.668,23,0.371,24,0.657,27,1.128,28,3.127,29,1.284,30,1.669,31,1.525,32,1.284,34,0.827,35,0.039,36,1.284,37,0.576,38,0.748,39,1.525,44,1.128,45,2.557,56,1.849,58,0.827,59,1.512,61,1.128,62,0.827,65,1.512,66,1.997,67,3.127,69,0.841,74,1.048,75,0.606,77,1.108,78,1.351,79,0.371,80,0.675,81,0.827,82,1.222,170,1.006,171,1.668,172,1.668,173,1.222,174,2.039,175,1.222,176,1.222,177,0.748,178,1.668,179,0.827,180,1.222,181,1.379,182,1.222,183,0.748,184,0.913,185,0.748,186,1.222,187,0.748,188,1.222,189,0.827,190,1.108,191,1.222,192,1.222,193,1.222,194,0.025,195,0.025,420,3.38,451,1.668,487,2.985,496,1.668,521,3.38,586,2.477,618,1.669,629,1.498,716,2.477,717,4.66,718,4.094,719,3.001,720,3.001,721,4.094,722,3.001,723,4.094,724,3.001,725,4.094,726,3.001,727,3.001,728,3.001]],["title/components/PostDataComponent.html",[0,0.426,183,0.751]],["body/components/PostDataComponent.html",[0,0.724,1,0.63,2,1.247,3,0.283,4,0.244,5,0.932,6,0.932,7,0.932,8,0.932,9,0.206,11,0.542,16,0.932,17,2.22,18,1.826,19,1.375,21,1.375,23,0.283,24,0.542,26,2.749,27,0.93,29,1.22,31,1.446,32,1.22,34,0.63,35,0.039,36,1.105,37,0.611,38,0.57,39,1.446,41,2.467,44,1.22,47,1.22,49,1.519,50,1.877,56,0.845,58,0.63,59,0.845,61,1.22,62,0.93,65,2.013,66,2.013,69,0.875,74,1.111,75,0.462,77,0.845,78,1.029,79,0.283,80,0.514,81,0.93,170,0.766,171,1.375,172,1.375,173,0.932,174,1.804,175,0.932,176,0.932,177,0.57,178,1.375,179,0.63,180,0.932,181,0.63,182,0.932,183,1.104,184,1.657,185,0.57,186,0.932,187,0.57,188,0.932,189,0.63,190,0.845,191,0.932,192,0.932,193,0.932,194,0.021,195,0.021,214,1.247,228,2.951,251,1.141,255,1.257,289,1.938,292,0.932,295,1.141,299,2.121,301,2.013,305,1.519,307,1.938,316,2.627,321,1.029,323,2.398,326,1.131,339,1.888,341,1.684,350,4.08,358,1.805,359,3.656,361,1.519,363,1.888,364,2.231,389,1.684,451,1.804,457,1.519,459,1.519,487,2.21,496,1.804,515,1.877,519,1.877,538,1.272,539,1.272,544,1.272,547,1.272,548,1.272,590,1.625,591,3.311,592,2.786,594,1.272,595,1.888,616,2.108,617,2.108,618,1.877,619,2.108,620,2.108,623,2.786,625,1.888,628,1.272,629,1.141,633,1.429,634,1.429,638,2.108,639,1.625,641,1.888,642,1.888,643,1.625,648,3.088,729,3.899,730,2.287,731,3.375,732,3.375,733,4.429,734,2.287,735,2.287,736,3.375,737,3.375,738,2.287,739,2.287,740,2.287,741,3.375]],["title/interfaces/RequestData.html",[364,1.675,581,0.916]],["body/interfaces/RequestData.html",[3,0.536,4,0.462,9,0.391,11,0.696,23,0.536,24,0.832,26,3.313,35,0.038,37,0.641,47,1.582,69,0.957,79,0.536,194,0.032,195,0.032,255,0.975,364,2.882,581,1.576,582,2.164,648,3.721,742,3.58,743,5.743]],["title/interfaces/ResponseData.html",[581,0.916,624,1.881]],["body/interfaces/ResponseData.html",[3,0.493,4,0.425,9,0.36,11,0.641,23,0.493,24,0.791,26,3.248,35,0.038,37,0.69,69,0.968,79,0.493,194,0.03,195,0.03,255,0.897,286,1.958,299,2.226,358,1.797,581,1.498,582,1.992,597,4.734,624,3.078,648,3.649,744,3.295,745,6.028,746,5.583,747,4.068]],["title/interfaces/SignIn.html",[253,1.356,581,0.916]],["body/interfaces/SignIn.html",[3,0.539,4,0.465,9,0.394,11,0.701,23,0.539,24,0.835,35,0.038,37,0.643,47,1.586,69,0.958,79,0.539,194,0.032,195,0.032,253,2.342,255,0.981,286,1.999,326,1.463,581,1.582,582,2.178,748,3.603,749,3.727]],["title/interfaces/SignUp.html",[254,1.356,581,0.916]],["body/interfaces/SignUp.html",[3,0.508,4,0.438,9,0.371,11,0.66,23,0.508,24,0.806,35,0.039,37,0.67,38,1.442,47,1.621,69,0.973,79,0.508,194,0.031,195,0.031,254,2.259,255,0.924,286,1.972,326,1.378,327,2.051,581,1.526,582,2.051,749,3.675,750,3.394,751,4.857,752,4.471]],["title/components/SigninComponent.html",[0,0.426,185,0.751]],["body/components/SigninComponent.html",[0,0.717,1,0.612,2,1.22,3,0.274,4,0.237,5,0.904,6,0.904,7,0.904,8,0.904,9,0.2,11,0.53,16,0.904,17,2.204,18,1.813,19,1.345,21,1.345,23,0.274,24,0.53,27,0.91,29,1.203,31,1.434,32,1.203,34,0.612,35,0.039,36,1.086,37,0.605,38,0.553,39,1.532,40,1.486,41,2.44,44,1.203,47,1.491,51,1.836,56,0.82,58,0.612,59,0.82,61,1.203,62,0.91,65,1.998,66,2.094,69,0.882,74,1.139,75,0.449,77,0.82,78,0.999,79,0.274,80,0.499,81,1.086,170,0.744,171,1.345,172,1.345,173,0.904,174,1.778,175,0.904,176,0.904,177,0.553,178,1.345,179,0.612,180,0.904,181,0.612,182,0.904,183,0.553,184,0.675,185,1.088,186,0.904,187,0.553,188,0.904,189,0.612,190,0.82,191,0.904,192,0.904,193,0.904,194,0.02,195,0.02,248,1.108,251,1.967,253,2.1,255,1.234,286,1.697,289,1.922,292,0.904,295,1.108,299,1.963,301,1.992,305,0.999,307,1.922,316,1.235,321,0.999,326,1.863,331,1.578,339,1.87,341,1.648,351,4.037,358,1.774,361,1.486,366,1.833,370,3.603,371,2.726,430,3.697,432,2.727,451,1.778,457,1.486,459,1.486,487,2.178,496,1.778,515,1.836,519,2.192,532,1.578,537,3.102,538,1.235,539,1.235,543,1.833,544,1.235,547,1.235,548,1.235,566,1.578,567,1.578,570,1.833,572,1.578,594,1.235,616,2.063,617,2.063,618,1.836,619,2.063,620,2.063,621,2.346,628,1.235,629,1.108,633,1.387,634,1.387,638,2.063,749,3.055,753,1.833,754,3.942,755,3.302,756,2.22,757,2.726,758,2.22,759,2.22,760,2.22,761,2.22,762,3.302,763,3.302,764,1.833,765,1.833,766,1.833,767,1.833,768,2.726,769,2.22,770,1.833,771,2.22,772,1.833,773,1.833,774,2.22,775,3.302]],["title/components/SignupComponent.html",[0,0.426,187,0.751]],["body/components/SignupComponent.html",[0,0.702,1,0.573,2,1.161,3,0.257,4,0.221,5,0.847,6,0.847,7,0.847,8,0.847,9,0.188,11,0.505,16,0.847,17,2.168,18,1.784,19,1.28,21,1.28,23,0.257,24,0.505,27,0.866,29,1.164,31,1.467,32,1.25,34,0.573,35,0.039,36,1.044,37,0.631,38,1.053,39,1.51,40,1.415,41,2.381,44,1.164,47,1.543,50,1.748,51,1.748,56,0.768,58,0.573,59,0.768,61,1.315,62,1.044,65,1.966,66,2.068,69,0.914,74,1.114,75,0.42,77,0.768,78,0.936,79,0.257,80,0.467,81,1.044,170,0.697,171,1.28,172,1.28,173,0.847,174,1.721,175,0.847,176,0.847,177,0.518,178,1.28,179,0.573,180,0.847,181,0.573,182,0.847,183,0.518,184,1.379,185,0.518,186,0.847,187,1.053,188,0.847,189,0.573,190,0.768,191,0.847,192,0.847,193,0.847,194,0.019,195,0.019,248,1.037,251,1.891,254,2.042,255,1.114,286,1.66,289,1.884,292,0.847,295,1.037,299,1.83,301,1.943,305,0.936,307,1.884,316,1.156,321,0.936,326,1.837,327,2.735,331,1.477,339,1.83,341,1.568,353,3.938,358,2.042,361,1.415,386,1.716,389,1.568,430,3.625,432,2.639,451,1.943,457,1.415,459,1.415,487,2.108,496,1.943,515,1.748,518,1.716,519,2.107,532,1.477,537,3.001,538,1.156,539,1.156,544,1.156,547,1.156,548,1.156,566,1.477,567,1.477,572,1.477,594,1.156,616,1.963,617,1.963,618,1.748,619,2.639,620,1.963,628,1.156,629,1.037,633,1.299,634,1.299,638,1.963,639,1.477,692,2.594,749,2.98,751,3.938,752,1.716,757,2.594,764,1.716,765,1.716,766,1.716,767,1.716,768,2.594,770,1.716,772,1.716,773,1.716,776,1.716,777,3.143,778,3.79,779,3.143,780,2.079,781,2.079,782,3.143,783,2.079,784,2.079,785,2.079,786,2.079,787,3.143,788,3.143,789,1.716,790,3.143,791,2.079,792,2.079,793,3.143]],["title/components/WebSocketComponent.html",[0,0.426,189,0.83]],["body/components/WebSocketComponent.html",[0,0.806,1,0.813,2,1.494,3,0.365,4,0.314,5,1.201,6,1.201,7,1.201,8,1.201,9,0.266,11,0.65,14,2.25,15,2.884,16,1.201,17,2.345,18,1.93,19,1.648,21,1.648,23,0.365,24,0.65,27,1.115,28,3.104,29,1.272,32,1.272,34,0.813,35,0.039,36,1.272,37,0.571,38,0.735,39,1.482,40,1.821,44,1.115,45,2.527,56,1.494,58,0.813,59,1.494,61,1.115,62,0.813,65,1.494,69,0.836,74,0.91,75,0.596,79,0.365,80,0.663,81,0.813,82,1.201,170,0.988,171,1.648,172,1.648,173,1.201,174,2.024,175,1.201,176,1.201,177,0.735,178,1.648,179,0.813,180,1.201,181,0.813,182,1.201,183,0.735,184,0.897,185,0.735,186,1.201,187,0.735,188,1.201,189,1.369,190,2.072,191,1.881,192,1.201,193,1.201,194,0.025,195,0.025,239,3.531,255,0.91,289,1.835,299,1.494,301,1.648,307,1.494,339,2.034,341,2.019,349,2.435,361,2.656,362,4.091,451,1.648,457,1.821,459,1.821,496,1.648,594,1.64,621,2.875,628,1.64,794,4.102,795,2.435,796,4.969,797,4.618,798,4.046,799,2.95,800,2.95,801,4.046,802,2.95,803,2.95,804,2.95,805,2.95]],["title/coverage.html",[806,3.388]],["body/coverage.html",[0,0.831,1,0.997,9,0.327,10,2.988,31,0.997,35,0.038,37,0.447,77,1.337,155,5.125,177,0.902,179,0.997,181,0.997,183,0.902,185,0.902,187,0.902,189,0.997,194,0.029,195,0.029,210,1.806,211,2.013,225,2.261,228,2.261,239,2.571,253,1.629,254,1.629,259,2.082,261,2.988,296,2.571,298,2.988,339,1.337,340,2.988,364,2.013,389,1.806,394,3.193,401,2.571,415,2.988,454,2.261,581,1.694,583,2.988,589,2.988,590,3.292,622,4.599,624,2.261,683,2.988,716,2.988,729,2.988,742,2.988,744,2.988,748,2.988,750,2.988,753,2.988,776,2.988,794,2.988,795,2.988,806,2.988,807,2.988,808,3.619,809,3.619,810,5.571,811,4.634,812,5.389,813,5.389,814,3.619,815,3.619,816,3.619,817,2.988,818,5.571,819,2.988,820,2.988,821,2.988,822,2.988,823,3.619,824,3.619]],["title/dependencies.html",[199,2.261,825,2.079]],["body/dependencies.html",[35,0.038,72,2.639,75,0.907,194,0.033,195,0.033,199,2.803,219,4.366,231,3.705,248,2.24,321,2.02,826,4.488,827,6.107,828,4.488,829,4.488,830,4.488,831,4.488,832,4.488,833,4.488,834,4.488,835,4.488]],["title/index.html",[23,0.311,379,1.789,836,2.518]],["body/index.html",[4,0.434,13,3.306,35,0.031,51,2.264,72,2.031,89,4.452,90,4.117,190,1.503,194,0.031,195,0.031,214,1.503,432,3.369,461,3.994,747,3.36,807,4.452,837,4.071,838,4.071,839,4.071,840,4.071,841,3.36,842,4.071,843,3.36,844,4.071,845,4.071,846,4.988,847,5.621,848,4.071,849,4.071,850,4.071,851,4.071,852,4.071,853,4.071,854,4.071,855,4.071,856,4.071,857,5.945,858,4.071,859,4.071,860,5.621,861,4.117,862,4.071,863,4.071,864,4.071,865,4.071,866,5.393,867,4.071,868,4.988,869,4.071,870,4.071,871,4.988,872,4.071,873,4.071,874,4.071]],["title/modules.html",[198,2.282]],["body/modules.html",[35,0.034,72,2.38,194,0.034,195,0.034,197,2.38,198,2.652,209,2.652,875,4.769,876,4.769,877,5.48,878,4.769,879,4.769]],["title/overview.html",[880,3.388]],["body/overview.html",[1,1.627,2,1.454,35,0.038,170,1.32,177,1.325,179,1.464,181,1.464,183,1.325,185,1.325,187,1.325,189,1.464,194,0.03,195,0.03,196,2.46,197,3.133,198,2.19,199,2.46,200,3.251,201,3.251,202,3.251,203,2.798,204,3.251,205,3.251,206,3.251,207,3.251,208,3.251,209,2.955,210,2.652,211,2.955,212,4.034,213,2.798,214,1.454,247,2.19,260,2.46,582,1.965,880,3.251,881,3.938,882,3.938,883,3.938,884,4.887]],["title/properties.html",[24,0.581,825,2.079]],["body/properties.html",[24,0.777,35,0.036,194,0.034,195,0.034,843,3.992,885,4.836]],["title/routes.html",[247,2.282]],["body/routes.html",[35,0.034,194,0.034,195,0.034,247,2.708]],["title/miscellaneous/variables.html",[886,2.079,887,2.989]],["body/miscellaneous/variables.html",[9,0.464,18,1.567,23,0.454,35,0.039,37,0.692,61,1.576,62,1.542,63,2.921,68,2.041,77,1.727,194,0.029,195,0.029,214,1.356,252,3.03,253,2.316,254,2.316,255,1.218,289,1.727,301,1.495,304,2.608,327,1.832,346,4.247,347,4.247,362,3.322,379,2.608,394,3.784,401,3.322,416,3.03,424,4.247,461,3.849,789,4.619,817,3.03,819,3.03,820,3.03,821,3.03,822,3.03,841,3.03,861,3.03,886,3.03,887,3.03,888,3.671,889,3.671,890,3.671,891,3.671,892,3.671,893,4.676,894,3.671,895,3.671,896,3.671,897,3.671,898,4.676,899,5.146,900,3.671,901,3.671,902,3.671,903,3.671,904,3.671,905,3.671,906,3.671]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["0.0.1",{"_index":885,"title":{},"body":{"properties.html":{}}}],["0.04em",{"_index":671,"title":{},"body":{"components/GetDataComponent.html":{}}}],["0.13.0",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2em",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["0.44",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["0.45em",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["0.84",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["0.9em",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["000",{"_index":654,"title":{},"body":{"components/GetDataComponent.html":{}}}],["01t21:08:40.472z",{"_index":606,"title":{},"body":{"components/GetDataComponent.html":{}}}],["01t21:08:40.472z&#39",{"_index":612,"title":{},"body":{"components/GetDataComponent.html":{}}}],["08",{"_index":605,"title":{},"body":{"components/GetDataComponent.html":{}}}],["0px",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interceptors/BackendInterceptor.html":{}}}],["1):after",{"_index":676,"title":{},"body":{"components/GetDataComponent.html":{}}}],["1.45em",{"_index":682,"title":{},"body":{"components/GetDataComponent.html":{}}}],["1.9em",{"_index":670,"title":{},"body":{"components/GetDataComponent.html":{}}}],["1/1",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["100px",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":713,"title":{},"body":{"components/NavbarComponent.html":{}}}],["111",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["120",{"_index":662,"title":{},"body":{"components/GetDataComponent.html":{}}}],["15/15",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["16.0.2",{"_index":844,"title":{},"body":{"index.html":{}}}],["180",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["1px",{"_index":652,"title":{},"body":{"components/GetDataComponent.html":{}}}],["2",{"_index":881,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["2.5deg",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["2:38:40",{"_index":608,"title":{},"body":{"components/GetDataComponent.html":{}}}],["2s",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":883,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":661,"title":{},"body":{"components/GetDataComponent.html":{}}}],["360deg",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["39;8/2/2023",{"_index":613,"title":{},"body":{"components/GetDataComponent.html":{}}}],["39;hello",{"_index":490,"title":{},"body":{"injectables/CommonService.html":{}}}],["39;john",{"_index":483,"title":{},"body":{"injectables/CommonService.html":{}}}],["39;something",{"_index":467,"title":{},"body":{"injectables/CommonService.html":{}}}],["3d3d3d",{"_index":666,"title":{},"body":{"components/GetDataComponent.html":{}}}],["4/4",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":642,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["450",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["5",{"_index":884,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500px",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["50px",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["5px",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["6/6",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["7.15em",{"_index":678,"title":{},"body":{"components/GetDataComponent.html":{}}}],["7.8.0",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["768px",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":882,"title":{},"body":{"overview.html":{}}}],["8.5deg",{"_index":681,"title":{},"body":{"components/GetDataComponent.html":{}}}],["8/2/2023",{"_index":607,"title":{},"body":{"components/GetDataComponent.html":{}}}],["80px",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["9/10",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["9f9f9f",{"_index":667,"title":{},"body":{"components/GetDataComponent.html":{}}}],["a:not(:first",{"_index":711,"title":{},"body":{"components/NavbarComponent.html":{}}}],["absolute",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["access",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{}}}],["accessors",{"_index":428,"title":{},"body":{"injectables/CommonService.html":{}}}],["accesstoken",{"_index":768,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["activated",{"_index":276,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["activatedroutesnapshot",{"_index":270,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["actual_component",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["add",{"_index":303,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["additional",{"_index":439,"title":{},"body":{"injectables/CommonService.html":{}}}],["again",{"_index":577,"title":{},"body":{"injectables/CommonService.html":{}}}],["align",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["already",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["alternate",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["always",{"_index":853,"title":{},"body":{"index.html":{}}}],["am&#39",{"_index":614,"title":{},"body":{"components/GetDataComponent.html":{}}}],["am/pm",{"_index":602,"title":{},"body":{"components/GetDataComponent.html":{}}}],["angular",{"_index":841,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{}}}],["angular/compiler",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["anything",{"_index":460,"title":{},"body":{"injectables/CommonService.html":{}}}],["api",{"_index":301,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["apipathconstant",{"_index":401,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipathconstant.data",{"_index":411,"title":{},"body":{"injectables/BackendService.html":{}}}],["apipathconstant.signin",{"_index":407,"title":{},"body":{"injectables/BackendService.html":{}}}],["apipathconstant.signout",{"_index":410,"title":{},"body":{"injectables/BackendService.html":{}}}],["apipathconstant.signup",{"_index":408,"title":{},"body":{"injectables/BackendService.html":{}}}],["apis",{"_index":435,"title":{},"body":{"injectables/CommonService.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module.ts",{"_index":343,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["app.module.ts]{@link",{"_index":403,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconstant",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appconstant.appname",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["appconstant.authorizationheaderkey",{"_index":570,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{}}}],["appconstant.error",{"_index":548,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["appconstant.getdata",{"_index":640,"title":{},"body":{"components/GetDataComponent.html":{}}}],["appconstant.hidenotifcationafter",{"_index":728,"title":{},"body":{"components/NotificationComponent.html":{}}}],["appconstant.postdata",{"_index":741,"title":{},"body":{"components/PostDataComponent.html":{}}}],["appconstant.signin",{"_index":775,"title":{},"body":{"components/SigninComponent.html":{}}}],["appconstant.signout",{"_index":545,"title":{},"body":{"injectables/CommonService.html":{}}}],["appconstant.signup",{"_index":793,"title":{},"body":{"components/SignupComponent.html":{}}}],["appconstant.success",{"_index":544,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["application",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"index.html":{}}}],["appmodule",{"_index":197,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":209,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":626,"title":{},"body":{"components/GetDataComponent.html":{}}}],["article",{"_index":648,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{}}}],["assuming",{"_index":283,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["attaching",{"_index":332,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["auth",{"_index":262,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguard",{"_index":210,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authorization",{"_index":304,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"miscellaneous/variables.html":{}}}],["authorizationheaderkey",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":679,"title":{},"body":{"components/GetDataComponent.html":{}}}],["automatically",{"_index":863,"title":{},"body":{"index.html":{}}}],["available",{"_index":879,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":299,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"interfaces/ResponseData.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["backend.service",{"_index":516,"title":{},"body":{"injectables/CommonService.html":{}}}],["backendinterceptor",{"_index":211,"title":{"interceptors/BackendInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/BackendInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["backendservice",{"_index":339,"title":{"injectables/BackendService.html":{}},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{}}}],["backendservice#handlegetdata",{"_index":631,"title":{},"body":{"components/GetDataComponent.html":{}}}],["backendservice#handlegetwebsocketdata",{"_index":804,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["backendservice#handlepostdata",{"_index":737,"title":{},"body":{"components/PostDataComponent.html":{}}}],["backendservice#handlesignin",{"_index":763,"title":{},"body":{"components/SigninComponent.html":{}}}],["backendservice#handlesignout",{"_index":528,"title":{},"body":{"injectables/CommonService.html":{}}}],["backendservice#handlesignup",{"_index":788,"title":{},"body":{"components/SignupComponent.html":{}}}],["backendservice]{@link",{"_index":536,"title":{},"body":{"injectables/CommonService.html":{}}}],["backendurl",{"_index":346,"title":{},"body":{"injectables/BackendService.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["bar",{"_index":685,"title":{},"body":{"components/NavbarComponent.html":{}}}],["base",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["base64",{"_index":554,"title":{},"body":{"injectables/CommonService.html":{}}}],["based",{"_index":619,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["basic",{"_index":849,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":337,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["behaviorsubject",{"_index":492,"title":{},"body":{"injectables/CommonService.html":{}}}],["behaviorsubject(false",{"_index":493,"title":{},"body":{"injectables/CommonService.html":{}}}],["better",{"_index":855,"title":{},"body":{"index.html":{}}}],["bezier(0.165",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["black",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["blur(0.5px",{"_index":673,"title":{},"body":{"components/GetDataComponent.html":{}}}],["body",{"_index":373,"title":{},"body":{"injectables/BackendService.html":{}}}],["boolean",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["bootstrap",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":651,"title":{},"body":{"components/GetDataComponent.html":{}}}],["box",{"_index":650,"title":{},"body":{"components/GetDataComponent.html":{}}}],["browse",{"_index":877,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CommonService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":871,"title":{},"body":{"index.html":{}}}],["building",{"_index":870,"title":{},"body":{"index.html":{}}}],["button",{"_index":692,"title":{},"body":{"components/NavbarComponent.html":{},"components/SignupComponent.html":{}}}],["call",{"_index":307,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["calling",{"_index":535,"title":{},"body":{"injectables/CommonService.html":{}}}],["calls",{"_index":302,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{}}}],["canactivate",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{}}}],["canactivate(route",{"_index":269,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["case",{"_index":375,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["catch",{"_index":560,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["center",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["certain",{"_index":726,"title":{},"body":{"components/NotificationComponent.html":{}}}],["chain",{"_index":318,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["change",{"_index":865,"title":{},"body":{"index.html":{}}}],["check",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["checkisloggedin",{"_index":689,"title":{},"body":{"components/NavbarComponent.html":{}}}],["checksavedcredentials",{"_index":421,"title":{},"body":{"injectables/CommonService.html":{}}}],["child",{"_index":712,"title":{},"body":{"components/NavbarComponent.html":{}}}],["child(2n",{"_index":675,"title":{},"body":{"components/GetDataComponent.html":{}}}],["child(2n):after",{"_index":680,"title":{},"body":{"components/GetDataComponent.html":{}}}],["class",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["clear",{"_index":470,"title":{},"body":{"injectables/CommonService.html":{}}}],["cli",{"_index":842,"title":{},"body":{"index.html":{}}}],["click",{"_index":782,"title":{},"body":{"components/SignupComponent.html":{}}}],["click)=\"handlesignout",{"_index":709,"title":{},"body":{"components/NavbarComponent.html":{}}}],["clicks",{"_index":695,"title":{},"body":{"components/NavbarComponent.html":{}}}],["clip",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["closed",{"_index":575,"title":{},"body":{"injectables/CommonService.html":{}}}],["cluster_appmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["column",{"_index":658,"title":{},"body":{"components/GetDataComponent.html":{}}}],["comes",{"_index":745,"title":{},"body":{"interfaces/ResponseData.html":{}}}],["common",{"_index":416,"title":{},"body":{"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["common.service",{"_index":280,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{}}}],["commonservice",{"_index":31,"title":{"injectables/CommonService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["commonservice#handlesignout",{"_index":699,"title":{},"body":{"components/NavbarComponent.html":{}}}],["commonservice#loadersubject",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["commonservice#loggedinusersubject",{"_index":282,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NavbarComponent.html":{}}}],["commonservice#notificationsubject",{"_index":723,"title":{},"body":{"components/NotificationComponent.html":{}}}],["commonservice#token",{"_index":764,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["commonservice#username",{"_index":765,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["commonservice]{@link",{"_index":518,"title":{},"body":{"injectables/CommonService.html":{},"components/SignupComponent.html":{}}}],["compdoc",{"_index":867,"title":{},"body":{"index.html":{}}}],["completed",{"_index":617,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"overview.html":{}}}],["components/get",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.component",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["components/notification/notification.component",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["components/post",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/signin/signin.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/signup/signup.component",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/web",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":801,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["connected",{"_index":796,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["console",{"_index":459,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["console.log(message",{"_index":580,"title":{},"body":{"injectables/CommonService.html":{}}}],["const",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["constant",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constants",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["constructor(backendservice",{"_index":594,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["constructor(commonservice",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{}}}],["constructor(httpclient",{"_index":354,"title":{},"body":{"injectables/BackendService.html":{}}}],["constructor(private",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["constructor(router",{"_index":429,"title":{},"body":{"injectables/CommonService.html":{}}}],["contains",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["content",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["coverage",{"_index":806,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":777,"title":{},"body":{"components/SignupComponent.html":{}}}],["created",{"_index":747,"title":{},"body":{"interfaces/ResponseData.html":{},"index.html":{}}}],["createdat",{"_index":746,"title":{},"body":{"interfaces/ResponseData.html":{}}}],["creates",{"_index":388,"title":{},"body":{"injectables/BackendService.html":{}}}],["creating",{"_index":766,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["cubic",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["current",{"_index":393,"title":{},"body":{"injectables/BackendService.html":{}}}],["data",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["data'},{'name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["data.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["data.component.css",{"_index":591,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.html",{"_index":592,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.ts",{"_index":590,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"coverage.html":{}}}],["data.component.ts:16",{"_index":595,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.ts:32",{"_index":625,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["data.component.ts:39",{"_index":734,"title":{},"body":{"components/PostDataComponent.html":{}}}],["data.component.ts:40",{"_index":615,"title":{},"body":{"components/GetDataComponent.html":{}}}],["data.component.ts:47",{"_index":730,"title":{},"body":{"components/PostDataComponent.html":{}}}],["data.component.ts:80",{"_index":598,"title":{},"body":{"components/GetDataComponent.html":{}}}],["data/get",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"coverage.html":{}}}],["data/post",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PostDataComponent.html":{},"coverage.html":{}}}],["data]{@link",{"_index":632,"title":{},"body":{"components/GetDataComponent.html":{}}}],["date",{"_index":597,"title":{},"body":{"components/GetDataComponent.html":{},"interfaces/ResponseData.html":{}}}],["date(date).tolocalestring",{"_index":644,"title":{},"body":{"components/GetDataComponent.html":{}}}],["dd/mm/yyyy",{"_index":600,"title":{},"body":{"components/GetDataComponent.html":{}}}],["declarations",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":444,"title":{},"body":{"injectables/CommonService.html":{}}}],["decoded",{"_index":450,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{}}}],["decodedjwt",{"_index":454,"title":{"interfaces/DecodedJWT.html":{}},"body":{"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"coverage.html":{}}}],["decodedpayload",{"_index":558,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodedtoken",{"_index":572,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["decodedtoken.username",{"_index":574,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodedtoken?.username",{"_index":773,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["decodetoken",{"_index":422,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodetoken(jwt",{"_index":452,"title":{},"body":{"injectables/CommonService.html":{}}}],["decodetoken(token",{"_index":447,"title":{},"body":{"injectables/CommonService.html":{}}}],["decoding",{"_index":446,"title":{},"body":{"injectables/CommonService.html":{}}}],["default",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["dependencies",{"_index":199,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["development",{"_index":861,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":433,"title":{},"body":{"injectables/CommonService.html":{}}}],["direct",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["direction",{"_index":657,"title":{},"body":{"components/GetDataComponent.html":{}}}],["directive",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["directives",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["display",{"_index":655,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["dist",{"_index":872,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":807,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":852,"title":{},"body":{"index.html":{}}}],["doe",{"_index":479,"title":{},"body":{"injectables/CommonService.html":{}}}],["doe&#39",{"_index":484,"title":{},"body":{"injectables/CommonService.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["dynamic",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["email",{"_index":751,"title":{},"body":{"interfaces/SignUp.html":{},"components/SignupComponent.html":{}}}],["emphasis",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["empty",{"_index":451,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["environment",{"_index":394,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.backendurl",{"_index":390,"title":{},"body":{"injectables/BackendService.html":{}}}],["environment.production",{"_index":579,"title":{},"body":{"injectables/CommonService.html":{}}}],["error",{"_index":289,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["error.error?.message",{"_index":547,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["error?.status",{"_index":641,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["example",{"_index":453,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["existing",{"_index":370,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["exp",{"_index":550,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{}}}],["expiration",{"_index":585,"title":{},"body":{"interfaces/DecodedJWT.html":{}}}],["expired",{"_index":623,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{}}}],["export",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["exports",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extracted",{"_index":588,"title":{},"body":{"interfaces/DecodedJWT.html":{}}}],["f35626",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["feab3a",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":866,"title":{},"body":{"index.html":{}}}],["fill",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["finalize",{"_index":515,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["flex",{"_index":656,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["folder",{"_index":873,"title":{},"body":{"index.html":{}}}],["font",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["form",{"_index":359,"title":{},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["format",{"_index":599,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate",{"_index":593,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate(&#39;2023",{"_index":611,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate('2023",{"_index":604,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate(date",{"_index":596,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatdate(item.createdat",{"_index":646,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formatted",{"_index":609,"title":{},"body":{"components/GetDataComponent.html":{}}}],["formsmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["g",{"_index":556,"title":{},"body":{"injectables/CommonService.html":{}}}],["generated",{"_index":840,"title":{},"body":{"index.html":{}}}],["generating",{"_index":868,"title":{},"body":{"index.html":{}}}],["getdata",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getdatacomponent",{"_index":177,"title":{"components/GetDataComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["getting",{"_index":379,"title":{"index.html":{}},"body":{"injectables/BackendService.html":{},"miscellaneous/variables.html":{}}}],["gettoken",{"_index":507,"title":{},"body":{"injectables/CommonService.html":{}}}],["getusername",{"_index":511,"title":{},"body":{"injectables/CommonService.html":{}}}],["gradient(90deg",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["graph",{"_index":878,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":263,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handle",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/PostDataComponent.html":{},"components/SignupComponent.html":{}}}],["handlegetdata",{"_index":348,"title":{},"body":{"injectables/BackendService.html":{},"components/GetDataComponent.html":{}}}],["handlegetdata]{@link",{"_index":630,"title":{},"body":{"components/GetDataComponent.html":{}}}],["handlegetwebsocketdata",{"_index":349,"title":{},"body":{"injectables/BackendService.html":{},"components/WebSocketComponent.html":{}}}],["handlegetwebsocketdata]{@link",{"_index":803,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["handlepostdata",{"_index":350,"title":{},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["handlepostdata(data",{"_index":363,"title":{},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["handlepostdata]{@link",{"_index":736,"title":{},"body":{"components/PostDataComponent.html":{}}}],["handler",{"_index":317,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["handlesignin",{"_index":351,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["handlesignin(data",{"_index":366,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["handlesignin]{@link",{"_index":762,"title":{},"body":{"components/SigninComponent.html":{}}}],["handlesignout",{"_index":352,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["handlesignout]{@link",{"_index":527,"title":{},"body":{"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["handlesignup",{"_index":353,"title":{},"body":{"injectables/BackendService.html":{},"components/SignupComponent.html":{}}}],["handlesignup(data",{"_index":386,"title":{},"body":{"injectables/BackendService.html":{},"components/SignupComponent.html":{}}}],["handlesignup]{@link",{"_index":787,"title":{},"body":{"components/SignupComponent.html":{}}}],["happened",{"_index":464,"title":{},"body":{"injectables/CommonService.html":{}}}],["happened.&#39",{"_index":468,"title":{},"body":{"injectables/CommonService.html":{}}}],["header",{"_index":376,"title":{},"body":{"injectables/BackendService.html":{}}}],["headers",{"_index":306,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["height",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["hello",{"_index":413,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["here",{"_index":757,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["hh:mm:ss",{"_index":601,"title":{},"body":{"components/GetDataComponent.html":{}}}],["hide",{"_index":618,"title":{},"body":{"components/GetDataComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["hidenotifcationafter",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highlight",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["highlight:after",{"_index":663,"title":{},"body":{"components/GetDataComponent.html":{}}}],["highlight:before",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["highlight:nth",{"_index":674,"title":{},"body":{"components/GetDataComponent.html":{}}}],["home",{"_index":704,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["http://127.0.0.1:5500/frontend/documentation/index.html",{"_index":869,"title":{},"body":{"index.html":{}}}],["http://:3000/api",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000/api",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":862,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":355,"title":{},"body":{"injectables/BackendService.html":{}}}],["httpclientmodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":319,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httphandler",{"_index":313,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httpinterceptor",{"_index":320,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httprequest",{"_index":312,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["httpresponse",{"_index":396,"title":{},"body":{"injectables/BackendService.html":{}}}],["hue",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["i.e",{"_index":277,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["iat",{"_index":551,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{}}}],["identifier",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interceptors/BackendInterceptor.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["import",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["important",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["imports",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["initialize",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["initialized",{"_index":496,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["injectable",{"_index":259,"title":{"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"coverage.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"overview.html":{}}}],["injected",{"_index":342,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["intercept",{"_index":300,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["intercept(request",{"_index":311,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["interceptor",{"_index":296,"title":{"interceptors/BackendInterceptor.html":{}},"body":{"interceptors/BackendInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":297,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["interface",{"_index":581,"title":{"interfaces/DecodedJWT.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{}},"body":{"interfaces/DecodedJWT.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"coverage.html":{}}}],["interfaces",{"_index":582,"title":{},"body":{"interfaces/DecodedJWT.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"overview.html":{}}}],["introduction",{"_index":838,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":603,"title":{},"body":{"components/GetDataComponent.html":{}}}],["issue",{"_index":587,"title":{},"body":{"interfaces/DecodedJWT.html":{}}}],["item.article",{"_index":649,"title":{},"body":{"components/GetDataComponent.html":{}}}],["item.title",{"_index":647,"title":{},"body":{"components/GetDataComponent.html":{}}}],["item.username",{"_index":645,"title":{},"body":{"components/GetDataComponent.html":{}}}],["items",{"_index":659,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["john",{"_index":480,"title":{},"body":{"injectables/CommonService.html":{}}}],["json.parse(atob(base64",{"_index":559,"title":{},"body":{"injectables/CommonService.html":{}}}],["justify",{"_index":660,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["jwt",{"_index":449,"title":{},"body":{"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{}}}],["jwtpayload",{"_index":552,"title":{},"body":{"injectables/CommonService.html":{}}}],["jwtpayload.replace",{"_index":555,"title":{},"body":{"injectables/CommonService.html":{}}}],["keyframes",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["left",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["legend",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"overview.html":{}}}],["linear",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["loader",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["loaderstate",{"_index":473,"title":{},"body":{"injectables/CommonService.html":{}}}],["loaderstatus",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["loaderstatus]{@link",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["loadersubject",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["loadersubject]{@link",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["loading",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["log",{"_index":457,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["logged",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{}}}],["loggedinuser",{"_index":293,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["loggedinuser.charat(0).touppercase",{"_index":702,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loggedinuser.length",{"_index":294,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NavbarComponent.html":{}}}],["loggedinuser.slice(1",{"_index":703,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loggedinusersubject",{"_index":267,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["loggedinusersubject.subscribe((loggedinuser",{"_index":500,"title":{},"body":{"injectables/CommonService.html":{}}}],["loggedinusersubject]{@link",{"_index":281,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["logger",{"_index":423,"title":{},"body":{"injectables/CommonService.html":{}}}],["logger(`something",{"_index":463,"title":{},"body":{"injectables/CommonService.html":{}}}],["logger(message",{"_index":455,"title":{},"body":{"injectables/CommonService.html":{}}}],["logger(something",{"_index":466,"title":{},"body":{"injectables/CommonService.html":{}}}],["logging",{"_index":290,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["make",{"_index":341,"title":{},"body":{"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["making",{"_index":345,"title":{},"body":{"injectables/BackendService.html":{}}}],["margin",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["match",{"_index":442,"title":{},"body":{"injectables/CommonService.html":{}}}],["matches",{"_index":441,"title":{},"body":{"injectables/CommonService.html":{}}}],["matching",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["mean",{"_index":285,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["media",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":361,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["message]{@link",{"_index":805,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["messages",{"_index":458,"title":{},"body":{"injectables/CommonService.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["method",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["min",{"_index":668,"title":{},"body":{"components/GetDataComponent.html":{}}}],["miscellaneous",{"_index":886,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":462,"title":{},"body":{"injectables/CommonService.html":{}}}],["models/decodedjwt.model",{"_index":517,"title":{},"body":{"injectables/CommonService.html":{}}}],["models/requestdata.model",{"_index":400,"title":{},"body":{"injectables/BackendService.html":{}}}],["models/signin.model",{"_index":398,"title":{},"body":{"injectables/BackendService.html":{}}}],["models/signup.model",{"_index":399,"title":{},"body":{"injectables/BackendService.html":{}}}],["modification",{"_index":325,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["module",{"_index":196,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":198,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["nav",{"_index":710,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":686,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["navbar.component.css",{"_index":687,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":688,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":179,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":432,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["navigation",{"_index":684,"title":{},"body":{"components/NavbarComponent.html":{}}}],["need",{"_index":328,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["needed",{"_index":733,"title":{},"body":{"components/PostDataComponent.html":{}}}],["new",{"_index":389,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["next",{"_index":292,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["next.handle",{"_index":334,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["next.handle(request",{"_index":322,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["ng",{"_index":858,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["node",{"_index":846,"title":{},"body":{"index.html":{}}}],["normally",{"_index":372,"title":{},"body":{"injectables/BackendService.html":{}}}],["notification",{"_index":487,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["notification'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["notification.component.css",{"_index":717,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification.component.html",{"_index":718,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notificationcomponent",{"_index":181,"title":{"components/NotificationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsubject",{"_index":420,"title":{},"body":{"injectables/CommonService.html":{},"components/NotificationComponent.html":{}}}],["notificationsubject.subscribe((notification",{"_index":504,"title":{},"body":{"injectables/CommonService.html":{}}}],["notificationsubject]{@link",{"_index":521,"title":{},"body":{"injectables/CommonService.html":{},"components/NotificationComponent.html":{}}}],["npm",{"_index":860,"title":{},"body":{"index.html":{}}}],["number",{"_index":584,"title":{},"body":{"interfaces/DecodedJWT.html":{}}}],["object",{"_index":789,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":268,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["observables",{"_index":418,"title":{},"body":{"injectables/CommonService.html":{}}}],["observe",{"_index":383,"title":{},"body":{"injectables/BackendService.html":{}}}],["occurs",{"_index":445,"title":{},"body":{"injectables/CommonService.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/WebSocketComponent.html":{}}}],["opened",{"_index":576,"title":{},"body":{"injectables/CommonService.html":{}}}],["option",{"_index":384,"title":{},"body":{"injectables/BackendService.html":{}}}],["optional",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["out",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":880,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":825,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["page",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["pages",{"_index":434,"title":{},"body":{"injectables/CommonService.html":{}}}],["param",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["parameter",{"_index":474,"title":{},"body":{"injectables/CommonService.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["password",{"_index":749,"title":{},"body":{"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["path",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["picked",{"_index":392,"title":{},"body":{"injectables/BackendService.html":{}}}],["pipe",{"_index":539,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["pointer",{"_index":708,"title":{},"body":{"components/NavbarComponent.html":{}}}],["position",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["post",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["postdata",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postdatacomponent",{"_index":183,"title":{"components/PostDataComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["posting",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["present",{"_index":438,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["private",{"_index":519,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["production",{"_index":461,"title":{},"body":{"injectables/CommonService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":616,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["project",{"_index":839,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"properties.html":{}}}],["protect",{"_index":265,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["provide",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":743,"title":{},"body":{"interfaces/RequestData.html":{}}}],["providedin",{"_index":404,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["providers",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["received",{"_index":621,"title":{},"body":{"components/GetDataComponent.html":{},"components/SigninComponent.html":{},"components/WebSocketComponent.html":{}}}],["redirectto",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refresh",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["refreshed",{"_index":578,"title":{},"body":{"injectables/CommonService.html":{}}}],["relative",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["reload",{"_index":864,"title":{},"body":{"index.html":{}}}],["replace(/_/g",{"_index":557,"title":{},"body":{"injectables/CommonService.html":{}}}],["request",{"_index":315,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["request.clone",{"_index":335,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["request.url.includes('signin",{"_index":329,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["request.url.includes('signup",{"_index":330,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["requestdata",{"_index":364,"title":{"interfaces/RequestData.html":{}},"body":{"injectables/BackendService.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"coverage.html":{}}}],["requests",{"_index":333,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["required",{"_index":378,"title":{},"body":{"injectables/BackendService.html":{}}}],["reset",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"components/GetDataComponent.html":{},"overview.html":{}}}],["resetting",{"_index":529,"title":{},"body":{"injectables/CommonService.html":{}}}],["response",{"_index":358,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"interfaces/ResponseData.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["response.data",{"_index":637,"title":{},"body":{"components/GetDataComponent.html":{}}}],["response.headers.get",{"_index":769,"title":{},"body":{"components/SigninComponent.html":{}}}],["response.headers.get('authorization",{"_index":791,"title":{},"body":{"components/SignupComponent.html":{}}}],["response?.body?.message",{"_index":543,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{}}}],["response?.message",{"_index":639,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SignupComponent.html":{}}}],["responsedata",{"_index":624,"title":{"interfaces/ResponseData.html":{}},"body":{"components/GetDataComponent.html":{},"interfaces/ResponseData.html":{},"coverage.html":{}}}],["results",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retro",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["return",{"_index":274,"title":{},"body":{"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["returned",{"_index":374,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["returning",{"_index":279,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["returns",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["reverse",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":672,"title":{},"body":{"components/GetDataComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["root'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["rotate",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["rotate(0deg",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["rotate(1.8deg",{"_index":677,"title":{},"body":{"components/GetDataComponent.html":{}}}],["rotate(8.5deg",{"_index":669,"title":{},"body":{"components/GetDataComponent.html":{}}}],["route",{"_index":275,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["router",{"_index":430,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["routerlink",{"_index":701,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"'/get",{"_index":705,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"'/post",{"_index":706,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"\\'/get",{"_index":714,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlink]=\"\\'/post",{"_index":715,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routermodule",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":272,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["routes",{"_index":247,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":857,"title":{},"body":{"index.html":{}}}],["running",{"_index":856,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":321,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"dependencies.html":{}}}],["screen",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["security",{"_index":440,"title":{},"body":{"injectables/CommonService.html":{}}}],["see",{"_index":874,"title":{},"body":{"index.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["send",{"_index":323,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/PostDataComponent.html":{}}}],["sending",{"_index":731,"title":{},"body":{"components/PostDataComponent.html":{}}}],["sennd",{"_index":732,"title":{},"body":{"components/PostDataComponent.html":{}}}],["sent",{"_index":316,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["serve",{"_index":859,"title":{},"body":{"index.html":{}}}],["server",{"_index":847,"title":{},"body":{"index.html":{}}}],["serves",{"_index":845,"title":{},"body":{"index.html":{}}}],["service",{"_index":264,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["services/auth.guard",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["services/backend.interceptor",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["services/common.service",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["session",{"_index":309,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{}}}],["sessionstorage.getitem",{"_index":569,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.getitem('username",{"_index":565,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.getitem(appconstant.authorizationheaderkey",{"_index":526,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.removeitem('username",{"_index":534,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.removeitem(appconstant.authorizationheaderkey",{"_index":533,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.setitem('username",{"_index":564,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorage.setitem(appconstant.authorizationheaderkey",{"_index":525,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstoragetoken",{"_index":568,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessionstorageusername",{"_index":571,"title":{},"body":{"injectables/CommonService.html":{}}}],["set",{"_index":380,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["setheaders",{"_index":336,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["settimeout",{"_index":727,"title":{},"body":{"components/NotificationComponent.html":{}}}],["setting",{"_index":382,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["settings",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["settoken(token",{"_index":509,"title":{},"body":{"injectables/CommonService.html":{}}}],["setusername(username",{"_index":513,"title":{},"body":{"injectables/CommonService.html":{}}}],["shadow",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["shared",{"_index":417,"title":{},"body":{"injectables/CommonService.html":{}}}],["show",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["shown",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NotificationComponent.html":{}}}],["sign",{"_index":326,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["signed",{"_index":437,"title":{},"body":{"injectables/CommonService.html":{}}}],["signin",{"_index":253,"title":{"interfaces/SignIn.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"interfaces/SignIn.html":{},"components/SigninComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signin'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["signin.component.css",{"_index":754,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin.component.html",{"_index":755,"title":{},"body":{"components/SigninComponent.html":{}}}],["signincomponent",{"_index":185,"title":{"components/SigninComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signing",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signout",{"_index":424,"title":{},"body":{"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["signout]{@link",{"_index":549,"title":{},"body":{"injectables/CommonService.html":{}}}],["signs",{"_index":369,"title":{},"body":{"injectables/BackendService.html":{}}}],["signup",{"_index":254,"title":{"interfaces/SignUp.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/BackendService.html":{},"interfaces/SignUp.html":{},"components/SignupComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["signup'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["signup.component.css",{"_index":778,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":779,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupcomponent",{"_index":187,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["single",{"_index":850,"title":{},"body":{"index.html":{}}}],["size",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["socket",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["socket.component",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["socket.component.css",{"_index":797,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.html",{"_index":798,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.ts",{"_index":795,"title":{},"body":{"components/WebSocketComponent.html":{},"coverage.html":{}}}],["socket.component.ts:11",{"_index":799,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.ts:23",{"_index":802,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket.component.ts:30",{"_index":800,"title":{},"body":{"components/WebSocketComponent.html":{}}}],["socket/web",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/WebSocketComponent.html":{},"coverage.html":{}}}],["solid",{"_index":653,"title":{},"body":{"components/GetDataComponent.html":{}}}],["something",{"_index":465,"title":{},"body":{"injectables/CommonService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"index.html":{}}}],["span",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["src/.../apipath.constant.ts",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.constant.ts",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.production.ts",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/get",{"_index":589,"title":{},"body":{"components/GetDataComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":683,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:12",{"_index":690,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:23",{"_index":697,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":696,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:35",{"_index":694,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:44",{"_index":691,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/notification/notification.component.ts",{"_index":716,"title":{},"body":{"components/NotificationComponent.html":{},"coverage.html":{}}}],["src/app/components/notification/notification.component.ts:13",{"_index":719,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:25",{"_index":722,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:30",{"_index":720,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/post",{"_index":729,"title":{},"body":{"components/PostDataComponent.html":{},"coverage.html":{}}}],["src/app/components/signin/signin.component.ts",{"_index":753,"title":{},"body":{"components/SigninComponent.html":{},"coverage.html":{}}}],["src/app/components/signin/signin.component.ts:17",{"_index":756,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signin/signin.component.ts:35",{"_index":760,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signin/signin.component.ts:42",{"_index":759,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signin/signin.component.ts:51",{"_index":758,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/components/signup/signup.component.ts",{"_index":776,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/components/signup/signup.component.ts:17",{"_index":780,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:35",{"_index":785,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:42",{"_index":784,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:50",{"_index":783,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:59",{"_index":781,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/web",{"_index":794,"title":{},"body":{"components/WebSocketComponent.html":{},"coverage.html":{}}}],["src/app/models/decodedjwt.model.ts",{"_index":583,"title":{},"body":{"interfaces/DecodedJWT.html":{},"coverage.html":{}}}],["src/app/models/requestdata.model",{"_index":735,"title":{},"body":{"components/PostDataComponent.html":{}}}],["src/app/models/requestdata.model.ts",{"_index":742,"title":{},"body":{"interfaces/RequestData.html":{},"coverage.html":{}}}],["src/app/models/responsedata.model",{"_index":627,"title":{},"body":{"components/GetDataComponent.html":{}}}],["src/app/models/responsedata.model.ts",{"_index":744,"title":{},"body":{"interfaces/ResponseData.html":{},"coverage.html":{}}}],["src/app/models/signin.model",{"_index":761,"title":{},"body":{"components/SigninComponent.html":{}}}],["src/app/models/signin.model.ts",{"_index":748,"title":{},"body":{"interfaces/SignIn.html":{},"coverage.html":{}}}],["src/app/models/signup.model",{"_index":786,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/models/signup.model.ts",{"_index":750,"title":{},"body":{"interfaces/SignUp.html":{},"coverage.html":{}}}],["src/app/services/auth.guard.ts",{"_index":261,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/services/auth.guard.ts:10",{"_index":266,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/services/auth.guard.ts:24",{"_index":273,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/services/backend.interceptor.ts",{"_index":298,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"coverage.html":{}}}],["src/app/services/backend.interceptor.ts:15",{"_index":308,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["src/app/services/backend.interceptor.ts:27",{"_index":314,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["src/app/services/backend.service",{"_index":628,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["src/app/services/backend.service.ts",{"_index":340,"title":{},"body":{"injectables/BackendService.html":{},"coverage.html":{}}}],["src/app/services/backend.service.ts:16",{"_index":356,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:27",{"_index":391,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:33",{"_index":395,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:40",{"_index":367,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:55",{"_index":387,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:69",{"_index":385,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:79",{"_index":357,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:87",{"_index":365,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/backend.service.ts:94",{"_index":360,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/app/services/common.service",{"_index":629,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["src/app/services/common.service.ts",{"_index":415,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/app/services/common.service.ts:107",{"_index":508,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:114",{"_index":469,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:15",{"_index":431,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:159",{"_index":448,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:196",{"_index":514,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:205",{"_index":512,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:214",{"_index":436,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:257",{"_index":456,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:27",{"_index":494,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:31",{"_index":498,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:39",{"_index":472,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:51",{"_index":503,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:57",{"_index":506,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:65",{"_index":486,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:77",{"_index":499,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:83",{"_index":502,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:91",{"_index":477,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/services/common.service.ts:99",{"_index":510,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/constants/apipath.constant",{"_index":402,"title":{},"body":{"injectables/BackendService.html":{}}}],["src/constants/apipath.constant.ts",{"_index":817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/app.constant",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["src/constants/app.constant.ts",{"_index":819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment",{"_index":397,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["src/environments/environment.development.ts",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.production.ts",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":836,"title":{"index.html":{}},"body":{}}],["state",{"_index":271,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["statements",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["storage",{"_index":310,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/CommonService.html":{}}}],["stored",{"_index":287,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["string",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["strive",{"_index":854,"title":{},"body":{"index.html":{}}}],["style=\"cursor",{"_index":707,"title":{},"body":{"components/NavbarComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["subject",{"_index":495,"title":{},"body":{"injectables/CommonService.html":{}}}],["subscribe",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["subscribes",{"_index":620,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribing",{"_index":284,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["success",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successful",{"_index":537,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["support",{"_index":875,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":876,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{}}}],["table",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["test",{"_index":851,"title":{},"body":{"index.html":{}}}],["text",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["therefore",{"_index":381,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["this.article",{"_index":739,"title":{},"body":{"components/PostDataComponent.html":{}}}],["this.backendservice",{"_index":538,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.backendurl",{"_index":406,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.checkisloggedin",{"_index":698,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.commonservice.checksavedcredentials",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["this.commonservice.decodetoken(accesstoken",{"_index":770,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.loadersubject$.subscribe((loaderstatus",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["this.commonservice.loggedinusersubject.subscribe",{"_index":291,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NavbarComponent.html":{}}}],["this.commonservice.logger(decodedtoken",{"_index":771,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.commonservice.logger(error",{"_index":295,"title":{},"body":{"injectables/AuthGuard.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.logger(response",{"_index":740,"title":{},"body":{"components/PostDataComponent.html":{}}}],["this.commonservice.logger(response.data",{"_index":635,"title":{},"body":{"components/GetDataComponent.html":{}}}],["this.commonservice.notificationsubject$.subscribe((notification",{"_index":724,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.commonservice.signout",{"_index":643,"title":{},"body":{"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{}}}],["this.commonservice.token",{"_index":331,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.updateloadersubject(false",{"_index":634,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.updateloadersubject(true",{"_index":633,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.updatenotificationsubject",{"_index":638,"title":{},"body":{"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.commonservice.username",{"_index":772,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.data",{"_index":636,"title":{},"body":{"components/GetDataComponent.html":{}}}],["this.decodetoken",{"_index":573,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.email",{"_index":790,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.httpclient.get(this.backendurl",{"_index":409,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.httpclient.post",{"_index":405,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.httpclient.post(this.backendurl",{"_index":412,"title":{},"body":{"injectables/BackendService.html":{}}}],["this.loaderstatus",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadersubject.asobservable",{"_index":497,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.loadersubject.next(loaderstate",{"_index":520,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.loggedinuser",{"_index":700,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loggedinusersubject.asobservable",{"_index":501,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.loggedinusersubject.next(loggedinuser",{"_index":523,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.logger(error",{"_index":546,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.notification",{"_index":725,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.notificationsubject.asobservable",{"_index":505,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.notificationsubject.next(notification",{"_index":522,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.password",{"_index":767,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this.router.navigate(['/get",{"_index":774,"title":{},"body":{"components/SigninComponent.html":{}}}],["this.router.navigate(['/post",{"_index":792,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.router.navigate(['/signin",{"_index":541,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.signout",{"_index":561,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.title",{"_index":738,"title":{},"body":{"components/PostDataComponent.html":{}}}],["this.token",{"_index":531,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updateloadersubject(false",{"_index":540,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updateloadersubject(true",{"_index":530,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updateloggedinusersubject(username",{"_index":563,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.updatenotificationsubject",{"_index":542,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.username",{"_index":532,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["throughout",{"_index":419,"title":{},"body":{"injectables/CommonService.html":{}}}],["time",{"_index":586,"title":{},"body":{"interfaces/DecodedJWT.html":{},"components/NotificationComponent.html":{}}}],["title",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{}}}],["token",{"_index":305,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["token(token",{"_index":524,"title":{},"body":{"injectables/CommonService.html":{}}}],["token.split",{"_index":338,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["token.split('.')[1",{"_index":553,"title":{},"body":{"injectables/CommonService.html":{}}}],["token]{@link",{"_index":566,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["top",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["transform",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["transparent",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["true",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":443,"title":{},"body":{"injectables/CommonService.html":{},"components/GetDataComponent.html":{}}}],["trying",{"_index":278,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{}}}],["tslib",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typography",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["undefined",{"_index":752,"title":{},"body":{"interfaces/SignUp.html":{},"components/SignupComponent.html":{}}}],["up",{"_index":327,"title":{},"body":{"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"components/NavbarComponent.html":{},"interfaces/SignUp.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["updated",{"_index":721,"title":{},"body":{"components/NotificationComponent.html":{}}}],["updateloadersubject",{"_index":425,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloadersubject(loaderstate",{"_index":471,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloadersubject(true",{"_index":475,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject",{"_index":426,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject(`john",{"_index":478,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject(john",{"_index":482,"title":{},"body":{"injectables/CommonService.html":{}}}],["updateloggedinusersubject(loggedinuser",{"_index":476,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject",{"_index":427,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject(`hello",{"_index":488,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject(hello",{"_index":489,"title":{},"body":{"injectables/CommonService.html":{}}}],["updatenotificationsubject(notification",{"_index":485,"title":{},"body":{"injectables/CommonService.html":{}}}],["updating",{"_index":288,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["url",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/BackendService.html":{}}}],["use",{"_index":693,"title":{},"body":{"components/NavbarComponent.html":{}}}],["useclass",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interceptors/BackendInterceptor.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["user",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/PostDataComponent.html":{},"interfaces/RequestData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["user's",{"_index":481,"title":{},"body":{"injectables/CommonService.html":{},"components/NavbarComponent.html":{}}}],["username",{"_index":286,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CommonService.html":{},"interfaces/DecodedJWT.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"interfaces/ResponseData.html":{},"interfaces/SignIn.html":{},"interfaces/SignUp.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["username(username",{"_index":562,"title":{},"body":{"injectables/CommonService.html":{}}}],["username]{@link",{"_index":567,"title":{},"body":{"injectables/CommonService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["users",{"_index":371,"title":{},"body":{"injectables/BackendService.html":{},"components/SigninComponent.html":{}}}],["uses",{"_index":368,"title":{},"body":{"injectables/BackendService.html":{}}}],["utc",{"_index":610,"title":{},"body":{"components/GetDataComponent.html":{}}}],["v0.0.1",{"_index":837,"title":{},"body":{"index.html":{}}}],["value",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/BackendService.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":377,"title":{},"body":{"injectables/BackendService.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["variable",{"_index":622,"title":{},"body":{"components/GetDataComponent.html":{},"coverage.html":{}}}],["variables",{"_index":887,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variation",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["version",{"_index":843,"title":{},"body":{"index.html":{},"properties.html":{}}}],["very",{"_index":848,"title":{},"body":{"index.html":{}}}],["void",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/CommonService.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{}}}],["wdth",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["web",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"index.html":{}}}],["webkit",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["websocket",{"_index":362,"title":{},"body":{"injectables/BackendService.html":{},"components/WebSocketComponent.html":{},"miscellaneous/variables.html":{}}}],["websocketcomponent",{"_index":189,"title":{"components/WebSocketComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{},"components/NotificationComponent.html":{},"components/PostDataComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/WebSocketComponent.html":{},"coverage.html":{},"overview.html":{}}}],["websocketurl",{"_index":347,"title":{},"body":{"injectables/BackendService.html":{},"miscellaneous/variables.html":{}}}],["wght",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{},"components/NavbarComponent.html":{}}}],["white",{"_index":665,"title":{},"body":{"components/GetDataComponent.html":{}}}],["whole",{"_index":344,"title":{},"body":{"injectables/BackendService.html":{}}}],["width",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["without",{"_index":324,"title":{},"body":{"interceptors/BackendInterceptor.html":{}}}],["world",{"_index":414,"title":{},"body":{"injectables/BackendService.html":{},"injectables/CommonService.html":{}}}],["world!&#39",{"_index":491,"title":{},"body":{"injectables/CommonService.html":{}}}],["ws://:3000",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws://localhost:8080",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["xoxoxoxoxo",{"_index":664,"title":{},"body":{"components/GetDataComponent.html":{}}}],["z",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/GetDataComponent.html":{}}}],["zone.js",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is the root component of the application.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaderStatus\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            This is the constructor of the root component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to update the loader status.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:36\n                \n            \n\n\n            \n                \n                    This method is used to initialize the root component. It will check if the user is already logged in or not, to handle the page refresh and direct URL access. It will also subscribe to the loaderSubject to update the loaderStatus.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loaderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    This is used to show the loader on the screen. It will be shown when the value is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : appConstant.appName\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n            \n                \n                    This is the title of the application. It will be shown on the browser tab.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonService } from './services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This is the root component of the application.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  /**\n   * This is the constructor of the root component.\n   * @param { CommonService } commonService is used to update the loader status.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This is used to show the loader on the screen. It will be shown when the value is true.\n   * @default false\n   * @type { boolean }\n   */\n  loaderStatus: boolean = false;\n\n  /**\n   * This is the title of the application. It will be shown on the browser tab.\n   * @type { string }\n   */\n  title: string = appConstant.appName;\n\n  /**\n   * This method is used to initialize the root component. It will check if the user is already logged in or not, to handle the page refresh and direct URL access. It will also subscribe to the [loaderSubject]{@link CommonService#loaderSubject} to update the [loaderStatus]{@link loaderStatus}.\n   */\n  ngOnInit(): void {\n    this.commonService.checkSavedCredentials();\n    this.commonService.loaderSubject$.subscribe((loaderStatus: boolean) => {\n      this.loaderStatus = loaderStatus;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Base Frontend\n    \n    \n    \n    \n    \n    \n    Loading...\n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .retro {\n  margin: 20px 20px;\n}\n\n@keyframes hue {\n  from {\n    -webkit-filter: hue-rotate(0deg);\n    text-shadow: -20px -20px hue-rotate(0deg);\n  }\n  to {\n    -webkit-filter: hue-rotate(-360deg);\n    text-shadow: -5px -5px hue-rotate(-360deg);\n  }\n}\n\n.typography {\n  text-align: center;\n  font-size: 100px !important;\n  font-variation-settings: \"wght\" 450, \"wdth\" 180 !important;\n  margin: 20px 0px;\n\n  background-image: -webkit-linear-gradient(90deg, #f35626, #feab3a);\n  text-shadow: -5px -5px #feab3a;\n\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  -webkit-animation: hue 2s infinite cubic-bezier(0.165, 0.84, 0.44, 1)\n    alternate-reverse !important;\n}\n\nspan {\n  text-emphasis: \"x\";\n  background-image: -webkit-linear-gradient(90deg, #f35626, #feab3a);\n  text-shadow: -5px -5px #feab3a;\n}\n\n@media (max-width: 768px) {\n  .typography {\n    font-size: 80px !important;\n  }\n}\n\n@media (max-width: 500px) {\n  .typography {\n    font-size: 50px !important;\n  }\n}\n\n.highlight {\n  position: relative;\n}\n.highlight:before {\n  content: \"\";\n  background-color: black;\n  width: 100%;\n  transform: rotate(-2.5deg);\n  height: 0.9em;\n  position: absolute;\n  z-index: -111;\n  left: -0.45em;\n  top: 0.1em;\n  padding: 0 0.2em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Base Frontend                            Loading...            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGetDataComponent\n\nGetDataComponent\n\nAppModule -->\n\nGetDataComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nAppModule -->\n\nNotificationComponent->AppModule\n\n\n\n\n\nPostDataComponent\n\nPostDataComponent\n\nAppModule -->\n\nPostDataComponent->AppModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAppModule -->\n\nSigninComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nWebSocketComponent\n\nWebSocketComponent\n\nAppModule -->\n\nWebSocketComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nBackendInterceptor\n\nBackendInterceptor\n\nAppModule -->\n\nBackendInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GetDataComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotificationComponent\n                        \n                        \n                            PostDataComponent\n                        \n                        \n                            SigninComponent\n                        \n                        \n                            SignupComponent\n                        \n                        \n                            WebSocketComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthGuard\n                        \n                        \n                            BackendInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { GetDataComponent } from './components/get-data/get-data.component';\nimport { PostDataComponent } from './components/post-data/post-data.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NotificationComponent } from './components/notification/notification.component';\nimport { BackendInterceptor } from './services/backend.interceptor';\nimport { AuthGuard } from './services/auth.guard';\nimport { WebSocketComponent } from './components/web-socket/web-socket.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SigninComponent,\n    SignupComponent,\n    GetDataComponent,\n    PostDataComponent,\n    NavbarComponent,\n    NotificationComponent,\n    WebSocketComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: BackendInterceptor,\n      multi: true,\n    },\n    AuthGuard,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SigninComponent } from './components/signin/signin.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { PostDataComponent } from './components/post-data/post-data.component';\nimport { GetDataComponent } from './components/get-data/get-data.component';\nimport { AuthGuard } from './services/auth.guard';\n\n/**\n * This is the routes constant. It contains all the routes of the application.\n */\nconst routes: Routes = [\n  {\n    path: 'signin',\n    component: SigninComponent,\n  },\n  {\n    path: 'signup',\n    component: SignupComponent,\n  },\n  {\n    path: 'post-data',\n    component: PostDataComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'get-data', component: GetDataComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the auth guard service class. It is used to check if the user is logged in or not logged in.\nThis auth guard is used to protect the get data screen and post data screen.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            This is the constructor of the auth guard class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to get the loggedInUserSubject observable. It is used to check if the user is logged in or not logged in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.guard.ts:24\n                \n            \n\n\n            \n                \n                    This method is used to check if the user is logged in or not logged in. It will return true if the user is logged in, else, it will return false.\nThis auth guard is used to protect the get data and post data routes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the route to be activated i.e. the route user is trying to access.\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the state of the route to be activated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        a boolean value. If the user is logged in, returning true, else, returning false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { CommonService } from './common.service';\n\n/**\n * This is the auth guard service class. It is used to check if the user is logged in or not logged in.\n * This auth guard is used to protect the get data screen and post data screen.\n */\n@Injectable()\nexport class AuthGuard {\n  /**\n   * This is the constructor of the auth guard class.\n   * @param commonService is used to get the [loggedInUserSubject]{@link CommonService#loggedInUserSubject} observable. It is used to check if the user is logged in or not logged in.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This method is used to check if the user is logged in or not logged in. It will return true if the user is logged in, else, it will return false.\n   * This auth guard is used to protect the get data and post data routes.\n   * @param route is the route to be activated i.e. the route user is trying to access.\n   * @param state is the state of the route to be activated\n   * @returns a boolean value. If the user is logged in, returning true, else, returning false.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    /**\n     * By default, assuming that the user is not logged in.\n     */\n    let value: boolean = false;\n    /**\n     * Subscribing to the [loggedInUserSubject]{@link CommonService#loggedInUserSubject} observable.\n     * If the user is logged in it would mean that user has a username stored in loggedInUserSubject.\n     * If the user is logged in, updating the value to true. For any error, logging the error.\n     */\n    this.commonService.loggedInUserSubject.subscribe({\n      next: (loggedInUser: string) => {\n        if (loggedInUser.length > 0) {\n          value = true;\n        }\n      },\n      error: (error: any) => {\n        this.commonService.logger(error);\n      },\n    });\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/BackendInterceptor.html":{"url":"interceptors/BackendInterceptor.html","title":"interceptor - BackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  BackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the backend interceptor. It is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            This is the constructor of the backend interceptor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to get the token from the session storage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.interceptor.ts:27\n                \n            \n\n\n            \n                \n                    This method is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the request to be sent to the backend.\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the next handler in the chain.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CommonService } from './common.service';\n\n/**\n * This is the backend interceptor. It is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n */\n@Injectable()\nexport class BackendInterceptor implements HttpInterceptor {\n  /**\n   * This is the constructor of the backend interceptor.\n   * @param commonService is used to get the token from the session storage.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This method is used to intercept the API calls to the backend. It will add the authorization token to the headers of the API call.\n   * @param request is the request to be sent to the backend.\n   * @param next is the next handler in the chain.\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    /**  return next.handle(request); */ // This will send the request to the backend without any modification.\n\n    /**\n     * If the request is for sign in or sign up API, then there is no need to add the authorization token to the headers.\n     */\n    if (request.url.includes('signin') || request.url.includes('signup')) {\n      return next.handle(request);\n    }\n    const token: string = this.commonService.token;\n\n    /**\n     * Attaching the authorization token to the headers of the every other backend requests.\n     */\n    return next.handle(\n      request.clone({\n        setHeaders: { Authorization: `Bearer ${token.split(' ')[1]}` },\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendService.html":{"url":"injectables/BackendService.html","title":"injectable - BackendService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/backend.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the service class for the backend. It is used to make the API calls to the backend. It is injected in the app.module.ts file as it is used in the whole application for making the API calls.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backendUrl\n                            \n                            \n                                websocketUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleGetData\n                            \n                            \n                                handleGetWebSocketData\n                            \n                            \n                                handlePostData\n                            \n                            \n                                handleSignIn\n                            \n                            \n                                handleSignOut\n                            \n                            \n                                handleSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/backend.service.ts:16\n                            \n                        \n\n                \n                    \n                            This is the constructor of the service class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API calls.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleGetData\n                        \n                    \n                \n            \n            \n                \nhandleGetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:79\n                \n            \n\n\n            \n                \n                    This method is used to get all the data from the backend.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleGetWebSocketData\n                        \n                    \n                \n            \n            \n                \nhandleGetWebSocketData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:94\n                \n            \n\n\n            \n                \n                    This method is used to get message from websocket.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handlePostData\n                        \n                    \n                \n            \n            \n                \nhandlePostData(data: RequestData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RequestData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the data to be sent to the backend.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignIn\n                        \n                    \n                \n            \n            \n                \nhandleSignIn(data: SignIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:40\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign in API call to the backend. It uses POST method to send the data to the backend. It signs in existing users.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SignIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the data to be sent to the backend.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignOut\n                        \n                    \n                \n            \n            \n                \nhandleSignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:69\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign out API call to the backend. It uses get method to send the data to the backend. It signs out the logged in user.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignUp\n                        \n                    \n                \n            \n            \n                \nhandleSignUp(data: SignUp)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/backend.service.ts:55\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign up API call to the backend. It uses post method to send the data to the backend. It creates a new user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                SignUp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backendUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.backendUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/backend.service.ts:27\n                        \n                    \n\n            \n                \n                    This is the URL for the backend. This will be picked from the current environment.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        websocketUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.backendUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/backend.service.ts:33\n                        \n                    \n\n            \n                \n                    This is the URL for the websocket. This will be picked from the current environment.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { SignIn } from '../models/SignIn.model';\nimport { SignUp } from '../models/SignUp.model';\nimport { RequestData } from '../models/RequestData.model';\n\nimport { apiPathConstant } from 'src/constants/apiPath.constant';\n\n/**\n * This is the service class for the backend. It is used to make the API calls to the backend. It is injected in the [app.module.ts]{@link AppModule} file as it is used in the whole application for making the API calls.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BackendService {\n  /**\n   * This is the constructor of the service class.\n   * @param {HttpClient} httpClient is used to make the API calls.\n   */\n  constructor(private httpClient: HttpClient) {}\n\n  /**\n   * This is the URL for the backend. This will be picked from the current environment.\n   * @type {string}\n   */\n  backendUrl: string = environment.backendUrl;\n\n  /**\n   * This is the URL for the websocket. This will be picked from the current environment.\n   * @type {string}\n   */\n  websocketUrl: string = environment.backendUrl;\n\n  /**\n   * This method is used to handle the sign in API call to the backend. It uses POST method to send the data to the backend. It signs in existing users.\n   * @param {SignIn} data is the data to be sent to the backend.\n   * @returns the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n   */\n  handleSignIn(data: SignIn) {\n    return this.httpClient.post(\n      this.backendUrl + apiPathConstant.signIn,\n      data,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  /**\n   * This method is used to handle the sign up API call to the backend. It uses post method to send the data to the backend. It creates a new user.\n   * @param {SignUp} data\n   * @returns the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n   */\n  handleSignUp(data: SignUp) {\n    return this.httpClient.post(\n      this.backendUrl + apiPathConstant.signUp,\n      data,\n      {\n        observe: 'response',\n      }\n    );\n  }\n\n  /**\n   * This method is used to handle the sign out API call to the backend. It uses get method to send the data to the backend. It signs out the logged in user.\n   * @returns the response from the backend in the form of an observable. Normally, the response body is returned by the API call. But, in this case, response header values are required for getting authorization token set by backend. Therefore, setting the observe: 'response' option.\n   */\n  handleSignOut() {\n    return this.httpClient.get(this.backendUrl + apiPathConstant.signOut, {\n      observe: 'response',\n    });\n  }\n\n  /**\n   * This method is used to get all the data from the backend.\n   * @returns the response from the backend in the form of an observable.\n   */\n  handleGetData() {\n    return this.httpClient.get(this.backendUrl + apiPathConstant.data);\n  }\n\n  /**\n   * @param {RequestData} data is the data to be sent to the backend.\n   * @returns the response from the backend in the form of an observable.\n   */\n  handlePostData(data: RequestData) {\n    return this.httpClient.post(this.backendUrl + apiPathConstant.data, data);\n  }\n\n  /**\n   * This method is used to get message from websocket.\n   */\n  handleGetWebSocketData() {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/common.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the common service. It has the methods and shared observables that are used throughout the application. Therefore, it is injected in the app.module.ts file.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loaderSubject\n                            \n                            \n                                loaderSubject$\n                            \n                            \n                                loggedInUserSubject\n                            \n                            \n                                loggedInUserSubject$\n                            \n                            \n                                notificationSubject\n                            \n                            \n                                notificationSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkSavedCredentials\n                            \n                            \n                                decodeToken\n                            \n                            \n                                logger\n                            \n                            \n                                signOut\n                            \n                            \n                                updateLoaderSubject\n                            \n                            \n                                updateLoggedInUserSubject\n                            \n                            \n                                updateNotificationSubject\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                                \n                                    username\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, backendService: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/common.service.ts:15\n                            \n                        \n\n                \n                    \n                            This is the constructor of the CommonService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to navigate the user to different pages.\n\n                                                        \n                                                \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to call the backend APIs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkSavedCredentials\n                        \n                    \n                \n            \n            \n                \ncheckSavedCredentials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:214\n                \n            \n\n\n            \n                \n                    This method is used to check if the user has already signed in. It will check if the token and username are present in the session storage. If they are present, it will set the token and username.\nFor additional security, it will also check if the username in the token matches the username in the session storage. If they do not match, it will call the signOut method.\nIt will try to decode the token. If an error occurs while decoding the token, it will call the signOut method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeToken\n                        \n                    \n                \n            \n            \n                \ndecodeToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:159\n                \n            \n\n\n            \n                \n                    This method is used to decode the JWT. It will return the decoded JWT. If the token is empty, it will return default response. If while decoding the JWT, an error occurs, it will call the signOut method and return default response.\ndecodeToken(jwt);\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the JWT to be decoded.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            decodeToken(jwt);\n                        \n                    \n                    \n                        Returns :         DecodedJWT\n\n                    \n                    \n                        the decoded JWT.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:257\n                \n            \n\n\n            \n                \n                    This method is used to log messages to the console. It will not log anything in production mode. It will also not log anything if the message is empty.\nlogger(`Something happened.`); // This will log 'Something happened.' to the console.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the message to be logged.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            logger(Something happened.); // This will log &#39;Something happened.&#39; to the console.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:114\n                \n            \n\n\n            \n                \n                    This method is used to sign out the signed in user. It will call the handleSignOut method. It will also clear the token and username from the session storage. After that, it will navigate the user to the sign in page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLoaderSubject\n                        \n                    \n                \n            \n            \n                \nupdateLoaderSubject(loaderState: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:39\n                \n            \n\n\n            \n                \n                    This method is used to update the loaderSubject. It will update the loaderSubject with the value of the loaderState parameter.\nupdateLoaderSubject(true); // This will update the loaderSubject with true.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loaderState\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the state of the loader.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            updateLoaderSubject(true); // This will update the loaderSubject with true.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLoggedInUserSubject\n                        \n                    \n                \n            \n            \n                \nupdateLoggedInUserSubject(loggedInUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:91\n                \n            \n\n\n            \n                \n                    This method is used to update the loggedInUserSubject. It will update the loggedInUserSubject with the value of the loggedInUser parameter.\nupdateLoggedInUserSubject(`John Doe`); // This will update the loggedInUserSubject with 'John Doe'.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the logged in user's name which is to be shown on the screen.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            updateLoggedInUserSubject(John Doe); // This will update the loggedInUserSubject with &#39;John Doe&#39;.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNotificationSubject\n                        \n                    \n                \n            \n            \n                \nupdateNotificationSubject(notification: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/common.service.ts:65\n                \n            \n\n\n            \n                \n                    This method is used to update the notificationSubject. It will update the notificationSubject with the value of the notification parameter.\nupdateNotificationSubject(`Hello world!`); // This will update the notificationSubject with 'Hello world!'.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    notification\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the notification to be shown on the screen.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            updateNotificationSubject(Hello world!); // This will update the notificationSubject with &#39;Hello world!&#39;.\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loaderSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:27\n                        \n                    \n\n            \n                \n                    This is the loader subject. It is used to show the loader on the screen. It is initialized with false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaderSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loaderSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:31\n                        \n                    \n\n            \n                \n                    This is the loader subject observable. This is used to subscribe to the loaderSubject.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    ''\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:77\n                        \n                    \n\n            \n                \n                    This is the logged in user subject. It is used to show the logged in user's name on the screen. It is initialized with an empty string.\nloggedInUserSubject.subscribe((loggedInUser: string) => {\n// Do something with the logged in user name.\n});\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUserSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loggedInUserSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:83\n                        \n                    \n\n            \n                \n                    This is the logged in user subject observable. This is used to subscribe to the loggedInUserSubject.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificationSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    ''\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:51\n                        \n                    \n\n            \n                \n                    This is the notification subject. It is used to show the notification on the screen. It is initialized with an empty string.\nnotificationSubject.subscribe((notification: string) => {\n // Do something with the notification.\n});\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificationSubject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.notificationSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/common.service.ts:57\n                        \n                    \n\n            \n                \n                    This is the notification subject observable. This is used to subscribe to the notificationSubject.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:107\n                                \n                            \n                    \n                        \n                                This is used to get the token from the session storage. If the token is not present in the session storage, it will return an empty string.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        settoken(token: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:99\n                                \n                            \n                    \n                        \n                                This is used to set the token in the session storage.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            token\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    is the token to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:205\n                                \n                            \n                    \n                        \n                                This is used to get the username from the session storage. If the username is not present in the session storage, it will return an empty string.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setusername(username: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/common.service.ts:196\n                                \n                            \n                    \n                        \n                                This is used to set the username in the session storage. It will also update the loggedInUserSubject.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            username\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    is the username to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, finalize } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BackendService } from './backend.service';\nimport { environment } from 'src/environments/environment';\nimport { appConstant } from 'src/constants/app.constant';\nimport { DecodedJWT } from '../models/decodedJWT.model';\n\n/**\n * This is the common service. It has the methods and shared observables that are used throughout the application. Therefore, it is injected in the [app.module.ts]{@link AppModule} file.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommonService {\n  /**\n   * This is the constructor of the [CommonService]{@link CommonService} class.\n   * @param {Router} router is used to navigate the user to different pages.\n   * @param {BackendService} backendService is used to call the backend APIs.\n   */\n  constructor(private router: Router, private backendService: BackendService) {}\n\n  /**\n   * This is the loader subject. It is used to show the loader on the screen. It is initialized with `false`.\n   * @type {BehaviorSubject}\n   */\n  loaderSubject: BehaviorSubject = new BehaviorSubject(false);\n  /**\n   * This is the loader subject observable. This is used to subscribe to the [loaderSubject]{@link loaderSubject}.\n   */\n  loaderSubject$ = this.loaderSubject.asObservable();\n\n  /**\n   * This method is used to update the [loaderSubject]{@link loaderSubject}. It will update the [loaderSubject]{@link loaderSubject} with the value of the `loaderState` parameter.\n   * @param {boolean} loaderState is the state of the loader.\n   * @example\n   * updateLoaderSubject(true); // This will update the loaderSubject with true.\n   */\n  updateLoaderSubject(loaderState: boolean) {\n    this.loaderSubject.next(loaderState);\n  }\n\n  /**\n   * This is the notification subject. It is used to show the notification on the screen. It is initialized with an empty string.\n   * @type {BehaviorSubject}\n   * @example\n   * notificationSubject.subscribe((notification: string) => {\n   *  // Do something with the notification.\n   * });\n   */\n  notificationSubject: BehaviorSubject = new BehaviorSubject(\n    ''\n  );\n  /**\n   * This is the notification subject observable. This is used to subscribe to the [notificationSubject]{@link notificationSubject}.\n   */\n  notificationSubject$ = this.notificationSubject.asObservable();\n\n  /**\n   * This method is used to update the [notificationSubject]{@link notificationSubject}. It will update the [notificationSubject]{@link notificationSubject} with the value of the `notification` parameter.\n   * @param {string} notification is the notification to be shown on the screen.\n   * @example\n   * updateNotificationSubject(`Hello world!`); // This will update the notificationSubject with 'Hello world!'.\n   */\n  updateNotificationSubject(notification: string) {\n    this.notificationSubject.next(notification);\n  }\n\n  /**\n   * This is the logged in user subject. It is used to show the logged in user's name on the screen. It is initialized with an empty string.\n   * @type {BehaviorSubject}\n   * @example\n   * loggedInUserSubject.subscribe((loggedInUser: string) => {\n   * // Do something with the logged in user name.\n   * });\n   */\n  loggedInUserSubject: BehaviorSubject = new BehaviorSubject(\n    ''\n  );\n  /**\n   * This is the logged in user subject observable. This is used to subscribe to the [loggedInUserSubject]{@link loggedInUserSubject}.\n   */\n  loggedInUserSubject$ = this.loggedInUserSubject.asObservable();\n\n  /**\n   * This method is used to update the [loggedInUserSubject]{@link loggedInUserSubject}. It will update the [loggedInUserSubject]{@link loggedInUserSubject} with the value of the `loggedInUser` parameter.\n   * @param {string} loggedInUser is the logged in user's name which is to be shown on the screen.\n   * @example\n   * updateLoggedInUserSubject(`John Doe`); // This will update the loggedInUserSubject with 'John Doe'.\n   */\n  updateLoggedInUserSubject(loggedInUser: string) {\n    this.loggedInUserSubject.next(loggedInUser);\n  }\n\n  /**\n   * This is used to set the token in the session storage.\n   * @param {string} token is the token to be set.\n   */\n  set token(token: string) {\n    sessionStorage.setItem(appConstant.authorizationHeaderKey, token);\n  }\n\n  /**\n   * This is used to get the token from the session storage. If the token is not present in the session storage, it will return an empty string.\n   * @type {string}\n   */\n  get token(): string {\n    return sessionStorage.getItem(appConstant.authorizationHeaderKey) || '';\n  }\n\n  /**\n   * This method is used to sign out the signed in user. It will call the [handleSignOut]{@link BackendService#handleSignOut} method. It will also clear the token and username from the session storage. After that, it will navigate the user to the sign in page.\n   */\n  signOut() {\n    /**\n     * Resetting the token and username.\n     */\n    this.updateLoaderSubject(true);\n    this.token = '';\n    this.username = '';\n    sessionStorage.removeItem(appConstant.authorizationHeaderKey);\n    sessionStorage.removeItem('username');\n\n    /**\n     * Calling the [handleSignOut]{@link handleSignOut} method of the [backendService]{@link BackendService}. If the sign out is successful, it will update the [notificationSubject]{@link notificationSubject} with the message from the response. If an error occurs, it will update the [notificationSubject]{@link notificationSubject} with the error message.\n     */\n    this.backendService\n      .handleSignOut()\n      .pipe(\n        finalize(() => {\n          this.updateLoaderSubject(false);\n          this.router.navigate(['/signin']);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.updateNotificationSubject(\n            response?.body?.message ||\n              `${appConstant.success} ${appConstant.signOut}.`\n          );\n        },\n        error: (error: any) => {\n          this.logger(error);\n          this.updateNotificationSubject(\n            error.error?.message ||\n              `${appConstant.error} ${appConstant.signOut}.`\n          );\n        },\n      });\n  }\n\n  /**\n   * This method is used to decode the JWT. It will return the decoded JWT. If the token is empty, it will return default response. If while decoding the JWT, an error occurs, it will call the [signOut]{@link signOut} method and return default response.\n   * @param token is the JWT to be decoded.\n   * @example\n   * decodeToken(jwt);\n   * @returns { DecodedJWT } the decoded JWT.\n   */\n  decodeToken(token: string): DecodedJWT {\n    /**\n     * This is the default response. It will be returned if the token is empty or if an error occurs while decoding the JWT.\n     * @type { DecodedJWT }\n     */\n    let response: DecodedJWT = {\n      exp: 0,\n      iat: 0,\n      username: '',\n    };\n\n    /**\n     * If the token is empty, returning the default response.\n     */\n    if (!token) {\n      return response;\n    }\n    /**\n     * Trying to decode the JWT. If an error occurs, calling the [signOut]{@link signOut} method and returning the default response.\n     */\n    try {\n      const jwtPayload: string = token.split('.')[1];\n      const base64: string = jwtPayload.replace(/-/g, '+').replace(/_/g, '/');\n      const decodedPayload: any = JSON.parse(atob(base64));\n      response = decodedPayload;\n      return response;\n    } catch (error) {\n      this.signOut();\n      this.logger(error);\n      return response;\n    }\n  }\n\n  /**\n   * This is used to set the username in the session storage. It will also update the [loggedInUserSubject]{@link loggedInUserSubject}.\n   * @param {string} username is the username to be set.\n   */\n  set username(username: string) {\n    this.updateLoggedInUserSubject(username);\n    sessionStorage.setItem('username', username);\n  }\n\n  /**\n   * This is used to get the username from the session storage. If the username is not present in the session storage, it will return an empty string.\n   * @type {string}\n   */\n  get username(): string {\n    return sessionStorage.getItem('username') || '';\n  }\n\n  /**\n   * This method is used to check if the user has already signed in. It will check if the token and username are present in the session storage. If they are present, it will set the [token]{@link token} and [username]{@link username}.\n   * For additional security, it will also check if the username in the token matches the username in the session storage. If they do not match, it will call the [signOut]{@link signOut} method.\n   * It will try to decode the token. If an error occurs while decoding the token, it will call the [signOut]{@link signOut} method.\n   */\n  checkSavedCredentials() {\n    try {\n      const sessionStorageToken = sessionStorage.getItem(\n        appConstant.authorizationHeaderKey\n      );\n      const sessionStorageUsername = sessionStorage.getItem('username');\n\n      const decodedToken: DecodedJWT = this.decodeToken(\n        sessionStorageToken || ''\n      );\n\n      /**\n       * If the decoded token has username as empty, calling the [signOut]{@link signOut} method.\n       * If the username in the token does not match the username in the session storage, calling the [signOut]{@link signOut} method.\n       */\n      if (\n        !decodedToken.username ||\n        (decodedToken.username &&\n          decodedToken.username !== sessionStorageUsername)\n      ) {\n        this.signOut();\n        return;\n      }\n\n      /**\n       * If the token and username are present in the session storage, setting the [token]{@link token} and [username]{@link username}. This would handle the case when the user has already signed in and has not signed out i.e the user has closed the browser tab and opened the application again or the user has refreshed the page.\n       */\n      if (sessionStorageToken && sessionStorageUsername) {\n        this.token = sessionStorageToken;\n        this.username = sessionStorageUsername;\n      }\n    } catch (error) {\n      this.signOut();\n      this.logger(error);\n    }\n  }\n\n  /**\n   * This method is used to log messages to the console. It will not log anything in production mode. It will also not log anything if the message is empty.\n   * @param {any} message is the message to be logged.\n   * @example\n   * logger(`Something happened.`); // This will log 'Something happened.' to the console.\n   */\n  logger(message: any) {\n    if (environment.production || !message) {\n      return;\n    }\n    console.log(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecodedJWT.html":{"url":"interfaces/DecodedJWT.html","title":"interface - DecodedJWT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecodedJWT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/DecodedJWT.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the decoded JWT.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the expiration time of the JWT.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the issue time of the JWT.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username extracted from the JWT.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DecodedJWT {\n  /**\n   * This is the expiration time of the JWT.\n   */\n  exp: number;\n  /**\n   * This is the issue time of the JWT.\n   */\n  iat: number;\n  /**\n   * This is the username extracted from the JWT.\n   */\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GetDataComponent.html":{"url":"components/GetDataComponent.html","title":"component - GetDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GetDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/get-data/get-data.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show all the data from the backend.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-get-data\n            \n\n\n\n            \n                styleUrls\n                ./get-data.component.css\n            \n\n\n\n            \n                templateUrl\n                ./get-data.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDate\n                            \n                            \n                                handleGetData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/get-data/get-data.component.ts:16\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatDate\n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/get-data/get-data.component.ts:80\n                \n            \n\n\n            \n                \n                    This method is used to format the date in the format DD/MM/YYYY, HH:MM:SS AM/PM. It will return an empty string if the date is not present or if the date is invalid.\nformatDate('2023-08-01T21:08:40.472Z'); // This will return '8/2/2023, 2:38:40 AM'.\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        is the date to be formatted in UTC format.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            formatDate(&#39;2023-08-01T21:08:40.472Z&#39;); // This will return &#39;8/2/2023, 2:38:40 AM&#39;.\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the date in the format DD/MM/YYYY, HH:MM:SS AM/PM.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleGetData\n                        \n                    \n                \n            \n            \n                \nhandleGetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/get-data/get-data.component.ts:40\n                \n            \n\n\n            \n                \n                    This method is used to get all the data from the backend. It will call the handleGetData method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handleGetData to get the data from the backend. It will update the data with the data received from the backend. For error, it will reset data variable, show the error message on the screen and log the error in the console.\nIf the user is not logged in or the token is expired, then it will sign out the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResponseData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/get-data/get-data.component.ts:32\n                        \n                    \n\n            \n                \n                    This is the data to be shown on the screen. It is initialized with an empty array.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { ResponseData } from 'src/app/models/ResponseData.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This component is used to show all the data from the backend.\n */\n@Component({\n  selector: 'app-get-data',\n  templateUrl: './get-data.component.html',\n  styleUrls: ['./get-data.component.css'],\n})\nexport class GetDataComponent {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService\n  ) {}\n\n  /**\n   * This is the data to be shown on the screen. It is initialized with an empty array.\n   * @type {[]ResponseData}\n   * @default []\n   */\n  data: ResponseData[] = [];\n\n  /**\n   * This method is used to get all the data from the backend. It will call the [handleGetData]{@link BackendService#handleGetData} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handleGetData]{@link BackendService#handleGetData} to get the data from the backend. It will update the [data]{@link data} with the data received from the backend. For error, it will reset data variable, show the error message on the screen and log the error in the console.\n   * If the user is not logged in or the token is expired, then it will sign out the user.\n   */\n  handleGetData(): void {\n    this.commonService.updateLoaderSubject(true);\n    this.backendService\n      .handleGetData()\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.commonService.logger(response.data);\n          this.data = response.data;\n          this.commonService.updateNotificationSubject(\n            response?.message ||\n              `${appConstant.success} ${appConstant.getData}.`\n          );\n        },\n        error: (error: any) => {\n          this.data = [];\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message ||\n              `${appConstant.error} ${appConstant.getData}.`\n          );\n\n          if (error?.status === 401) {\n            this.commonService.signOut();\n          }\n        },\n      });\n  }\n\n  /**\n   * This method is used to format the date in the format DD/MM/YYYY, HH:MM:SS AM/PM. It will return an empty string if the date is not present or if the date is invalid.\n   * @param {Date} date is the date to be formatted in UTC format.\n   * @example\n   * formatDate('2023-08-01T21:08:40.472Z'); // This will return '8/2/2023, 2:38:40 AM'.\n   * @returns the date in the format DD/MM/YYYY, HH:MM:SS AM/PM.\n   */\n  formatDate(date: Date): string {\n    try {\n      if (!date) {\n        return '';\n      }\n      return new Date(date).toLocaleString();\n    } catch {\n      return '';\n    }\n  }\n}\n\n    \n\n    \n        \n  Get data\n  \n    \n      username {{ item.username }}\n      date {{ formatDate(item.createdAt) }}\n      title {{ item.title }}\n      article {{ item.article }}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./get-data.component.css\n                \n                .box {\n  border: 1px solid #000;\n  padding: 20px;\n}\n\n.data {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\nspan {\n  font-variation-settings: \"wght\" 350, \"wdth\" 120;\n}\n\n.highlight {\n  position: relative;\n}\n.highlight:after {\n  position: absolute;\n  content: \"xoxoxoxoxo\";\n  color: white;\n  text-align: center;\n  background-image: -webkit-linear-gradient(90deg, #3d3d3d, #9f9f9f);\n  width: min-content;\n  transform: rotate(8.5deg);\n  height: 1.9em;\n  z-index: -111;\n  top: 0.04em;\n  right: 0.45em;\n  padding: 0 0.2em;\n  text-emphasis: \"x\";\n  filter: blur(0.5px);\n}\n\n.highlight:nth-child(2n + 1):after {\n  transform: rotate(1.8deg);\n  left: -7.15em;\n  left: auto;\n}\n\n.highlight:nth-child(2n):after {\n  transform: rotate(-8.5deg);\n  left: -1.45em;\n  right: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Get data            username {{ item.username }}      date {{ formatDate(item.createdAt) }}      title {{ item.title }}      article {{ item.article }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GetDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the navigation bar on the screen.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggedInUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIsLoggedIn\n                            \n                            \n                                handleSignOut\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to update the loggedInUserSubject.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIsLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIsLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:44\n                \n            \n\n\n            \n                \n                    This method is used to check if the user is logged in or not. And, if user is not logged in, then it will not show the 'Sign out' button, 'Get data' and 'Post data' button on the screen. It would only show the 'Sign in' and 'Sign up' button.\nIt will subscribe to the loggedInUserSubject to get the logged in user's name. It will update the username or log error in the console.\nThis is also use to show the logged in user's name on the screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignOut\n                        \n                    \n                \n            \n            \n                \nhandleSignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:35\n                \n            \n\n\n            \n                \n                    This method is used to sign out the logged in user when user clicks on the 'Sign out' button. It will call the handleSignOut method.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:28\n                \n            \n\n\n            \n                \n                    This method is used to initialize the component. It will check if the user is logged in or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:23\n                        \n                    \n\n            \n                \n                    This is the logged in user's name. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonService } from 'src/app/services/common.service';\n\n/**\n * This component is used to show the navigation bar on the screen.\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  /**\n   * This is the constructor of this component.\n   * @param commonService is used to update the [loggedInUserSubject]{@link CommonService#loggedInUserSubject}.\n   */\n  constructor(private commonService: CommonService) {}\n  /**\n   * This is the logged in user's name. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  loggedInUser: string = '';\n\n  /**\n   * This method is used to initialize the component. It will check if the user is logged in or not.\n   */\n  ngOnInit(): void {\n    this.checkIsLoggedIn();\n  }\n\n  /**\n   * This method is used to sign out the logged in user when user clicks on the 'Sign out' button. It will call the [handleSignOut]{@link CommonService#handleSignOut} method.\n   */\n  handleSignOut(): void {\n    this.commonService.signOut();\n  }\n\n  /**\n   * This method is used to check if the user is logged in or not. And, if user is not logged in, then it will not show the 'Sign out' button, 'Get data' and 'Post data' button on the screen. It would only show the 'Sign in' and 'Sign up' button.\n   * It will subscribe to the [loggedInUserSubject]{@link CommonService#loggedInUserSubject} to get the logged in user's name. It will update the username or log error in the console.\n   * This is also use to show the logged in user's name on the screen.\n   */\n  checkIsLoggedIn(): void {\n    this.commonService.loggedInUserSubject.subscribe({\n      next: (loggedInUser: string) => {\n        this.loggedInUser = loggedInUser;\n      },\n      error: (error: any) => {\n        this.loggedInUser = '';\n        this.commonService.logger(error);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n   0\" [routerLink]=\"'/'\">{{\n    loggedInUser.length > 0\n      ? \" | \" +\n        loggedInUser.charAt(0).toUpperCase() +\n        loggedInUser.slice(1) +\n        \" | \"\n      : \" | Home | \"\n  }}\n   | Sign in | \n\n   | Sign up | \n\n   0\" [routerLink]=\"'/get-data'\">\n    | Get data |\n  \n\n   0\" [routerLink]=\"'/post-data'\">\n    | Post data |\n  \n\n   0\"\n    style=\"cursor: pointer\"\n    (click)=\"handleSignOut()\"\n  >\n    | Sign out |\n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                nav {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nnav > * {\n  font-variation-settings: \"wght\" 450, \"wdth\" 180 !important;\n}\n\nnav > a:not(:first-child) {\n  margin-left: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   0\" [routerLink]=\"\\'/\\'\">{{    loggedInUser.length > 0      ? \" | \" +        loggedInUser.charAt(0).toUpperCase() +        loggedInUser.slice(1) +        \" | \"      : \" | Home | \"  }}   | Sign in |    | Sign up |    0\" [routerLink]=\"\\'/get-data\\'\">    | Get data |     0\" [routerLink]=\"\\'/post-data\\'\">    | Post data |     0\"    style=\"cursor: pointer\"    (click)=\"handleSignOut()\"  >    | Sign out |  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationComponent.html":{"url":"components/NotificationComponent.html","title":"component - NotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/notification/notification.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the notification on the screen.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification\n            \n\n\n\n            \n                styleUrls\n                ./notification.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notification.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/notification/notification.component.ts:13\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to subscribe to the notificationSubject.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification/notification.component.ts:30\n                \n            \n\n\n            \n                \n                    This method is used to initialize the component. It will subscribe to the notificationSubject to get the updated notification to be shown on the screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        notification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/notification/notification.component.ts:25\n                        \n                    \n\n            \n                \n                    This is the notification to be shown on the screen. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonService } from 'src/app/services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This component is used to show the notification on the screen.\n */\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css'],\n})\nexport class NotificationComponent implements OnInit {\n  /**\n   * This is the constructor of this component.\n   * @param commonService is used to subscribe to the [notificationSubject]{@link CommonService#notificationSubject}.\n   */\n  constructor(private commonService: CommonService) {}\n\n  /**\n   * This is the notification to be shown on the screen. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  notification: string = '';\n\n  /**\n   * This method is used to initialize the component. It will subscribe to the [notificationSubject]{@link CommonService#notificationSubject} to get the updated notification to be shown on the screen.\n   */\n  ngOnInit(): void {\n    this.commonService.notificationSubject$.subscribe((notification: any) => {\n      this.notification = notification;\n      /**\n       * This is used to hide the notification after a certain time.\n       */\n      setTimeout(() => {\n        this.notification = '';\n      }, appConstant.hideNotifcationAfter);\n    });\n  }\n}\n\n    \n\n    \n        {{ notification }}\n\n    \n\n    \n                \n                    ./notification.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ notification }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostDataComponent.html":{"url":"components/PostDataComponent.html","title":"component - PostDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/post-data/post-data.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show form to send new data form on the screen to backend.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post-data\n            \n\n\n\n            \n                styleUrls\n                ./post-data.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post-data.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handlePostData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/post-data/post-data.component.ts:16\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handlePostData\n                        \n                    \n                \n            \n            \n                \nhandlePostData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/post-data/post-data.component.ts:47\n                \n            \n\n\n            \n                \n                    This method is used to handle sending data to the backend. It will call the handlePostData method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handlePostData to sennd the data to the backend. For error, it will show the error message on the screen and log the error in the console.\nIf the user is not logged in or the token is expired, then it will sign out the user.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        article\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/post-data/post-data.component.ts:32\n                        \n                    \n\n            \n                \n                    This is the article that is needed to be sent to the backend. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/post-data/post-data.component.ts:39\n                        \n                    \n\n            \n                \n                    This is the title that is needed to be sent to the backend. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { finalize } from 'rxjs';\nimport { RequestData } from 'src/app/models/RequestData.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This component is used to show form to send new data form on the screen to backend.\n */\n@Component({\n  selector: 'app-post-data',\n  templateUrl: './post-data.component.html',\n  styleUrls: ['./post-data.component.css'],\n})\nexport class PostDataComponent {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService\n  ) {}\n\n  /**\n   * This is the article that is needed to be sent to the backend. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  article: string = '';\n\n  /**\n   * This is the title that is needed to be sent to the backend. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  title: string = '';\n\n  /**\n   * This method is used to handle sending data to the backend. It will call the [handlePostData]{@link BackendService#handlePostData} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handlePostData]{@link BackendService#handlePostData} to sennd the data to the backend. For error, it will show the error message on the screen and log the error in the console.\n   * If the user is not logged in or the token is expired, then it will sign out the user.\n   */\n  handlePostData() {\n    /**\n     * This is the data to be sent to the backend.\n     * @type {RequestData}\n     */\n    const data: RequestData = {\n      title: this.title,\n      article: this.article,\n    };\n    this.commonService.updateLoaderSubject(true);\n    this.backendService\n      .handlePostData(data)\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          this.commonService.logger(response);\n          this.commonService.updateNotificationSubject(\n            response?.message ||\n              `${appConstant.success} ${appConstant.postData}.`\n          );\n        },\n        error: (error: any) => {\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message ||\n              `${appConstant.error} ${appConstant.postData}.`\n          );\n\n          if (error?.status === 401) {\n            this.commonService.signOut();\n          }\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      \n    \n  \n  Post data\n\n\n    \n\n    \n                \n                    ./post-data.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Post data'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestData.html":{"url":"interfaces/RequestData.html","title":"interface - RequestData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/RequestData.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            article\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        article\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        article:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the article provided by the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the title provided by the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RequestData {\n  /**\n   * This is the title provided by the user.\n   */\n  title: string;\n  /**\n   * This is the article provided by the user.\n   */\n  article: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseData.html":{"url":"interfaces/ResponseData.html","title":"interface - ResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ResponseData.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the response data that comes from the backend.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            article\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        article\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        article:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the article that comes from the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the created date that comes from the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the title that comes from the backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username that comes from the backend.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ResponseData {\n  /**\n   * This is the username that comes from the backend.\n   */\n  username: string;\n  /**\n   * This is the title that comes from the backend.\n   */\n  title: string;\n  /**\n   * This is the article that comes from the backend.\n   */\n  article: string;\n  /**\n   * This is the created date that comes from the backend.\n   */\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignIn.html":{"url":"interfaces/SignIn.html","title":"interface - SignIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/SignIn.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the sign in data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the password of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SignIn {\n  /**\n   * This is the username of the user.\n   */\n  username: string;\n  /**\n   * This is the password of the user.\n   */\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUp.html":{"url":"interfaces/SignUp.html","title":"interface - SignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/SignUp.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for the sign up data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    This is the email of the user. It is optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the password of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is the username of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SignUp {\n  /**\n   * This is the email of the user. It is optional.\n   * @optional\n   */\n  email?: string | undefined;\n  /**\n   * This is the username of the user.\n   */\n  username: string;\n  /**\n   * This is the password of the user.\n   */\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/signin/signin.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the sign in page on the screen. It is used to sign in the existing users.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signin\n            \n\n\n\n            \n                styleUrls\n                ./signin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleSignIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/signin/signin.component.ts:17\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used here to navigate the user to get data screen after successful sign in.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignIn\n                        \n                    \n                \n            \n            \n                \nhandleSignIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signin/signin.component.ts:51\n                \n            \n\n\n            \n                \n                    This method is used to sign in the existing user. It will call the handleSignIn method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handleSignIn to get the data from the backend. It will update the token and username with the data received from the backend.\nFor error, it will show the error message on the screen and log the error in the console.\nAfter successful sign in, it will navigate the user to the get data screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signin/signin.component.ts:42\n                        \n                    \n\n            \n                \n                    This is the password of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signin/signin.component.ts:35\n                        \n                    \n\n            \n                \n                    This is the username of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs';\nimport { SignIn } from 'src/app/models/SignIn.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This component is used to show the sign in page on the screen. It is used to sign in the existing users.\n */\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   * @param router is used here to navigate the user to get data screen after successful sign in.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService,\n    private router: Router\n  ) {}\n\n  /**\n   * This is the username of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  username: string = '';\n\n  /**\n   * This is the password of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  password: string = '';\n\n  /**\n   * This method is used to sign in the existing user. It will call the [handleSignIn]{@link BackendService#handleSignIn} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handleSignIn]{@link BackendService#handleSignIn} to get the data from the backend. It will update the [token]{@link CommonService#token} and [username]{@link CommonService#username} with the data received from the backend.\n   * For error, it will show the error message on the screen and log the error in the console.\n   * After successful sign in, it will navigate the user to the get data screen.\n   */\n  handleSignIn() {\n    /**\n     * Creating the data to be sent to the backend.\n     * @type {SignIn}\n     */\n    const data: SignIn = {\n      username: this.username,\n      password: this.password,\n    };\n    this.commonService.updateLoaderSubject(true);\n    this.backendService\n      .handleSignIn(data)\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          const accessToken: string = response.headers.get(\n            appConstant.authorizationHeaderKey\n          );\n          this.commonService.token = accessToken;\n          const decodedToken = this.commonService.decodeToken(accessToken);\n          this.commonService.logger(decodedToken);\n          this.commonService.username = decodedToken?.username;\n          this.router.navigate(['/get-data']);\n\n          this.commonService.updateNotificationSubject(\n            response?.body?.message ||\n              `${appConstant.success} ${appConstant.signIn}.`\n          );\n        },\n        error: (error: any) => {\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message ||\n              `${appConstant.error} ${appConstant.signIn}.`\n          );\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n  Sign in\n\n\n    \n\n    \n                \n                    ./signin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Sign in'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/signup/signup.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the sign up page on the screen. It is used to create a new user.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n\n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService, commonService: CommonService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/signup/signup.component.ts:17\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                                \n                                                        commonService\n                                                  \n                                                        \n                                                                        CommonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to show the notification and loader on the screen.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used here to navigate the user to the post data screen after successful sign up.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleSignUp\n                        \n                    \n                \n            \n            \n                \nhandleSignUp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:59\n                \n            \n\n\n            \n                \n                    This method is used to handle the sign up button click. It will call the handleSignUp method.\nIt will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\nIt subscribes to the handleSignUp to sign up the user. It will update the token and username in the commonService based on the response from the backend.\nFor error, it will show the error message on the screen and log the error in the console.\nAfter successful sign up, it will navigate the user to the post data screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:50\n                        \n                    \n\n            \n                \n                    This is the email of the user. It is initialized with an empty string. It is optional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:42\n                        \n                    \n\n            \n                \n                    This is the password of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup/signup.component.ts:35\n                        \n                    \n\n            \n                \n                    This is the username of the user. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs';\nimport { SignUp } from 'src/app/models/SignUp.model';\nimport { BackendService } from 'src/app/services/backend.service';\nimport { CommonService } from 'src/app/services/common.service';\nimport { appConstant } from 'src/constants/app.constant';\n\n/**\n * This component is used to show the sign up page on the screen. It is used to create a new user.\n */\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   * @param commonService is used to show the notification and loader on the screen.\n   * @param router is used here to navigate the user to the post data screen after successful sign up.\n   */\n  constructor(\n    private backendService: BackendService,\n    private commonService: CommonService,\n    private router: Router\n  ) {}\n\n  /**\n   * This is the username of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  username: string = '';\n\n  /**\n   * This is the password of the user. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  password: string = '';\n\n  /**\n   * This is the email of the user. It is initialized with an empty string. It is optional.\n   * @optional\n   * @type {string}\n   * @default ''\n   */\n  email: string = '';\n\n  /**\n   * This method is used to handle the sign up button click. It will call the [handleSignUp]{@link BackendService#handleSignUp} method.\n   * It will show the loader on the screen while the API call is in progress. After the API call is completed, it will hide the loader. It will show the notification on the screen based on the response from the backend.\n   * It subscribes to the [handleSignUp]{@link BackendService#handleSignUp} to sign up the user. It will update the [token]{@link CommonService#token} and [username]{@link CommonService#username} in the [commonService]{@link CommonService} based on the response from the backend.\n   * For error, it will show the error message on the screen and log the error in the console.\n   * After successful sign up, it will navigate the user to the post data screen.\n   */\n  handleSignUp() {\n    /**\n     * Creating the data object to be sent to the backend.\n     * @type {SignUp}\n     */\n    const data: SignUp = {\n      username: this.username,\n      password: this.password,\n      email: this.email ? this.email : undefined,\n    };\n    this.commonService.updateLoaderSubject(true);\n    this.backendService\n      .handleSignUp(data)\n      .pipe(\n        finalize(() => {\n          this.commonService.updateLoaderSubject(false);\n        })\n      )\n      .subscribe({\n        next: (response: any) => {\n          const accessToken: string = response.headers.get('Authorization');\n          this.commonService.token = accessToken;\n          const decodedToken = this.commonService.decodeToken(accessToken);\n          this.commonService.username = decodedToken?.username;\n          this.router.navigate(['/post-data']);\n\n          this.commonService.updateNotificationSubject(\n            response?.message || `${appConstant.success} ${appConstant.signUp}.`\n          );\n        },\n        error: (error: any) => {\n          this.commonService.logger(error);\n          this.commonService.updateNotificationSubject(\n            error.error?.message ||\n              `${appConstant.error} ${appConstant.signUp}.`\n          );\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  Sign up\n\n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                Sign up'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WebSocketComponent.html":{"url":"components/WebSocketComponent.html","title":"component - WebSocketComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WebSocketComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/web-socket/web-socket.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is used to show the message from the connected websocket.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-web-socket\n            \n\n\n\n            \n                styleUrls\n                ./web-socket.component.css\n            \n\n\n\n            \n                templateUrl\n                ./web-socket.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(backendService: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/web-socket/web-socket.component.ts:11\n                            \n                        \n\n                \n                    \n                            This is the constructor of this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        backendService\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                is used to make the API call to the backend.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/web-socket/web-socket.component.ts:30\n                \n            \n\n\n            \n                \n                    This method is used to initialize the component. It will connect to the websocket.\nIt will subscribe to the handleGetWebSocketData to get the message from the websocket. It will update the message with the data received from the websocket.\nFor error, it will log the error in the console.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/web-socket/web-socket.component.ts:23\n                        \n                    \n\n            \n                \n                    This is the message from the connected websocket. It is initialized with an empty string.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BackendService } from 'src/app/services/backend.service';\n/**\n * This component is used to show the message from the connected websocket.\n */\n@Component({\n  selector: 'app-web-socket',\n  templateUrl: './web-socket.component.html',\n  styleUrls: ['./web-socket.component.css'],\n})\nexport class WebSocketComponent implements OnInit {\n  /**\n   * This is the constructor of this component.\n   * @param backendService is used to make the API call to the backend.\n   */\n  constructor(private backendService: BackendService) {}\n\n  /**\n   * This is the message from the connected websocket. It is initialized with an empty string.\n   * @type {string}\n   * @default ''\n   */\n  message: string = '';\n\n  /**\n   * This method is used to initialize the component. It will connect to the websocket.\n   * It will subscribe to the [handleGetWebSocketData]{@link BackendService#handleGetWebSocketData} to get the message from the websocket. It will update the [message]{@link message} with the data received from the websocket.\n   * For error, it will log the error in the console.\n   */\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        {{ message }}\n\n    \n\n    \n                \n                    ./web-socket.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ message }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GetDataComponent', 'selector': 'app-get-data'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'PostDataComponent', 'selector': 'app-post-data'},{'name': 'SigninComponent', 'selector': 'app-signin'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'WebSocketComponent', 'selector': 'app-web-socket'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WebSocketComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/get-data/get-data.component.ts\n            \n            component\n            GetDataComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/notification/notification.component.ts\n            \n            component\n            NotificationComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/post-data/post-data.component.ts\n            \n            component\n            PostDataComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/signin/signin.component.ts\n            \n            component\n            SigninComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/web-socket/web-socket.component.ts\n            \n            component\n            WebSocketComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/DecodedJWT.model.ts\n            \n            interface\n            DecodedJWT\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/RequestData.model.ts\n            \n            interface\n            RequestData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/ResponseData.model.ts\n            \n            interface\n            ResponseData\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/SignIn.model.ts\n            \n            interface\n            SignIn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/SignUp.model.ts\n            \n            interface\n            SignUp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/backend.interceptor.ts\n            \n            interceptor\n            BackendInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            injectable\n            BackendService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/constants/apiPath.constant.ts\n            \n            variable\n            apiPathConstant\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants/app.constant.ts\n            \n            variable\n            appConstant\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.production.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.0\n        \n            @angular/common : ^16.0.0\n        \n            @angular/compiler : ^16.0.0\n        \n            @angular/core : ^16.0.0\n        \n            @angular/forms : ^16.0.0\n        \n            @angular/platform-browser : ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^16.0.0\n        \n            @angular/router : ^16.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBase Frontend v0.0.1\n\n\nIntroduction\nThis project was generated with Angular CLI version 16.0.2.\nThis application serves as the frontend for base-node-server application.\nThis is a very basic single page web application created to test out the base-node-server in the browser. It has been documented, but I always strive to do better.\nRunning the application\nRun ng serve or npm run development for development server. Run npm run production for production server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nDocumentation for the application\nRun npm run compdoc for generating documentation. Navigate to http://127.0.0.1:5500/frontend/documentation/index.html for the documentation.\nBuilding the application (for production)\nRun npm build for generating production build files. Navigate to dist folder to see the files.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGetDataComponent\n\nGetDataComponent\n\nAppModule -->\n\nGetDataComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nAppModule -->\n\nNotificationComponent->AppModule\n\n\n\n\n\nPostDataComponent\n\nPostDataComponent\n\nAppModule -->\n\nPostDataComponent->AppModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAppModule -->\n\nSigninComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nWebSocketComponent\n\nWebSocketComponent\n\nAppModule -->\n\nWebSocketComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nBackendInterceptor\n\nBackendInterceptor\n\nAppModule -->\n\nBackendInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiPathConstant   (src/.../apiPath.constant.ts)\n                        \n                        \n                            appConstant   (src/.../app.constant.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.production.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants/apiPath.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiPathConstant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  signUp: '/signup',\n  signIn: '/signin',\n  signOut: '/signout',\n  data: '/data',\n  websocket: '/websocket',\n}\n                    \n                \n\n            \n                \n                    These are the API path constants.\n\n                \n            \n\n        \n    \n\n    src/constants/app.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConstant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  appName: 'Angular App',\n  hideNotifcationAfter: 5000,\n  authorizationHeaderKey: 'Authorization',\n  success: 'Success',\n  error: 'Error',\n  signUp: '- signing up',\n  signIn: '- signing in',\n  signOut: '- signing out',\n  getData: '- getting data',\n  postData: '- posting data',\n}\n                    \n                \n\n            \n                \n                    These are the common app constants.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  backendUrl: 'http://localhost:3000/api',\n  websocketUrl: 'ws://localhost:8080',\n  production: false,\n}\n                    \n                \n\n            \n                \n                    This is the environment file for the development environment.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  backendUrl: 'http://:3000/api',\n  websocketUrl: 'ws://:3000',\n  production: true,\n}\n                    \n                \n\n            \n                \n                    This is the environment file for the production environment.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  backendUrl: '',\n  websocketUrl: '',\n  production: false,\n}\n                    \n                \n\n            \n                \n                    This is the environment file for the default environment.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
